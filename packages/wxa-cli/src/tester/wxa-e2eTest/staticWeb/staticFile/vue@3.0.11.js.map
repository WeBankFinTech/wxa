{"version":3,"sources":["../../../../../src/tester/wxa-e2eTest/staticWeb/staticFile/vue@3.0.11.js"],"names":["Vue","map","Object","list","str","i","expectsLowerCase","val","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","start","end","source","lines","count","res","j","line","Math","String","lineLength","pad","length","specialBooleanAttrs","isSpecialBooleanAttr","isArray","value","item","normalized","normalizeStyle","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","ret","cssText","tmp","normalizeClass","name","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","a","b","equal","looseEqual","aValidType","isDate","bValidType","looseCompareArrays","aKeysCount","bKeysCount","aHasKey","bHasKey","arr","toDisplayString","JSON","replacer","isMap","entries","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","key","isModelListener","extend","remove","hasOwnProperty","hasOwn","Array","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","hit","camelizeRE","camelize","c","hyphenateRE","hyphenate","capitalize","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","def","configurable","enumerable","toNumber","n","parseFloat","isNaN","getGlobalThis","_globalThis","targetMap","effectStack","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","options","isEffect","effect","createReactiveEffect","cleanup","uid","enableTracking","activeEffect","resetTracking","deps","shouldTrack","trackStack","last","depsMap","dep","effects","add","effectsToAdd","type","run","oldTarget","isNonTrackableKeys","builtInSymbols","get","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","method","toRaw","l","track","args","pauseTracking","isReadonly","shallow","receiver","targetIsArray","Reflect","isRef","shouldUnwrap","readonly","reactive","set","createSetter","shallowSet","target","hadKey","Number","result","trigger","mutableHandlers","ownKeys","readonlyHandlers","console","deleteProperty","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","isShallow","rawTarget","rawKey","has","wrap","proto","checkIdentityKeys","hadItems","observed","callback","targetIsMap","isPair","isKeyOnly","innerIterator","next","done","mutableInstrumentations","get$1","size","delete","forEach","createForEach","shallowInstrumentations","readonlyInstrumentations","has$1","createReadonlyMethod","clear","shallowReadonlyInstrumentations","iteratorMethods","createIterableMethod","instrumentations","mutableCollectionHandlers","createInstrumentationGetter","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","reactiveMap","shallowReactiveMap","readonlyMap","shallowReadonlyMap","targetTypeMap","createReactiveObject","existingProxy","proxyMap","targetType","getTargetType","proxy","isReactive","convert","Boolean","r","createRef","constructor","_shallow","ref","shallowUnwrapHandlers","unref","factory","isProxy","object","toRef","lazy","scheduler","self","getter","setter","getterOrOptions","stack","instance","appWarnHandler","trace","getComponentTrace","callWithErrorHandling","msg","vnode","formatComponentName","warnArgs","formatTrace","currentVNode","normalizedStack","recurseCount","parentInstance","logs","formatTraceEntry","postfix","isRoot","open","close","formatProps","keys","formatProp","props","raw","ErrorTypeStrings","handleError","err","values","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","p","jobId","getId","middle","middleJobId","job","pos","findInsertionIndex","activeQueue","cb","index","pendingQueue","queueCb","parentJob","seen","checkRecursiveUpdates","flushPreFlushCbs","deduped","flushPostFlushCbs","flushJobs","isHmrUpdating","hmrDirtyComponents","globalObject","createRecord","tryWrap","rerender","reload","id","record","warn","component","isClassComponent","instances","newComp","queuePostFlushCb","queueJob","window","exports","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","propsOptions","event","validator","emitsOptions","isValid","modelArg","modifiersKey","trim","rawArgs","devtoolsComponentEmit","lowerCaseEvent","handlerName","handler","onceHandler","asMixin","appContext","comp","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","isRenderingCompiledSlot","setCompiledSlotRendering","slot","slots","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","fallback","child","isVNode","currentRenderingInstance","currentScopeId","prev","withScopeId","_id","ctx","renderFnWithContext","prevInstance","setCurrentRenderingInstance","closeBlock","accessedAttrs","proxyToUse","withProxy","normalizeVNode","render","fallthroughAttrs","attrs","markAttrsAccessed","emit","Component","getFunctionalFallthrough","root","setRoot","getChildRoot","shapeFlag","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","isElementRoot","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","children","singleRoot","patchFlag","emits","prevChildren","nextVNode","optimized","hasPropsChanged","dynamicProps","nextProps","prevProps","isEmitListener","nextChildren","nextKeys","parent","isSuspense","SuspenseImpl","__isSuspense","process","n1","mountSuspense","patchSuspense","hydrate","create","createSuspenseBoundary","Suspense","o","createElement","hiddenContainer","suspense","patch","setActiveBranch","um","n2","newBranch","newFallback","isHydrating","isSameVNodeType","unmount","activeBranch","onPending","pendingId","timeout","setTimeout","hasWarned","m","pendingBranch","isInFallback","isUnmounted","resolve","resume","container","delayEnter","move","anchor","hasUnresolvedAncestor","onResolve","isSVG","onFallback","mountFallback","fallbackVNode","registerDep","isInPendingSuspense","hydratedEl","asyncSetupResult","placeholder","setupRenderEffect","parentNode","node","document","hydrateNode","content","normalizeSuspenseSlot","s","singleChild","parentComponent","el","branch","updateHOCHostEl","isSSR","setFullProps","validateProps","rawProps","shallowReactive","rawCurrentProps","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","rawPrevProps","camelKey","needCastKeys","opt","hasDefault","defaultValue","propsDefaults","setCurrentInstance","extendProps","normalizePropsOptions","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","match","ctor","getType","expectedTypes","t","isSameType","resolvedValues","validateProp","required","types","expectedType","assertType","getInvalidTypeMessage","isSimpleType","valid","message","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","elem","prepend","hooks","wrappedHook","hook","apiName","createHook","lifecycle","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","doWatch","INITIAL_WATCHER_VALUE","onTrigger","immediate","deep","warnInvalidSource","forceTrigger","traverse","baseGetter","onInvalidate","runner","newValue","flush","queuePostRenderEffect","queuePreFlushCb","recordInstanceBoundEffect","stop","publicThis","state","isMounted","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","useTransitionState","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","prevTransitionKey","leavingHooks","leavingVNodesCache","getLeavingNodesForType","earlyRemove","BaseTransition","callHook","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","cancelled","leave","clone","isKeepAlive","keepComment","keyedFragmentCount","KeepAliveImpl","__isKeepAlive","include","exclude","max","sharedContext","current","parentSuspense","renderer","storageContainer","vnodeHook","invokeVNodeHook","resetShapeFlag","_unmount","getComponentName","filter","pruneCacheEntry","cached","watch","pruneCache","matches","pendingCacheKey","cacheSubtree","getInnerChild","da","rawVNode","cachedVNode","KeepAlive","pattern","registerKeepAliveHook","injectToKeepAliveRoot","injected","keepAliveRoot","isInternalKey","normalizeSlotValue","normalizeSlot","withCtx","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","default","isBuiltInDirective","internalInstance","bindings","directives","modifiers","dir","mounted","updated","oldBindings","prevVNode","binding","app","config","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","errorHandler","warnHandler","undefined","mixins","components","provides","uid$1","rootProps","context","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","use","plugin","mixin","validateComponentName","directive","validateDirectiveName","mount","isHydrate","rootContainer","devtoolsInitApp","devtoolsUnmountApp","provide","hasMismatch","isSVGContainer","isComment","mt","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","nextSibling","needToAdoptContent","hydrateFragment","hydrateElement","hydrateComponent","mountComponent","loadAsync","locateClosingAsyncAnchor","setRef","dirs","invokeDirectiveHook","patchProp","vnodeHooks","queueEffectWithSuspense","hydrateChildren","parentVNode","slotScopeIds","fragmentSlotScopeIds","insert","isSupported","perf","startTag","endTag","supported","isAsyncWrapper","loader","delay","suspensible","onError","userOnError","pendingRequest","retries","retry","load","thisRequest","userRetry","userFail","reject","defineComponent","__asyncLoader","createInnerComp","errorComponent","error","loaded","delayed","loadingComponent","allowRecurse","onTrack","e","rawRef","oldRawRef","oldRef","refs","owner","setupState","doSet","baseCreateRenderer","setDevtoolsHook","forcePatchProp","createText","setText","setElementText","setScopeId","hostSetScopeId","cloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","hostInsert","hostCreateText","hostSetText","hostCreateComment","hostNextSibling","removeStaticNode","moveStaticNode","hostRemove","mountElement","patchElement","hostCreateElement","hostSetElementText","mountChildren","hostPatchProp","needCallTransitionHooks","transition","subTree","cloneIfMounted","oldProps","newProps","patchProps","hostForcePatchProp","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","newChildren","oldVNode","oldChildren","newVNode","hostParentNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","endMeasure","shouldUpdateComponent","invalidateJob","renderComponentRoot","scopedInitialVNode","originNext","updateComponentPreRender","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","unmountChildren","oldLength","newLength","commonLength","nextChild","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","needTransition","moveType","afterLeave","performLeave","delayLeave","doRemove","shouldInvokeDirs","unmountComponent","removeFragment","performRemove","unregisterHMR","internals","mc","pc","pbc","createHydrationFns","createApp","createAppAPI","ch1","ch2","len","arrI","u","isTeleport","isTeleportDisabled","isTargetSVG","resolveTarget","targetSelector","select","TeleportImpl","__isTeleport","disabled","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","querySelector","targetNode","Teleport","COMPONENTS","DIRECTIVES","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","maybeSelfReference","selfName","registry","Fragment","Text","Comment","currentBlock","disableTracking","shouldTrack$1","vnodeArgsTransformer","createVNodeWithArgsTransform","_createVNode","InternalObjectKey","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","class","style","klass","__v_isVNode","scopeId","ssContent","ssFallback","staticCount","normalizeSuspenseChildren","mergeRef","mergedProps","extraProps","mergeProps","text","flag","asBlock","slotFlag","_ctx","createTextVNode","toMerge","existing","incoming","currentInstance","parentProvides","treatDefaultAsFactory","arguments","shouldCacheAccess","deferredData","deferredWatch","deferredProvide","extends","data","computed","inject","expose","globalMixins","callSyncHook","applyMixins","applyOptions","checkDuplicateProperties","createDuplicateChecker","injectOptions","methodHandler","methods","writable","dataFn","resolveData","rawData","computedOptions","computed$1","watchOptions","createWatcher","provideOptions","beforeMount","beforeUpdate","onActivated","activated","onDeactivated","deactivated","errorCaptured","renderTracked","renderTriggered","beforeUnmount","unmounted","exposed","proxyRefs","callHookWithMixinAndExtends","selfHook","createPathGetter","segments","path","extendsOptions","mergeOptions","strats","to","from","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","_","accessCache","normalizedProps","publicGetter","cssModule","RuntimeCompiledPublicInstanceProxyHandlers","emptyAppContext","uid$2","update","renderCache","emitted","setupContext","suspenseId","asyncDep","asyncResolved","isDeactivated","bc","bm","bu","bum","rtg","rtc","ec","createRenderContext","isBuiltInTag","appIsNativeTag","isInSSRComponentSetup","isStateful","initProps","setupResult","setupStatefulComponent","names","exposePropsOnRenderContext","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","exposeSetupStateOnRenderContext","isRuntimeOnly","compile","delimiters","attrHandlers","classifyRE","classify","inferFromRegistry","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","obj","genRefFlag","formatValue","hasBody","body","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","opts","renderItem","dynamicSlots","version","ssrUtils","svgNS","doc","nodeOps","is","tag","selector","temp","tempSVGContainer","tempContainer","first","transitionClasses","setStyle","importantRE","prefixed","autoPrefix","prefixes","prefixCache","xlinkNS","_getNow","Date","skipTimestampCheck","ffMatch","navigator","cachedNow","reset","getNow","invokers","existingInvoker","nextValue","parseName","invoker","createInvoker","addEventListener","removeEventListener","optionsModifierRE","timeStamp","patchStopImmediatePropagation","originalStop","nativeOnRE","patchClass","patchStyle","patchEvent","shouldSetAsProp","patchDOMProp","setVars","setVarsOnVNode","watchEffect","vars","TRANSITION","ANIMATION","Transition","h","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","removeTransitionClass","isAppear","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","validateDuration","cls","_vtc","requestAnimationFrame","endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","movedChildren","cssTransitionProps","TransitionGroup","oldPos","newPos","dx","dy","getModelAssigner","trigger$1","vModelText","created","number","castToNumber","domValue","vModelCheckbox","modelValue","elementValue","getValue","checked","assign","looseIndexOf","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","setSelected","isMultiple","option","optionValue","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","prevent","ctrl","shift","alt","meta","left","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","setDisplay","rendererOptions","enabledHydration","createRenderer","createHydrationRenderer","ensureRenderer","ensureHydrationRenderer","injectNativeTagCheck","injectCustomElementCheck","containerOrSelector","normalizeContainer","createSSRApp","messages","additionalMessage","errorMessages","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","UNREF","IS_REF","helperNameMap","helpers","locStub","column","offset","loc","hoists","imports","temps","codegenNode","isBlock","elements","properties","createSimpleExpression","constType","isStatic","returns","newline","isSlot","isStaticExp","isBuiltInType","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","newLoc","advancePositionWithClone","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","allowEmpty","dynamicOnly","isBindKey","arg","propsWithInjection","createObjectExpression","createCallExpression","alreadyExists","propKeyName","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","comments","createParserContext","getCursor","createRoot","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","ancestors","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","isSelfClosing","tagType","hasVIs","isCoreComponent","attributeNames","attr","parseAttribute","nameSet","parseAttributeValue","dirName","startOffset","getNewPosition","valueLoc","exp","quote","isQuoted","endIndex","parseTextData","unexpectedChars","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","createCompilerError","walk","isSingleElementRoot","isSlotOutlet","doNotHoistNode","hasHoistedNode","canStringify","constantType","getConstantType","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","contentType","isComponent","constantCache","returnType","generatedPropsType","childType","expType","keyType","valueType","filename","prefixIdentifiers","hoistStatic","cacheHandlers","nodeTransforms","directiveTransforms","transformHoist","isBuiltInComponent","expressionPlugins","slotted","ssr","ssrCssVars","bindingMetadata","inline","isTS","defaultOnError","nameMatch","identifiers","scopes","vFor","vSlot","vPre","vOnce","currentNode","childIndex","helper","removeHelper","currentCount","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","hoist","identifier","createCacheExpression","createTransformContext","traverseNode","createRootCodegen","patchFlagText","createVNodeCall","nodeRemoved","exitFns","onExit","traverseChildren","PURE_ANNOTATION","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ast","code","indentLevel","pure","push","indent","deindent","withoutNewLine","createCodegenContext","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","genAssets","genNode","preamble","VueBinding","aliasHelper","staticHelpers","resolver","assets","toValidAssetId","multilines","isText$1","genNodeList","comma","genNodeListAsArray","assert","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","exhaustiveCheck","genNullableArgs","callee","genExpressionAsPropertyKey","needNewline","test","needsParens","isNested","alternate","prohibitedKeywordRE","stripStringRE","asParams","asRawStatements","keywordMatch","transformExpression","processExpression","validateBrowserExpression","transformIf","createStructuralDirectiveTransform","processIf","siblings","sibling","ifNode","createCodegenNodeForBranch","parentCondition","getParentCondition","createIfBranch","branches","processCodegen","userKey","isSameKey","condition","findDir","findProp","createConditionalExpression","createChildrenCodegenNode","keyProperty","createObjectProperty","firstChild","needFragmentWrapper","vnodeCall","injectProp","branchExp","transformFor","processFor","forNode","renderExp","keyProp","isStableFragment","fragmentFlag","isTemplate","isTemplateNode","slotOutlet","childBlock","createFunctionExpression","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","createAliasExpression","RHS","LHS","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","getInnerRange","params","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlotFn","slotsProperties","buildDefaultSlotProperty","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotLoc","slotName","dirLoc","staticSlotName","slotFunction","vIf","buildDynamicSlot","vElse","conditional","createArrayExpression","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","resolveComponentType","isDynamicComponent","shouldUseBlock","propsBuildResult","buildProps","vnodeProps","dynamicPropNames","vnodeDirectives","buildDirectiveArgs","shouldBuildAsSlots","buildSlots","vnodeChildren","hasDynamicTextChild","vnodePatchFlag","flagNames","vnodeDynamicProps","stringifyDynamicPropNames","isProp","isComponentTag","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isBind","dedupeProperties","directiveTransform","needRuntime","propsExpression","knownProps","mergeAsArray","dirArgs","runtime","trueExpression","modifier","propsNamesString","transformSlotOutlet","slotProps","processSlotOutlet","slotArgs","nonNameProps","fnExpRE","transformOn","rawName","eventName","createCompoundExpression","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","augmentor","transformBind","transformText","hasText","isText","callArgs","transformOnce","transformModel","createTransformProps","rawExp","expString","maybeRef","propName","eventArg","assignmentExp","on","bind","model","isModuleMode","baseParse","getBaseTransformPreset","transform","generate","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION$1","TRANSITION_GROUP","registerRuntimeHelpers","decoder","isRawTextContainer","parserOptions","transformStyle","parseInlineCSS","DOMErrorMessages","transformVHtml","createDOMCompilerError","transformVText","transformModel$1","baseResult","directiveToUse","isInvalidType","checkDuplicatedValue","hasDynamicKeyVBind","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","isStaticClick","transformOn$1","handlerExp","modifierPostfix","transformShow","warnTransitionChildren","hasMultipleChildren","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","show","baseCompile","initDev","compileCache","template","compile$1","codeFrame","generateCodeFrame"],"mappings":"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","sourcesContent":["\"use strict\";var Vue=function(exports){'use strict';/**\n     * Make a map and return a function for checking if a key\n     * is in that map.\n     * IMPORTANT: all calls of this function must be prefixed with\n     * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n     * So that rollup can tree-shake them if necessary.\n     */function makeMap(str,expectsLowerCase){const map=Object.create(null);const list=str.split(',');for(let i=0;i<list.length;i++){map[list[i]]=true;}return expectsLowerCase?val=>!!map[val.toLowerCase()]:val=>!!map[val];}/**\n     * dev only flag -> name mapping\n     */const PatchFlagNames={[1/* TEXT */]:`TEXT`,[2/* CLASS */]:`CLASS`,[4/* STYLE */]:`STYLE`,[8/* PROPS */]:`PROPS`,[16/* FULL_PROPS */]:`FULL_PROPS`,[32/* HYDRATE_EVENTS */]:`HYDRATE_EVENTS`,[64/* STABLE_FRAGMENT */]:`STABLE_FRAGMENT`,[128/* KEYED_FRAGMENT */]:`KEYED_FRAGMENT`,[256/* UNKEYED_FRAGMENT */]:`UNKEYED_FRAGMENT`,[512/* NEED_PATCH */]:`NEED_PATCH`,[1024/* DYNAMIC_SLOTS */]:`DYNAMIC_SLOTS`,[2048/* DEV_ROOT_FRAGMENT */]:`DEV_ROOT_FRAGMENT`,[-1/* HOISTED */]:`HOISTED`,[-2/* BAIL */]:`BAIL`};/**\n     * Dev only\n     */const slotFlagsText={[1/* STABLE */]:'STABLE',[2/* DYNAMIC */]:'DYNAMIC',[3/* FORWARDED */]:'FORWARDED'};const GLOBALS_WHITE_LISTED='Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,'+'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,'+'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';const isGloballyWhitelisted=/*#__PURE__*/makeMap(GLOBALS_WHITE_LISTED);const range=2;function generateCodeFrame(source,start=0,end=source.length){const lines=source.split(/\\r?\\n/);let count=0;const res=[];for(let i=0;i<lines.length;i++){count+=lines[i].length+1;if(count>=start){for(let j=i-range;j<=i+range||end>count;j++){if(j<0||j>=lines.length)continue;const line=j+1;res.push(`${line}${' '.repeat(Math.max(3-String(line).length,0))}|  ${lines[j]}`);const lineLength=lines[j].length;if(j===i){// push underline\nconst pad=start-(count-lineLength)+1;const length=Math.max(1,end>count?lineLength-pad:end-start);res.push(`   |  `+' '.repeat(pad)+'^'.repeat(length));}else if(j>i){if(end>count){const length=Math.max(Math.min(end-count,lineLength),1);res.push(`   |  `+'^'.repeat(length));}count+=lineLength+1;}}break;}}return res.join('\\n');}/**\n     * On the client we only need to offer special cases for boolean attributes that\n     * have different names from their corresponding dom properties:\n     * - itemscope -> N/A\n     * - allowfullscreen -> allowFullscreen\n     * - formnovalidate -> formNoValidate\n     * - ismap -> isMap\n     * - nomodule -> noModule\n     * - novalidate -> noValidate\n     * - readonly -> readOnly\n     */const specialBooleanAttrs=`itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;const isSpecialBooleanAttr=/*#__PURE__*/makeMap(specialBooleanAttrs);function normalizeStyle(value){if(isArray(value)){const res={};for(let i=0;i<value.length;i++){const item=value[i];const normalized=normalizeStyle(isString(item)?parseStringStyle(item):item);if(normalized){for(const key in normalized){res[key]=normalized[key];}}}return res;}else if(isObject(value)){return value;}}const listDelimiterRE=/;(?![^(]*\\))/g;const propertyDelimiterRE=/:(.+)/;function parseStringStyle(cssText){const ret={};cssText.split(listDelimiterRE).forEach(item=>{if(item){const tmp=item.split(propertyDelimiterRE);tmp.length>1&&(ret[tmp[0].trim()]=tmp[1].trim());}});return ret;}function normalizeClass(value){let res='';if(isString(value)){res=value;}else if(isArray(value)){for(let i=0;i<value.length;i++){const normalized=normalizeClass(value[i]);if(normalized){res+=normalized+' ';}}}else if(isObject(value)){for(const name in value){if(value[name]){res+=name+' ';}}}return res.trim();}// These tag configs are shared between compiler-dom and runtime-dom, so they\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS='html,body,base,head,link,meta,style,title,address,article,aside,footer,'+'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,'+'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,'+'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,'+'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,'+'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,'+'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,'+'option,output,progress,select,textarea,details,dialog,menu,'+'summary,template,blockquote,iframe,tfoot';// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS='svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,'+'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,'+'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,'+'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,'+'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,'+'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,'+'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,'+'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,'+'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,'+'text,textPath,title,tspan,unknown,use,view';const VOID_TAGS='area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';const isHTMLTag=/*#__PURE__*/makeMap(HTML_TAGS);const isSVGTag=/*#__PURE__*/makeMap(SVG_TAGS);const isVoidTag=/*#__PURE__*/makeMap(VOID_TAGS);function looseCompareArrays(a,b){if(a.length!==b.length)return false;let equal=true;for(let i=0;equal&&i<a.length;i++){equal=looseEqual(a[i],b[i]);}return equal;}function looseEqual(a,b){if(a===b)return true;let aValidType=isDate(a);let bValidType=isDate(b);if(aValidType||bValidType){return aValidType&&bValidType?a.getTime()===b.getTime():false;}aValidType=isArray(a);bValidType=isArray(b);if(aValidType||bValidType){return aValidType&&bValidType?looseCompareArrays(a,b):false;}aValidType=isObject(a);bValidType=isObject(b);if(aValidType||bValidType){/* istanbul ignore if: this if will probably never be called */if(!aValidType||!bValidType){return false;}const aKeysCount=Object.keys(a).length;const bKeysCount=Object.keys(b).length;if(aKeysCount!==bKeysCount){return false;}for(const key in a){const aHasKey=a.hasOwnProperty(key);const bHasKey=b.hasOwnProperty(key);if(aHasKey&&!bHasKey||!aHasKey&&bHasKey||!looseEqual(a[key],b[key])){return false;}}}return String(a)===String(b);}function looseIndexOf(arr,val){return arr.findIndex(item=>looseEqual(item,val));}/**\n     * For converting {{ interpolation }} values to displayed strings.\n     * @private\n     */const toDisplayString=val=>{return val==null?'':isObject(val)?JSON.stringify(val,replacer,2):String(val);};const replacer=(_key,val)=>{if(isMap(val)){return{[`Map(${val.size})`]:[...val.entries()].reduce((entries,[key,val])=>{entries[`${key} =>`]=val;return entries;},{})};}else if(isSet(val)){return{[`Set(${val.size})`]:[...val.values()]};}else if(isObject(val)&&!isArray(val)&&!isPlainObject(val)){return String(val);}return val;};const EMPTY_OBJ=Object.freeze({});const EMPTY_ARR=Object.freeze([]);const NOOP=()=>{};/**\n     * Always return false.\n     */const NO=()=>false;const onRE=/^on[^a-z]/;const isOn=key=>onRE.test(key);const isModelListener=key=>key.startsWith('onUpdate:');const extend=Object.assign;const remove=(arr,el)=>{const i=arr.indexOf(el);if(i>-1){arr.splice(i,1);}};const hasOwnProperty=Object.prototype.hasOwnProperty;const hasOwn=(val,key)=>hasOwnProperty.call(val,key);const isArray=Array.isArray;const isMap=val=>toTypeString(val)==='[object Map]';const isSet=val=>toTypeString(val)==='[object Set]';const isDate=val=>val instanceof Date;const isFunction=val=>typeof val==='function';const isString=val=>typeof val==='string';const isSymbol=val=>typeof val==='symbol';const isObject=val=>val!==null&&typeof val==='object';const isPromise=val=>{return isObject(val)&&isFunction(val.then)&&isFunction(val.catch);};const objectToString=Object.prototype.toString;const toTypeString=value=>objectToString.call(value);const toRawType=value=>{// extract \"RawType\" from strings like \"[object RawType]\"\nreturn toTypeString(value).slice(8,-1);};const isPlainObject=val=>toTypeString(val)==='[object Object]';const isIntegerKey=key=>isString(key)&&key!=='NaN'&&key[0]!=='-'&&''+parseInt(key,10)===key;const isReservedProp=/*#__PURE__*/makeMap(// the leading comma is intentional so empty string \"\" is also included\n',key,ref,'+'onVnodeBeforeMount,onVnodeMounted,'+'onVnodeBeforeUpdate,onVnodeUpdated,'+'onVnodeBeforeUnmount,onVnodeUnmounted');const cacheStringFunction=fn=>{const cache=Object.create(null);return str=>{const hit=cache[str];return hit||(cache[str]=fn(str));};};const camelizeRE=/-(\\w)/g;/**\n     * @private\n     */const camelize=cacheStringFunction(str=>{return str.replace(camelizeRE,(_,c)=>c?c.toUpperCase():'');});const hyphenateRE=/\\B([A-Z])/g;/**\n     * @private\n     */const hyphenate=cacheStringFunction(str=>str.replace(hyphenateRE,'-$1').toLowerCase());/**\n     * @private\n     */const capitalize=cacheStringFunction(str=>str.charAt(0).toUpperCase()+str.slice(1));/**\n     * @private\n     */const toHandlerKey=cacheStringFunction(str=>str?`on${capitalize(str)}`:``);// compare whether a value has changed, accounting for NaN.\nconst hasChanged=(value,oldValue)=>value!==oldValue&&(value===value||oldValue===oldValue);const invokeArrayFns=(fns,arg)=>{for(let i=0;i<fns.length;i++){fns[i](arg);}};const def=(obj,key,value)=>{Object.defineProperty(obj,key,{configurable:true,enumerable:false,value});};const toNumber=val=>{const n=parseFloat(val);return isNaN(n)?val:n;};let _globalThis;const getGlobalThis=()=>{return _globalThis||(_globalThis=typeof globalThis!=='undefined'?globalThis:typeof self!=='undefined'?self:typeof window!=='undefined'?window:typeof global!=='undefined'?global:{});};const targetMap=new WeakMap();const effectStack=[];let activeEffect;const ITERATE_KEY=Symbol('iterate');const MAP_KEY_ITERATE_KEY=Symbol('Map key iterate');function isEffect(fn){return fn&&fn._isEffect===true;}function effect(fn,options=EMPTY_OBJ){if(isEffect(fn)){fn=fn.raw;}const effect=createReactiveEffect(fn,options);if(!options.lazy){effect();}return effect;}function stop(effect){if(effect.active){cleanup(effect);if(effect.options.onStop){effect.options.onStop();}effect.active=false;}}let uid=0;function createReactiveEffect(fn,options){const effect=function reactiveEffect(){if(!effect.active){return options.scheduler?undefined:fn();}if(!effectStack.includes(effect)){cleanup(effect);try{enableTracking();effectStack.push(effect);activeEffect=effect;return fn();}finally{effectStack.pop();resetTracking();activeEffect=effectStack[effectStack.length-1];}}};effect.id=uid++;effect.allowRecurse=!!options.allowRecurse;effect._isEffect=true;effect.active=true;effect.raw=fn;effect.deps=[];effect.options=options;return effect;}function cleanup(effect){const{deps}=effect;if(deps.length){for(let i=0;i<deps.length;i++){deps[i].delete(effect);}deps.length=0;}}let shouldTrack=true;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack);shouldTrack=false;}function enableTracking(){trackStack.push(shouldTrack);shouldTrack=true;}function resetTracking(){const last=trackStack.pop();shouldTrack=last===undefined?true:last;}function track(target,type,key){if(!shouldTrack||activeEffect===undefined){return;}let depsMap=targetMap.get(target);if(!depsMap){targetMap.set(target,depsMap=new Map());}let dep=depsMap.get(key);if(!dep){depsMap.set(key,dep=new Set());}if(!dep.has(activeEffect)){dep.add(activeEffect);activeEffect.deps.push(dep);if(activeEffect.options.onTrack){activeEffect.options.onTrack({effect:activeEffect,target,type,key});}}}function trigger(target,type,key,newValue,oldValue,oldTarget){const depsMap=targetMap.get(target);if(!depsMap){// never been tracked\nreturn;}const effects=new Set();const add=effectsToAdd=>{if(effectsToAdd){effectsToAdd.forEach(effect=>{if(effect!==activeEffect||effect.allowRecurse){effects.add(effect);}});}};if(type===\"clear\"/* CLEAR */){// collection being cleared\n// trigger all effects for target\ndepsMap.forEach(add);}else if(key==='length'&&isArray(target)){depsMap.forEach((dep,key)=>{if(key==='length'||key>=newValue){add(dep);}});}else{// schedule runs for SET | ADD | DELETE\nif(key!==void 0){add(depsMap.get(key));}// also run for iteration key on ADD | DELETE | Map.SET\nswitch(type){case\"add\"/* ADD */:if(!isArray(target)){add(depsMap.get(ITERATE_KEY));if(isMap(target)){add(depsMap.get(MAP_KEY_ITERATE_KEY));}}else if(isIntegerKey(key)){// new index added to array -> length changes\nadd(depsMap.get('length'));}break;case\"delete\"/* DELETE */:if(!isArray(target)){add(depsMap.get(ITERATE_KEY));if(isMap(target)){add(depsMap.get(MAP_KEY_ITERATE_KEY));}}break;case\"set\"/* SET */:if(isMap(target)){add(depsMap.get(ITERATE_KEY));}break;}}const run=effect=>{if(effect.options.onTrigger){effect.options.onTrigger({effect,target,key,type,newValue,oldValue,oldTarget});}if(effect.options.scheduler){effect.options.scheduler(effect);}else{effect();}};effects.forEach(run);}const isNonTrackableKeys=/*#__PURE__*/makeMap(`__proto__,__v_isRef,__isVue`);const builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).map(key=>Symbol[key]).filter(isSymbol));const get=/*#__PURE__*/createGetter();const shallowGet=/*#__PURE__*/createGetter(false,true);const readonlyGet=/*#__PURE__*/createGetter(true);const shallowReadonlyGet=/*#__PURE__*/createGetter(true,true);const arrayInstrumentations={};['includes','indexOf','lastIndexOf'].forEach(key=>{const method=Array.prototype[key];arrayInstrumentations[key]=function(...args){const arr=toRaw(this);for(let i=0,l=this.length;i<l;i++){track(arr,\"get\"/* GET */,i+'');}// we run the method using the original args first (which may be reactive)\nconst res=method.apply(arr,args);if(res===-1||res===false){// if that didn't work, run it again using raw values.\nreturn method.apply(arr,args.map(toRaw));}else{return res;}};});['push','pop','shift','unshift','splice'].forEach(key=>{const method=Array.prototype[key];arrayInstrumentations[key]=function(...args){pauseTracking();const res=method.apply(this,args);resetTracking();return res;};});function createGetter(isReadonly=false,shallow=false){return function get(target,key,receiver){if(key===\"__v_isReactive\"/* IS_REACTIVE */){return!isReadonly;}else if(key===\"__v_isReadonly\"/* IS_READONLY */){return isReadonly;}else if(key===\"__v_raw\"/* RAW */&&receiver===(isReadonly?shallow?shallowReadonlyMap:readonlyMap:shallow?shallowReactiveMap:reactiveMap).get(target)){return target;}const targetIsArray=isArray(target);if(!isReadonly&&targetIsArray&&hasOwn(arrayInstrumentations,key)){return Reflect.get(arrayInstrumentations,key,receiver);}const res=Reflect.get(target,key,receiver);if(isSymbol(key)?builtInSymbols.has(key):isNonTrackableKeys(key)){return res;}if(!isReadonly){track(target,\"get\"/* GET */,key);}if(shallow){return res;}if(isRef(res)){// ref unwrapping - does not apply for Array + integer key.\nconst shouldUnwrap=!targetIsArray||!isIntegerKey(key);return shouldUnwrap?res.value:res;}if(isObject(res)){// Convert returned value into a proxy as well. we do the isObject check\n// here to avoid invalid value warning. Also need to lazy access readonly\n// and reactive here to avoid circular dependency.\nreturn isReadonly?readonly(res):reactive(res);}return res;};}const set=/*#__PURE__*/createSetter();const shallowSet=/*#__PURE__*/createSetter(true);function createSetter(shallow=false){return function set(target,key,value,receiver){let oldValue=target[key];if(!shallow){value=toRaw(value);oldValue=toRaw(oldValue);if(!isArray(target)&&isRef(oldValue)&&!isRef(value)){oldValue.value=value;return true;}}const hadKey=isArray(target)&&isIntegerKey(key)?Number(key)<target.length:hasOwn(target,key);const result=Reflect.set(target,key,value,receiver);// don't trigger if target is something up in the prototype chain of original\nif(target===toRaw(receiver)){if(!hadKey){trigger(target,\"add\"/* ADD */,key,value);}else if(hasChanged(value,oldValue)){trigger(target,\"set\"/* SET */,key,value,oldValue);}}return result;};}function deleteProperty(target,key){const hadKey=hasOwn(target,key);const oldValue=target[key];const result=Reflect.deleteProperty(target,key);if(result&&hadKey){trigger(target,\"delete\"/* DELETE */,key,undefined,oldValue);}return result;}function has(target,key){const result=Reflect.has(target,key);if(!isSymbol(key)||!builtInSymbols.has(key)){track(target,\"has\"/* HAS */,key);}return result;}function ownKeys(target){track(target,\"iterate\"/* ITERATE */,isArray(target)?'length':ITERATE_KEY);return Reflect.ownKeys(target);}const mutableHandlers={get,set,deleteProperty,has,ownKeys};const readonlyHandlers={get:readonlyGet,set(target,key){{console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`,target);}return true;},deleteProperty(target,key){{console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`,target);}return true;}};const shallowReactiveHandlers=extend({},mutableHandlers,{get:shallowGet,set:shallowSet});// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nconst shallowReadonlyHandlers=extend({},readonlyHandlers,{get:shallowReadonlyGet});const toReactive=value=>isObject(value)?reactive(value):value;const toReadonly=value=>isObject(value)?readonly(value):value;const toShallow=value=>value;const getProto=v=>Reflect.getPrototypeOf(v);function get$1(target,key,isReadonly=false,isShallow=false){// #1772: readonly(reactive(Map)) should return readonly + reactive version\n// of the value\ntarget=target[\"__v_raw\"/* RAW */];const rawTarget=toRaw(target);const rawKey=toRaw(key);if(key!==rawKey){!isReadonly&&track(rawTarget,\"get\"/* GET */,key);}!isReadonly&&track(rawTarget,\"get\"/* GET */,rawKey);const{has}=getProto(rawTarget);const wrap=isShallow?toShallow:isReadonly?toReadonly:toReactive;if(has.call(rawTarget,key)){return wrap(target.get(key));}else if(has.call(rawTarget,rawKey)){return wrap(target.get(rawKey));}}function has$1(key,isReadonly=false){const target=this[\"__v_raw\"/* RAW */];const rawTarget=toRaw(target);const rawKey=toRaw(key);if(key!==rawKey){!isReadonly&&track(rawTarget,\"has\"/* HAS */,key);}!isReadonly&&track(rawTarget,\"has\"/* HAS */,rawKey);return key===rawKey?target.has(key):target.has(key)||target.has(rawKey);}function size(target,isReadonly=false){target=target[\"__v_raw\"/* RAW */];!isReadonly&&track(toRaw(target),\"iterate\"/* ITERATE */,ITERATE_KEY);return Reflect.get(target,'size',target);}function add(value){value=toRaw(value);const target=toRaw(this);const proto=getProto(target);const hadKey=proto.has.call(target,value);if(!hadKey){target.add(value);trigger(target,\"add\"/* ADD */,value,value);}return this;}function set$1(key,value){value=toRaw(value);const target=toRaw(this);const{has,get}=getProto(target);let hadKey=has.call(target,key);if(!hadKey){key=toRaw(key);hadKey=has.call(target,key);}else{checkIdentityKeys(target,has,key);}const oldValue=get.call(target,key);target.set(key,value);if(!hadKey){trigger(target,\"add\"/* ADD */,key,value);}else if(hasChanged(value,oldValue)){trigger(target,\"set\"/* SET */,key,value,oldValue);}return this;}function deleteEntry(key){const target=toRaw(this);const{has,get}=getProto(target);let hadKey=has.call(target,key);if(!hadKey){key=toRaw(key);hadKey=has.call(target,key);}else{checkIdentityKeys(target,has,key);}const oldValue=get?get.call(target,key):undefined;// forward the operation before queueing reactions\nconst result=target.delete(key);if(hadKey){trigger(target,\"delete\"/* DELETE */,key,undefined,oldValue);}return result;}function clear(){const target=toRaw(this);const hadItems=target.size!==0;const oldTarget=isMap(target)?new Map(target):new Set(target);// forward the operation before queueing reactions\nconst result=target.clear();if(hadItems){trigger(target,\"clear\"/* CLEAR */,undefined,undefined,oldTarget);}return result;}function createForEach(isReadonly,isShallow){return function forEach(callback,thisArg){const observed=this;const target=observed[\"__v_raw\"/* RAW */];const rawTarget=toRaw(target);const wrap=isShallow?toShallow:isReadonly?toReadonly:toReactive;!isReadonly&&track(rawTarget,\"iterate\"/* ITERATE */,ITERATE_KEY);return target.forEach((value,key)=>{// important: make sure the callback is\n// 1. invoked with the reactive map as `this` and 3rd arg\n// 2. the value received should be a corresponding reactive/readonly.\nreturn callback.call(thisArg,wrap(value),wrap(key),observed);});};}function createIterableMethod(method,isReadonly,isShallow){return function(...args){const target=this[\"__v_raw\"/* RAW */];const rawTarget=toRaw(target);const targetIsMap=isMap(rawTarget);const isPair=method==='entries'||method===Symbol.iterator&&targetIsMap;const isKeyOnly=method==='keys'&&targetIsMap;const innerIterator=target[method](...args);const wrap=isShallow?toShallow:isReadonly?toReadonly:toReactive;!isReadonly&&track(rawTarget,\"iterate\"/* ITERATE */,isKeyOnly?MAP_KEY_ITERATE_KEY:ITERATE_KEY);// return a wrapped iterator which returns observed versions of the\n// values emitted from the real iterator\nreturn{// iterator protocol\nnext(){const{value,done}=innerIterator.next();return done?{value,done}:{value:isPair?[wrap(value[0]),wrap(value[1])]:wrap(value),done};},// iterable protocol\n[Symbol.iterator](){return this;}};};}function createReadonlyMethod(type){return function(...args){{const key=args[0]?`on key \"${args[0]}\" `:``;console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`,toRaw(this));}return type===\"delete\"/* DELETE */?false:this;};}const mutableInstrumentations={get(key){return get$1(this,key);},get size(){return size(this);},has:has$1,add,set:set$1,delete:deleteEntry,clear,forEach:createForEach(false,false)};const shallowInstrumentations={get(key){return get$1(this,key,false,true);},get size(){return size(this);},has:has$1,add,set:set$1,delete:deleteEntry,clear,forEach:createForEach(false,true)};const readonlyInstrumentations={get(key){return get$1(this,key,true);},get size(){return size(this,true);},has(key){return has$1.call(this,key,true);},add:createReadonlyMethod(\"add\"/* ADD */),set:createReadonlyMethod(\"set\"/* SET */),delete:createReadonlyMethod(\"delete\"/* DELETE */),clear:createReadonlyMethod(\"clear\"/* CLEAR */),forEach:createForEach(true,false)};const shallowReadonlyInstrumentations={get(key){return get$1(this,key,true,true);},get size(){return size(this,true);},has(key){return has$1.call(this,key,true);},add:createReadonlyMethod(\"add\"/* ADD */),set:createReadonlyMethod(\"set\"/* SET */),delete:createReadonlyMethod(\"delete\"/* DELETE */),clear:createReadonlyMethod(\"clear\"/* CLEAR */),forEach:createForEach(true,true)};const iteratorMethods=['keys','values','entries',Symbol.iterator];iteratorMethods.forEach(method=>{mutableInstrumentations[method]=createIterableMethod(method,false,false);readonlyInstrumentations[method]=createIterableMethod(method,true,false);shallowInstrumentations[method]=createIterableMethod(method,false,true);shallowReadonlyInstrumentations[method]=createIterableMethod(method,true,true);});function createInstrumentationGetter(isReadonly,shallow){const instrumentations=shallow?isReadonly?shallowReadonlyInstrumentations:shallowInstrumentations:isReadonly?readonlyInstrumentations:mutableInstrumentations;return(target,key,receiver)=>{if(key===\"__v_isReactive\"/* IS_REACTIVE */){return!isReadonly;}else if(key===\"__v_isReadonly\"/* IS_READONLY */){return isReadonly;}else if(key===\"__v_raw\"/* RAW */){return target;}return Reflect.get(hasOwn(instrumentations,key)&&key in target?instrumentations:target,key,receiver);};}const mutableCollectionHandlers={get:createInstrumentationGetter(false,false)};const shallowCollectionHandlers={get:createInstrumentationGetter(false,true)};const readonlyCollectionHandlers={get:createInstrumentationGetter(true,false)};const shallowReadonlyCollectionHandlers={get:createInstrumentationGetter(true,true)};function checkIdentityKeys(target,has,key){const rawKey=toRaw(key);if(rawKey!==key&&has.call(target,rawKey)){const type=toRawType(target);console.warn(`Reactive ${type} contains both the raw and reactive `+`versions of the same object${type===`Map`?` as keys`:``}, `+`which can lead to inconsistencies. `+`Avoid differentiating between the raw and reactive versions `+`of an object and only use the reactive version if possible.`);}}const reactiveMap=new WeakMap();const shallowReactiveMap=new WeakMap();const readonlyMap=new WeakMap();const shallowReadonlyMap=new WeakMap();function targetTypeMap(rawType){switch(rawType){case'Object':case'Array':return 1/* COMMON */;case'Map':case'Set':case'WeakMap':case'WeakSet':return 2/* COLLECTION */;default:return 0/* INVALID */;}}function getTargetType(value){return value[\"__v_skip\"/* SKIP */]||!Object.isExtensible(value)?0/* INVALID */:targetTypeMap(toRawType(value));}function reactive(target){// if trying to observe a readonly proxy, return the readonly version.\nif(target&&target[\"__v_isReadonly\"/* IS_READONLY */]){return target;}return createReactiveObject(target,false,mutableHandlers,mutableCollectionHandlers,reactiveMap);}/**\n     * Return a shallowly-reactive copy of the original object, where only the root\n     * level properties are reactive. It also does not auto-unwrap refs (even at the\n     * root level).\n     */function shallowReactive(target){return createReactiveObject(target,false,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap);}/**\n     * Creates a readonly copy of the original object. Note the returned copy is not\n     * made reactive, but `readonly` can be called on an already reactive object.\n     */function readonly(target){return createReactiveObject(target,true,readonlyHandlers,readonlyCollectionHandlers,readonlyMap);}/**\n     * Returns a reactive-copy of the original object, where only the root level\n     * properties are readonly, and does NOT unwrap refs nor recursively convert\n     * returned properties.\n     * This is used for creating the props proxy object for stateful components.\n     */function shallowReadonly(target){return createReactiveObject(target,true,shallowReadonlyHandlers,shallowReadonlyCollectionHandlers,shallowReadonlyMap);}function createReactiveObject(target,isReadonly,baseHandlers,collectionHandlers,proxyMap){if(!isObject(target)){{console.warn(`value cannot be made reactive: ${String(target)}`);}return target;}// target is already a Proxy, return it.\n// exception: calling readonly() on a reactive object\nif(target[\"__v_raw\"/* RAW */]&&!(isReadonly&&target[\"__v_isReactive\"/* IS_REACTIVE */])){return target;}// target already has corresponding Proxy\nconst existingProxy=proxyMap.get(target);if(existingProxy){return existingProxy;}// only a whitelist of value types can be observed.\nconst targetType=getTargetType(target);if(targetType===0/* INVALID */){return target;}const proxy=new Proxy(target,targetType===2/* COLLECTION */?collectionHandlers:baseHandlers);proxyMap.set(target,proxy);return proxy;}function isReactive(value){if(isReadonly(value)){return isReactive(value[\"__v_raw\"/* RAW */]);}return!!(value&&value[\"__v_isReactive\"/* IS_REACTIVE */]);}function isReadonly(value){return!!(value&&value[\"__v_isReadonly\"/* IS_READONLY */]);}function isProxy(value){return isReactive(value)||isReadonly(value);}function toRaw(observed){return observed&&toRaw(observed[\"__v_raw\"/* RAW */])||observed;}function markRaw(value){def(value,\"__v_skip\"/* SKIP */,true);return value;}const convert=val=>isObject(val)?reactive(val):val;function isRef(r){return Boolean(r&&r.__v_isRef===true);}function ref(value){return createRef(value);}function shallowRef(value){return createRef(value,true);}class RefImpl{constructor(_rawValue,_shallow=false){this._rawValue=_rawValue;this._shallow=_shallow;this.__v_isRef=true;this._value=_shallow?_rawValue:convert(_rawValue);}get value(){track(toRaw(this),\"get\"/* GET */,'value');return this._value;}set value(newVal){if(hasChanged(toRaw(newVal),this._rawValue)){this._rawValue=newVal;this._value=this._shallow?newVal:convert(newVal);trigger(toRaw(this),\"set\"/* SET */,'value',newVal);}}}function createRef(rawValue,shallow=false){if(isRef(rawValue)){return rawValue;}return new RefImpl(rawValue,shallow);}function triggerRef(ref){trigger(toRaw(ref),\"set\"/* SET */,'value',ref.value);}function unref(ref){return isRef(ref)?ref.value:ref;}const shallowUnwrapHandlers={get:(target,key,receiver)=>unref(Reflect.get(target,key,receiver)),set:(target,key,value,receiver)=>{const oldValue=target[key];if(isRef(oldValue)&&!isRef(value)){oldValue.value=value;return true;}else{return Reflect.set(target,key,value,receiver);}}};function proxyRefs(objectWithRefs){return isReactive(objectWithRefs)?objectWithRefs:new Proxy(objectWithRefs,shallowUnwrapHandlers);}class CustomRefImpl{constructor(factory){this.__v_isRef=true;const{get,set}=factory(()=>track(this,\"get\"/* GET */,'value'),()=>trigger(this,\"set\"/* SET */,'value'));this._get=get;this._set=set;}get value(){return this._get();}set value(newVal){this._set(newVal);}}function customRef(factory){return new CustomRefImpl(factory);}function toRefs(object){if(!isProxy(object)){console.warn(`toRefs() expects a reactive object but received a plain one.`);}const ret=isArray(object)?new Array(object.length):{};for(const key in object){ret[key]=toRef(object,key);}return ret;}class ObjectRefImpl{constructor(_object,_key){this._object=_object;this._key=_key;this.__v_isRef=true;}get value(){return this._object[this._key];}set value(newVal){this._object[this._key]=newVal;}}function toRef(object,key){return isRef(object[key])?object[key]:new ObjectRefImpl(object,key);}class ComputedRefImpl{constructor(getter,_setter,isReadonly){this._setter=_setter;this._dirty=true;this.__v_isRef=true;this.effect=effect(getter,{lazy:true,scheduler:()=>{if(!this._dirty){this._dirty=true;trigger(toRaw(this),\"set\"/* SET */,'value');}}});this[\"__v_isReadonly\"/* IS_READONLY */]=isReadonly;}get value(){// the computed ref may get wrapped by other proxies e.g. readonly() #3376\nconst self=toRaw(this);if(self._dirty){self._value=this.effect();self._dirty=false;}track(self,\"get\"/* GET */,'value');return self._value;}set value(newValue){this._setter(newValue);}}function computed(getterOrOptions){let getter;let setter;if(isFunction(getterOrOptions)){getter=getterOrOptions;setter=()=>{console.warn('Write operation failed: computed value is readonly');};}else{getter=getterOrOptions.get;setter=getterOrOptions.set;}return new ComputedRefImpl(getter,setter,isFunction(getterOrOptions)||!getterOrOptions.set);}const stack=[];function pushWarningContext(vnode){stack.push(vnode);}function popWarningContext(){stack.pop();}function warn(msg,...args){// avoid props formatting or warn handler tracking deps that might be mutated\n// during patch, leading to infinite recursion.\npauseTracking();const instance=stack.length?stack[stack.length-1].component:null;const appWarnHandler=instance&&instance.appContext.config.warnHandler;const trace=getComponentTrace();if(appWarnHandler){callWithErrorHandling(appWarnHandler,instance,11/* APP_WARN_HANDLER */,[msg+args.join(''),instance&&instance.proxy,trace.map(({vnode})=>`at <${formatComponentName(instance,vnode.type)}>`).join('\\n'),trace]);}else{const warnArgs=[`[Vue warn]: ${msg}`,...args];/* istanbul ignore if */if(trace.length&&// avoid spamming console during tests\n!false){warnArgs.push(`\\n`,...formatTrace(trace));}console.warn(...warnArgs);}resetTracking();}function getComponentTrace(){let currentVNode=stack[stack.length-1];if(!currentVNode){return[];}// we can't just use the stack because it will be incomplete during updates\n// that did not start from the root. Re-construct the parent chain using\n// instance parent pointers.\nconst normalizedStack=[];while(currentVNode){const last=normalizedStack[0];if(last&&last.vnode===currentVNode){last.recurseCount++;}else{normalizedStack.push({vnode:currentVNode,recurseCount:0});}const parentInstance=currentVNode.component&&currentVNode.component.parent;currentVNode=parentInstance&&parentInstance.vnode;}return normalizedStack;}/* istanbul ignore next */function formatTrace(trace){const logs=[];trace.forEach((entry,i)=>{logs.push(...(i===0?[]:[`\\n`]),...formatTraceEntry(entry));});return logs;}function formatTraceEntry({vnode,recurseCount}){const postfix=recurseCount>0?`... (${recurseCount} recursive calls)`:``;const isRoot=vnode.component?vnode.component.parent==null:false;const open=` at <${formatComponentName(vnode.component,vnode.type,isRoot)}`;const close=`>`+postfix;return vnode.props?[open,...formatProps(vnode.props),close]:[open+close];}/* istanbul ignore next */function formatProps(props){const res=[];const keys=Object.keys(props);keys.slice(0,3).forEach(key=>{res.push(...formatProp(key,props[key]));});if(keys.length>3){res.push(` ...`);}return res;}/* istanbul ignore next */function formatProp(key,value,raw){if(isString(value)){value=JSON.stringify(value);return raw?value:[`${key}=${value}`];}else if(typeof value==='number'||typeof value==='boolean'||value==null){return raw?value:[`${key}=${value}`];}else if(isRef(value)){value=formatProp(key,toRaw(value.value),true);return raw?value:[`${key}=Ref<`,value,`>`];}else if(isFunction(value)){return[`${key}=fn${value.name?`<${value.name}>`:``}`];}else{value=toRaw(value);return raw?value:[`${key}=`,value];}}const ErrorTypeStrings={[\"bc\"/* BEFORE_CREATE */]:'beforeCreate hook',[\"c\"/* CREATED */]:'created hook',[\"bm\"/* BEFORE_MOUNT */]:'beforeMount hook',[\"m\"/* MOUNTED */]:'mounted hook',[\"bu\"/* BEFORE_UPDATE */]:'beforeUpdate hook',[\"u\"/* UPDATED */]:'updated',[\"bum\"/* BEFORE_UNMOUNT */]:'beforeUnmount hook',[\"um\"/* UNMOUNTED */]:'unmounted hook',[\"a\"/* ACTIVATED */]:'activated hook',[\"da\"/* DEACTIVATED */]:'deactivated hook',[\"ec\"/* ERROR_CAPTURED */]:'errorCaptured hook',[\"rtc\"/* RENDER_TRACKED */]:'renderTracked hook',[\"rtg\"/* RENDER_TRIGGERED */]:'renderTriggered hook',[0/* SETUP_FUNCTION */]:'setup function',[1/* RENDER_FUNCTION */]:'render function',[2/* WATCH_GETTER */]:'watcher getter',[3/* WATCH_CALLBACK */]:'watcher callback',[4/* WATCH_CLEANUP */]:'watcher cleanup function',[5/* NATIVE_EVENT_HANDLER */]:'native event handler',[6/* COMPONENT_EVENT_HANDLER */]:'component event handler',[7/* VNODE_HOOK */]:'vnode hook',[8/* DIRECTIVE_HOOK */]:'directive hook',[9/* TRANSITION_HOOK */]:'transition hook',[10/* APP_ERROR_HANDLER */]:'app errorHandler',[11/* APP_WARN_HANDLER */]:'app warnHandler',[12/* FUNCTION_REF */]:'ref function',[13/* ASYNC_COMPONENT_LOADER */]:'async component loader',[14/* SCHEDULER */]:'scheduler flush. This is likely a Vue internals bug. '+'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'};function callWithErrorHandling(fn,instance,type,args){let res;try{res=args?fn(...args):fn();}catch(err){handleError(err,instance,type);}return res;}function callWithAsyncErrorHandling(fn,instance,type,args){if(isFunction(fn)){const res=callWithErrorHandling(fn,instance,type,args);if(res&&isPromise(res)){res.catch(err=>{handleError(err,instance,type);});}return res;}const values=[];for(let i=0;i<fn.length;i++){values.push(callWithAsyncErrorHandling(fn[i],instance,type,args));}return values;}function handleError(err,instance,type,throwInDev=true){const contextVNode=instance?instance.vnode:null;if(instance){let cur=instance.parent;// the exposed instance is the render proxy to keep it consistent with 2.x\nconst exposedInstance=instance.proxy;// in production the hook receives only the error code\nconst errorInfo=ErrorTypeStrings[type];while(cur){const errorCapturedHooks=cur.ec;if(errorCapturedHooks){for(let i=0;i<errorCapturedHooks.length;i++){if(errorCapturedHooks[i](err,exposedInstance,errorInfo)===false){return;}}}cur=cur.parent;}// app-level handling\nconst appErrorHandler=instance.appContext.config.errorHandler;if(appErrorHandler){callWithErrorHandling(appErrorHandler,null,10/* APP_ERROR_HANDLER */,[err,exposedInstance,errorInfo]);return;}}logError(err,type,contextVNode,throwInDev);}function logError(err,type,contextVNode,throwInDev=true){{const info=ErrorTypeStrings[type];if(contextVNode){pushWarningContext(contextVNode);}warn(`Unhandled error${info?` during execution of ${info}`:``}`);if(contextVNode){popWarningContext();}// crash in dev by default so it's more noticeable\nif(throwInDev){throw err;}else{console.error(err);}}}let isFlushing=false;let isFlushPending=false;const queue=[];let flushIndex=0;const pendingPreFlushCbs=[];let activePreFlushCbs=null;let preFlushIndex=0;const pendingPostFlushCbs=[];let activePostFlushCbs=null;let postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;let currentPreFlushParentJob=null;const RECURSION_LIMIT=100;function nextTick(fn){const p=currentFlushPromise||resolvedPromise;return fn?p.then(this?fn.bind(this):fn):p;}// #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\nfunction findInsertionIndex(job){// the start index should be `flushIndex + 1`\nlet start=flushIndex+1;let end=queue.length;const jobId=getId(job);while(start<end){const middle=start+end>>>1;const middleJobId=getId(queue[middle]);middleJobId<jobId?start=middle+1:end=middle;}return start;}function queueJob(job){// the dedupe search uses the startIndex argument of Array.includes()\n// by default the search index includes the current job that is being run\n// so it cannot recursively trigger itself again.\n// if the job is a watch() callback, the search will start with a +1 index to\n// allow it recursively trigger itself - it is the user's responsibility to\n// ensure it doesn't end up in an infinite loop.\nif((!queue.length||!queue.includes(job,isFlushing&&job.allowRecurse?flushIndex+1:flushIndex))&&job!==currentPreFlushParentJob){const pos=findInsertionIndex(job);if(pos>-1){queue.splice(pos,0,job);}else{queue.push(job);}queueFlush();}}function queueFlush(){if(!isFlushing&&!isFlushPending){isFlushPending=true;currentFlushPromise=resolvedPromise.then(flushJobs);}}function invalidateJob(job){const i=queue.indexOf(job);if(i>flushIndex){queue.splice(i,1);}}function queueCb(cb,activeQueue,pendingQueue,index){if(!isArray(cb)){if(!activeQueue||!activeQueue.includes(cb,cb.allowRecurse?index+1:index)){pendingQueue.push(cb);}}else{// if cb is an array, it is a component lifecycle hook which can only be\n// triggered by a job, which is already deduped in the main queue, so\n// we can skip duplicate check here to improve perf\npendingQueue.push(...cb);}queueFlush();}function queuePreFlushCb(cb){queueCb(cb,activePreFlushCbs,pendingPreFlushCbs,preFlushIndex);}function queuePostFlushCb(cb){queueCb(cb,activePostFlushCbs,pendingPostFlushCbs,postFlushIndex);}function flushPreFlushCbs(seen,parentJob=null){if(pendingPreFlushCbs.length){currentPreFlushParentJob=parentJob;activePreFlushCbs=[...new Set(pendingPreFlushCbs)];pendingPreFlushCbs.length=0;{seen=seen||new Map();}for(preFlushIndex=0;preFlushIndex<activePreFlushCbs.length;preFlushIndex++){{checkRecursiveUpdates(seen,activePreFlushCbs[preFlushIndex]);}activePreFlushCbs[preFlushIndex]();}activePreFlushCbs=null;preFlushIndex=0;currentPreFlushParentJob=null;// recursively flush until it drains\nflushPreFlushCbs(seen,parentJob);}}function flushPostFlushCbs(seen){if(pendingPostFlushCbs.length){const deduped=[...new Set(pendingPostFlushCbs)];pendingPostFlushCbs.length=0;// #1947 already has active queue, nested flushPostFlushCbs call\nif(activePostFlushCbs){activePostFlushCbs.push(...deduped);return;}activePostFlushCbs=deduped;{seen=seen||new Map();}activePostFlushCbs.sort((a,b)=>getId(a)-getId(b));for(postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++){{checkRecursiveUpdates(seen,activePostFlushCbs[postFlushIndex]);}activePostFlushCbs[postFlushIndex]();}activePostFlushCbs=null;postFlushIndex=0;}}const getId=job=>job.id==null?Infinity:job.id;function flushJobs(seen){isFlushPending=false;isFlushing=true;{seen=seen||new Map();}flushPreFlushCbs(seen);// Sort queue before flush.\n// This ensures that:\n// 1. Components are updated from parent to child. (because parent is always\n//    created before the child so its render effect will have smaller\n//    priority number)\n// 2. If a component is unmounted during a parent component's update,\n//    its update can be skipped.\nqueue.sort((a,b)=>getId(a)-getId(b));try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const job=queue[flushIndex];if(job){if(true){checkRecursiveUpdates(seen,job);}callWithErrorHandling(job,null,14/* SCHEDULER */);}}}finally{flushIndex=0;queue.length=0;flushPostFlushCbs(seen);isFlushing=false;currentFlushPromise=null;// some postFlushCb queued jobs!\n// keep flushing until it drains.\nif(queue.length||pendingPostFlushCbs.length){flushJobs(seen);}}}function checkRecursiveUpdates(seen,fn){if(!seen.has(fn)){seen.set(fn,1);}else{const count=seen.get(fn);if(count>RECURSION_LIMIT){throw new Error(`Maximum recursive updates exceeded. `+`This means you have a reactive effect that is mutating its own `+`dependencies and thus recursively triggering itself. Possible sources `+`include component template, render function, updated hook or `+`watcher source function.`);}else{seen.set(fn,count+1);}}}/* eslint-disable no-restricted-globals */let isHmrUpdating=false;const hmrDirtyComponents=new Set();// Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\n{const globalObject=typeof global!=='undefined'?global:typeof self!=='undefined'?self:typeof window!=='undefined'?window:{};globalObject.__VUE_HMR_RUNTIME__={createRecord:tryWrap(createRecord),rerender:tryWrap(rerender),reload:tryWrap(reload)};}const map=new Map();function registerHMR(instance){const id=instance.type.__hmrId;let record=map.get(id);if(!record){createRecord(id,instance.type);record=map.get(id);}record.instances.add(instance);}function unregisterHMR(instance){map.get(instance.type.__hmrId).instances.delete(instance);}function createRecord(id,component){if(!component){warn(`HMR API usage is out of date.\\n`+`Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant `+`dependency that handles Vue SFC compilation.`);component={};}if(map.has(id)){return false;}map.set(id,{component:isClassComponent(component)?component.__vccOpts:component,instances:new Set()});return true;}function rerender(id,newRender){const record=map.get(id);if(!record)return;if(newRender)record.component.render=newRender;// Array.from creates a snapshot which avoids the set being mutated during\n// updates\nArray.from(record.instances).forEach(instance=>{if(newRender){instance.render=newRender;}instance.renderCache=[];// this flag forces child components with slot content to update\nisHmrUpdating=true;instance.update();isHmrUpdating=false;});}function reload(id,newComp){const record=map.get(id);if(!record)return;// Array.from creates a snapshot which avoids the set being mutated during\n// updates\nconst{component,instances}=record;if(!hmrDirtyComponents.has(component)){// 1. Update existing comp definition to match new one\nnewComp=isClassComponent(newComp)?newComp.__vccOpts:newComp;extend(component,newComp);for(const key in component){if(!(key in newComp)){delete component[key];}}// 2. Mark component dirty. This forces the renderer to replace the component\n// on patch.\nhmrDirtyComponents.add(component);// 3. Make sure to unmark the component after the reload.\nqueuePostFlushCb(()=>{hmrDirtyComponents.delete(component);});}Array.from(instances).forEach(instance=>{if(instance.parent){// 4. Force the parent instance to re-render. This will cause all updated\n// components to be unmounted and re-mounted. Queue the update so that we\n// don't end up forcing the same parent to re-render multiple times.\nqueueJob(instance.parent.update);}else if(instance.appContext.reload){// root instance mounted via createApp() has a reload method\ninstance.appContext.reload();}else if(typeof window!=='undefined'){// root instance inside tree created via raw render(). Force reload.\nwindow.location.reload();}else{console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');}});}function tryWrap(fn){return(id,arg)=>{try{return fn(id,arg);}catch(e){console.error(e);console.warn(`[HMR] Something went wrong during Vue component hot-reload. `+`Full reload required.`);}};}function setDevtoolsHook(hook){exports.devtools=hook;}function devtoolsInitApp(app,version){// TODO queue if devtools is undefined\nif(!exports.devtools)return;exports.devtools.emit(\"app:init\"/* APP_INIT */,app,version,{Fragment,Text,Comment,Static});}function devtoolsUnmountApp(app){if(!exports.devtools)return;exports.devtools.emit(\"app:unmount\"/* APP_UNMOUNT */,app);}const devtoolsComponentAdded=/*#__PURE__*/createDevtoolsComponentHook(\"component:added\"/* COMPONENT_ADDED */);const devtoolsComponentUpdated=/*#__PURE__*/createDevtoolsComponentHook(\"component:updated\"/* COMPONENT_UPDATED */);const devtoolsComponentRemoved=/*#__PURE__*/createDevtoolsComponentHook(\"component:removed\"/* COMPONENT_REMOVED */);function createDevtoolsComponentHook(hook){return component=>{if(!exports.devtools)return;exports.devtools.emit(hook,component.appContext.app,component.uid,component.parent?component.parent.uid:undefined,component);};}function devtoolsComponentEmit(component,event,params){if(!exports.devtools)return;exports.devtools.emit(\"component:emit\"/* COMPONENT_EMIT */,component.appContext.app,component,event,params);}function emit(instance,event,...rawArgs){const props=instance.vnode.props||EMPTY_OBJ;{const{emitsOptions,propsOptions:[propsOptions]}=instance;if(emitsOptions){if(!(event in emitsOptions)){if(!propsOptions||!(toHandlerKey(event)in propsOptions)){warn(`Component emitted event \"${event}\" but it is neither declared in `+`the emits option nor as an \"${toHandlerKey(event)}\" prop.`);}}else{const validator=emitsOptions[event];if(isFunction(validator)){const isValid=validator(...rawArgs);if(!isValid){warn(`Invalid event arguments: event validation failed for event \"${event}\".`);}}}}}let args=rawArgs;const isModelListener=event.startsWith('update:');// for v-model update:xxx events, apply modifiers on args\nconst modelArg=isModelListener&&event.slice(7);if(modelArg&&modelArg in props){const modifiersKey=`${modelArg==='modelValue'?'model':modelArg}Modifiers`;const{number,trim}=props[modifiersKey]||EMPTY_OBJ;if(trim){args=rawArgs.map(a=>a.trim());}else if(number){args=rawArgs.map(toNumber);}}{devtoolsComponentEmit(instance,event,args);}{const lowerCaseEvent=event.toLowerCase();if(lowerCaseEvent!==event&&props[toHandlerKey(lowerCaseEvent)]){warn(`Event \"${lowerCaseEvent}\" is emitted in component `+`${formatComponentName(instance,instance.type)} but the handler is registered for \"${event}\". `+`Note that HTML attributes are case-insensitive and you cannot use `+`v-on to listen to camelCase events when using in-DOM templates. `+`You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);}}// convert handler name to camelCase. See issue #2249\nlet handlerName=toHandlerKey(camelize(event));let handler=props[handlerName];// for v-model update:xxx events, also trigger kebab-case equivalent\n// for props passed via kebab-case\nif(!handler&&isModelListener){handlerName=toHandlerKey(hyphenate(event));handler=props[handlerName];}if(handler){callWithAsyncErrorHandling(handler,instance,6/* COMPONENT_EVENT_HANDLER */,args);}const onceHandler=props[handlerName+`Once`];if(onceHandler){if(!instance.emitted){(instance.emitted={})[handlerName]=true;}else if(instance.emitted[handlerName]){return;}callWithAsyncErrorHandling(onceHandler,instance,6/* COMPONENT_EVENT_HANDLER */,args);}}function normalizeEmitsOptions(comp,appContext,asMixin=false){if(!appContext.deopt&&comp.__emits!==undefined){return comp.__emits;}const raw=comp.emits;let normalized={};// apply mixin/extends props\nlet hasExtends=false;if(!isFunction(comp)){const extendEmits=raw=>{const normalizedFromExtend=normalizeEmitsOptions(raw,appContext,true);if(normalizedFromExtend){hasExtends=true;extend(normalized,normalizedFromExtend);}};if(!asMixin&&appContext.mixins.length){appContext.mixins.forEach(extendEmits);}if(comp.extends){extendEmits(comp.extends);}if(comp.mixins){comp.mixins.forEach(extendEmits);}}if(!raw&&!hasExtends){return comp.__emits=null;}if(isArray(raw)){raw.forEach(key=>normalized[key]=null);}else{extend(normalized,raw);}return comp.__emits=normalized;}// Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\nfunction isEmitListener(options,key){if(!options||!isOn(key)){return false;}key=key.slice(2).replace(/Once$/,'');return hasOwn(options,key[0].toLowerCase()+key.slice(1))||hasOwn(options,hyphenate(key))||hasOwn(options,key);}let isRenderingCompiledSlot=0;const setCompiledSlotRendering=n=>isRenderingCompiledSlot+=n;/**\n     * Compiler runtime helper for rendering `<slot/>`\n     * @private\n     */function renderSlot(slots,name,props={},// this is not a user-facing function, so the fallback is always generated by\n// the compiler and guaranteed to be a function returning an array\nfallback,noSlotted){let slot=slots[name];if(slot&&slot.length>1){warn(`SSR-optimized slot function detected in a non-SSR-optimized render `+`function. You need to mark this component with $dynamic-slots in the `+`parent template.`);slot=()=>[];}// a compiled slot disables block tracking by default to avoid manual\n// invocation interfering with template-based block tracking, but in\n// `renderSlot` we can be sure that it's template-based so we can force\n// enable it.\nisRenderingCompiledSlot++;openBlock();const validSlotContent=slot&&ensureValidVNode(slot(props));const rendered=createBlock(Fragment,{key:props.key||`_${name}`},validSlotContent||(fallback?fallback():[]),validSlotContent&&slots._===1/* STABLE */?64/* STABLE_FRAGMENT */:-2/* BAIL */);if(!noSlotted&&rendered.scopeId){rendered.slotScopeIds=[rendered.scopeId+'-s'];}isRenderingCompiledSlot--;return rendered;}function ensureValidVNode(vnodes){return vnodes.some(child=>{if(!isVNode(child))return true;if(child.type===Comment)return false;if(child.type===Fragment&&!ensureValidVNode(child.children))return false;return true;})?vnodes:null;}/**\n     * mark the current rendering instance for asset resolution (e.g.\n     * resolveComponent, resolveDirective) during render\n     */let currentRenderingInstance=null;let currentScopeId=null;/**\n     * Note: rendering calls maybe nested. The function returns the parent rendering\n     * instance if present, which should be restored after the render is done:\n     *\n     * ```js\n     * const prev = setCurrentRenderingInstance(i)\n     * // ...render\n     * setCurrentRenderingInstance(prev)\n     * ```\n     */function setCurrentRenderingInstance(instance){const prev=currentRenderingInstance;currentRenderingInstance=instance;currentScopeId=instance&&instance.type.__scopeId||null;return prev;}/**\n     * Set scope id when creating hoisted vnodes.\n     * @private compiler helper\n     */function pushScopeId(id){currentScopeId=id;}/**\n     * Technically we no longer need this after 3.0.8 but we need to keep the same\n     * API for backwards compat w/ code generated by compilers.\n     * @private\n     */function popScopeId(){currentScopeId=null;}/**\n     * Only for backwards compat\n     * @private\n     */const withScopeId=_id=>withCtx;/**\n     * Wrap a slot function to memoize current rendering instance\n     * @private compiler helper\n     */function withCtx(fn,ctx=currentRenderingInstance){if(!ctx)return fn;const renderFnWithContext=(...args)=>{// If a user calls a compiled slot inside a template expression (#1745), it\n// can mess up block tracking, so by default we need to push a null block to\n// avoid that. This isn't necessary if rendering a compiled `<slot>`.\nif(!isRenderingCompiledSlot){openBlock(true/* null block that disables tracking */);}const prevInstance=setCurrentRenderingInstance(ctx);const res=fn(...args);setCurrentRenderingInstance(prevInstance);if(!isRenderingCompiledSlot){closeBlock();}return res;};// mark this as a compiled slot function.\n// this is used in vnode.ts -> normalizeChildren() to set the slot\n// rendering flag.\nrenderFnWithContext._c=true;return renderFnWithContext;}/**\n     * dev only flag to track whether $attrs was used during render.\n     * If $attrs was used during render then the warning for failed attrs\n     * fallthrough can be suppressed.\n     */let accessedAttrs=false;function markAttrsAccessed(){accessedAttrs=true;}function renderComponentRoot(instance){const{type:Component,vnode,proxy,withProxy,props,propsOptions:[propsOptions],slots,attrs,emit,render,renderCache,data,setupState,ctx}=instance;let result;const prev=setCurrentRenderingInstance(instance);{accessedAttrs=false;}try{let fallthroughAttrs;if(vnode.shapeFlag&4/* STATEFUL_COMPONENT */){// withProxy is a proxy with a different `has` trap only for\n// runtime-compiled render functions using `with` block.\nconst proxyToUse=withProxy||proxy;result=normalizeVNode(render.call(proxyToUse,proxyToUse,renderCache,props,setupState,data,ctx));fallthroughAttrs=attrs;}else{// functional\nconst render=Component;// in dev, mark attrs accessed if optional props (attrs === props)\nif(true&&attrs===props){markAttrsAccessed();}result=normalizeVNode(render.length>1?render(props,true?{get attrs(){markAttrsAccessed();return attrs;},slots,emit}:{attrs,slots,emit}):render(props,null/* we know it doesn't need it */));fallthroughAttrs=Component.props?attrs:getFunctionalFallthrough(attrs);}// attr merging\n// in dev mode, comments are preserved, and it's possible for a template\n// to have comments along side the root element which makes it a fragment\nlet root=result;let setRoot=undefined;if(true&&result.patchFlag>0&&result.patchFlag&2048/* DEV_ROOT_FRAGMENT */){;[root,setRoot]=getChildRoot(result);}if(Component.inheritAttrs!==false&&fallthroughAttrs){const keys=Object.keys(fallthroughAttrs);const{shapeFlag}=root;if(keys.length){if(shapeFlag&1/* ELEMENT */||shapeFlag&6/* COMPONENT */){if(propsOptions&&keys.some(isModelListener)){// If a v-model listener (onUpdate:xxx) has a corresponding declared\n// prop, it indicates this component expects to handle v-model and\n// it should not fallthrough.\n// related: #1543, #1643, #1989\nfallthroughAttrs=filterModelListeners(fallthroughAttrs,propsOptions);}root=cloneVNode(root,fallthroughAttrs);}else if(true&&!accessedAttrs&&root.type!==Comment){const allAttrs=Object.keys(attrs);const eventAttrs=[];const extraAttrs=[];for(let i=0,l=allAttrs.length;i<l;i++){const key=allAttrs[i];if(isOn(key)){// ignore v-model handlers when they fail to fallthrough\nif(!isModelListener(key)){// remove `on`, lowercase first letter to reflect event casing\n// accurately\neventAttrs.push(key[2].toLowerCase()+key.slice(3));}}else{extraAttrs.push(key);}}if(extraAttrs.length){warn(`Extraneous non-props attributes (`+`${extraAttrs.join(', ')}) `+`were passed to component but could not be automatically inherited `+`because component renders fragment or text root nodes.`);}if(eventAttrs.length){warn(`Extraneous non-emits event listeners (`+`${eventAttrs.join(', ')}) `+`were passed to component but could not be automatically inherited `+`because component renders fragment or text root nodes. `+`If the listener is intended to be a component custom event listener only, `+`declare it using the \"emits\" option.`);}}}}// inherit directives\nif(vnode.dirs){if(true&&!isElementRoot(root)){warn(`Runtime directive used on component with non-element root node. `+`The directives will not function as intended.`);}root.dirs=root.dirs?root.dirs.concat(vnode.dirs):vnode.dirs;}// inherit transition data\nif(vnode.transition){if(true&&!isElementRoot(root)){warn(`Component inside <Transition> renders non-element root node `+`that cannot be animated.`);}root.transition=vnode.transition;}if(true&&setRoot){setRoot(root);}else{result=root;}}catch(err){blockStack.length=0;handleError(err,instance,1/* RENDER_FUNCTION */);result=createVNode(Comment);}setCurrentRenderingInstance(prev);return result;}/**\n     * dev only\n     * In dev mode, template root level comments are rendered, which turns the\n     * template into a fragment root, but we need to locate the single element\n     * root for attrs and scope id processing.\n     */const getChildRoot=vnode=>{const rawChildren=vnode.children;const dynamicChildren=vnode.dynamicChildren;const childRoot=filterSingleRoot(rawChildren);if(!childRoot){return[vnode,undefined];}const index=rawChildren.indexOf(childRoot);const dynamicIndex=dynamicChildren?dynamicChildren.indexOf(childRoot):-1;const setRoot=updatedRoot=>{rawChildren[index]=updatedRoot;if(dynamicChildren){if(dynamicIndex>-1){dynamicChildren[dynamicIndex]=updatedRoot;}else if(updatedRoot.patchFlag>0){vnode.dynamicChildren=[...dynamicChildren,updatedRoot];}}};return[normalizeVNode(childRoot),setRoot];};function filterSingleRoot(children){let singleRoot;for(let i=0;i<children.length;i++){const child=children[i];if(isVNode(child)){// ignore user comment\nif(child.type!==Comment||child.children==='v-if'){if(singleRoot){// has more than 1 non-comment child, return now\nreturn;}else{singleRoot=child;}}}else{return;}}return singleRoot;}const getFunctionalFallthrough=attrs=>{let res;for(const key in attrs){if(key==='class'||key==='style'||isOn(key)){(res||(res={}))[key]=attrs[key];}}return res;};const filterModelListeners=(attrs,props)=>{const res={};for(const key in attrs){if(!isModelListener(key)||!(key.slice(9)in props)){res[key]=attrs[key];}}return res;};const isElementRoot=vnode=>{return vnode.shapeFlag&6/* COMPONENT */||vnode.shapeFlag&1/* ELEMENT */||vnode.type===Comment// potential v-if branch switch\n;};function shouldUpdateComponent(prevVNode,nextVNode,optimized){const{props:prevProps,children:prevChildren,component}=prevVNode;const{props:nextProps,children:nextChildren,patchFlag}=nextVNode;const emits=component.emitsOptions;// Parent component's render function was hot-updated. Since this may have\n// caused the child component's slots content to have changed, we need to\n// force the child to update as well.\nif((prevChildren||nextChildren)&&isHmrUpdating){return true;}// force child update for runtime directive or transition on component vnode.\nif(nextVNode.dirs||nextVNode.transition){return true;}if(optimized&&patchFlag>=0){if(patchFlag&1024/* DYNAMIC_SLOTS */){// slot content that references values that might have changed,\n// e.g. in a v-for\nreturn true;}if(patchFlag&16/* FULL_PROPS */){if(!prevProps){return!!nextProps;}// presence of this flag indicates props are always non-null\nreturn hasPropsChanged(prevProps,nextProps,emits);}else if(patchFlag&8/* PROPS */){const dynamicProps=nextVNode.dynamicProps;for(let i=0;i<dynamicProps.length;i++){const key=dynamicProps[i];if(nextProps[key]!==prevProps[key]&&!isEmitListener(emits,key)){return true;}}}}else{// this path is only taken by manually written render functions\n// so presence of any children leads to a forced update\nif(prevChildren||nextChildren){if(!nextChildren||!nextChildren.$stable){return true;}}if(prevProps===nextProps){return false;}if(!prevProps){return!!nextProps;}if(!nextProps){return true;}return hasPropsChanged(prevProps,nextProps,emits);}return false;}function hasPropsChanged(prevProps,nextProps,emitsOptions){const nextKeys=Object.keys(nextProps);if(nextKeys.length!==Object.keys(prevProps).length){return true;}for(let i=0;i<nextKeys.length;i++){const key=nextKeys[i];if(nextProps[key]!==prevProps[key]&&!isEmitListener(emitsOptions,key)){return true;}}return false;}function updateHOCHostEl({vnode,parent},el// HostNode\n){while(parent&&parent.subTree===vnode){(vnode=parent.vnode).el=el;parent=parent.parent;}}const isSuspense=type=>type.__isSuspense;// Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\nconst SuspenseImpl={name:'Suspense',// In order to make Suspense tree-shakable, we need to avoid importing it\n// directly in the renderer. The renderer checks for the __isSuspense flag\n// on a vnode's type and calls the `process` method, passing in renderer\n// internals.\n__isSuspense:true,process(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,// platform-specific impl passed from renderer\nrendererInternals){if(n1==null){mountSuspense(n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,rendererInternals);}else{patchSuspense(n1,n2,container,anchor,parentComponent,isSVG,slotScopeIds,optimized,rendererInternals);}},hydrate:hydrateSuspense,create:createSuspenseBoundary};// Force-casted public typing for h and TSX props inference\nconst Suspense=SuspenseImpl;function mountSuspense(vnode,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,rendererInternals){const{p:patch,o:{createElement}}=rendererInternals;const hiddenContainer=createElement('div');const suspense=vnode.suspense=createSuspenseBoundary(vnode,parentSuspense,parentComponent,container,hiddenContainer,anchor,isSVG,slotScopeIds,optimized,rendererInternals);// start mounting the content subtree in an off-dom container\npatch(null,suspense.pendingBranch=vnode.ssContent,hiddenContainer,null,parentComponent,suspense,isSVG,slotScopeIds);// now check if we have encountered any async deps\nif(suspense.deps>0){// has async\n// mount the fallback tree\npatch(null,vnode.ssFallback,container,anchor,parentComponent,null,// fallback tree will not have suspense context\nisSVG,slotScopeIds);setActiveBranch(suspense,vnode.ssFallback);}else{// Suspense has no async deps. Just resolve.\nsuspense.resolve();}}function patchSuspense(n1,n2,container,anchor,parentComponent,isSVG,slotScopeIds,optimized,{p:patch,um:unmount,o:{createElement}}){const suspense=n2.suspense=n1.suspense;suspense.vnode=n2;n2.el=n1.el;const newBranch=n2.ssContent;const newFallback=n2.ssFallback;const{activeBranch,pendingBranch,isInFallback,isHydrating}=suspense;if(pendingBranch){suspense.pendingBranch=newBranch;if(isSameVNodeType(newBranch,pendingBranch)){// same root type but content may have changed.\npatch(pendingBranch,newBranch,suspense.hiddenContainer,null,parentComponent,suspense,isSVG,slotScopeIds,optimized);if(suspense.deps<=0){suspense.resolve();}else if(isInFallback){patch(activeBranch,newFallback,container,anchor,parentComponent,null,// fallback tree will not have suspense context\nisSVG,slotScopeIds,optimized);setActiveBranch(suspense,newFallback);}}else{// toggled before pending tree is resolved\nsuspense.pendingId++;if(isHydrating){// if toggled before hydration is finished, the current DOM tree is\n// no longer valid. set it as the active branch so it will be unmounted\n// when resolved\nsuspense.isHydrating=false;suspense.activeBranch=pendingBranch;}else{unmount(pendingBranch,parentComponent,suspense);}// increment pending ID. this is used to invalidate async callbacks\n// reset suspense state\nsuspense.deps=0;// discard effects from pending branch\nsuspense.effects.length=0;// discard previous container\nsuspense.hiddenContainer=createElement('div');if(isInFallback){// already in fallback state\npatch(null,newBranch,suspense.hiddenContainer,null,parentComponent,suspense,isSVG,slotScopeIds,optimized);if(suspense.deps<=0){suspense.resolve();}else{patch(activeBranch,newFallback,container,anchor,parentComponent,null,// fallback tree will not have suspense context\nisSVG,slotScopeIds,optimized);setActiveBranch(suspense,newFallback);}}else if(activeBranch&&isSameVNodeType(newBranch,activeBranch)){// toggled \"back\" to current active branch\npatch(activeBranch,newBranch,container,anchor,parentComponent,suspense,isSVG,slotScopeIds,optimized);// force resolve\nsuspense.resolve(true);}else{// switched to a 3rd branch\npatch(null,newBranch,suspense.hiddenContainer,null,parentComponent,suspense,isSVG,slotScopeIds,optimized);if(suspense.deps<=0){suspense.resolve();}}}}else{if(activeBranch&&isSameVNodeType(newBranch,activeBranch)){// root did not change, just normal patch\npatch(activeBranch,newBranch,container,anchor,parentComponent,suspense,isSVG,slotScopeIds,optimized);setActiveBranch(suspense,newBranch);}else{// root node toggled\n// invoke @pending event\nconst onPending=n2.props&&n2.props.onPending;if(isFunction(onPending)){onPending();}// mount pending branch in off-dom container\nsuspense.pendingBranch=newBranch;suspense.pendingId++;patch(null,newBranch,suspense.hiddenContainer,null,parentComponent,suspense,isSVG,slotScopeIds,optimized);if(suspense.deps<=0){// incoming branch has no async deps, resolve now.\nsuspense.resolve();}else{const{timeout,pendingId}=suspense;if(timeout>0){setTimeout(()=>{if(suspense.pendingId===pendingId){suspense.fallback(newFallback);}},timeout);}else if(timeout===0){suspense.fallback(newFallback);}}}}}let hasWarned=false;function createSuspenseBoundary(vnode,parent,parentComponent,container,hiddenContainer,anchor,isSVG,slotScopeIds,optimized,rendererInternals,isHydrating=false){/* istanbul ignore if */if(!hasWarned){hasWarned=true;// @ts-ignore `console.info` cannot be null error\nconsole[console.info?'info':'log'](`<Suspense> is an experimental feature and its API will likely change.`);}const{p:patch,m:move,um:unmount,n:next,o:{parentNode,remove}}=rendererInternals;const timeout=toNumber(vnode.props&&vnode.props.timeout);const suspense={vnode,parent,parentComponent,isSVG,container,hiddenContainer,anchor,deps:0,pendingId:0,timeout:typeof timeout==='number'?timeout:-1,activeBranch:null,pendingBranch:null,isInFallback:true,isHydrating,isUnmounted:false,effects:[],resolve(resume=false){{if(!resume&&!suspense.pendingBranch){throw new Error(`suspense.resolve() is called without a pending branch.`);}if(suspense.isUnmounted){throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);}}const{vnode,activeBranch,pendingBranch,pendingId,effects,parentComponent,container}=suspense;if(suspense.isHydrating){suspense.isHydrating=false;}else if(!resume){const delayEnter=activeBranch&&pendingBranch.transition&&pendingBranch.transition.mode==='out-in';if(delayEnter){activeBranch.transition.afterLeave=()=>{if(pendingId===suspense.pendingId){move(pendingBranch,container,anchor,0/* ENTER */);}};}// this is initial anchor on mount\nlet{anchor}=suspense;// unmount current active tree\nif(activeBranch){// if the fallback tree was mounted, it may have been moved\n// as part of a parent suspense. get the latest anchor for insertion\nanchor=next(activeBranch);unmount(activeBranch,parentComponent,suspense,true);}if(!delayEnter){// move content from off-dom container to actual container\nmove(pendingBranch,container,anchor,0/* ENTER */);}}setActiveBranch(suspense,pendingBranch);suspense.pendingBranch=null;suspense.isInFallback=false;// flush buffered effects\n// check if there is a pending parent suspense\nlet parent=suspense.parent;let hasUnresolvedAncestor=false;while(parent){if(parent.pendingBranch){// found a pending parent suspense, merge buffered post jobs\n// into that parent\nparent.effects.push(...effects);hasUnresolvedAncestor=true;break;}parent=parent.parent;}// no pending parent suspense, flush all jobs\nif(!hasUnresolvedAncestor){queuePostFlushCb(effects);}suspense.effects=[];// invoke @resolve event\nconst onResolve=vnode.props&&vnode.props.onResolve;if(isFunction(onResolve)){onResolve();}},fallback(fallbackVNode){if(!suspense.pendingBranch){return;}const{vnode,activeBranch,parentComponent,container,isSVG}=suspense;// invoke @fallback event\nconst onFallback=vnode.props&&vnode.props.onFallback;if(isFunction(onFallback)){onFallback();}const anchor=next(activeBranch);const mountFallback=()=>{if(!suspense.isInFallback){return;}// mount the fallback tree\npatch(null,fallbackVNode,container,anchor,parentComponent,null,// fallback tree will not have suspense context\nisSVG,slotScopeIds,optimized);setActiveBranch(suspense,fallbackVNode);};const delayEnter=fallbackVNode.transition&&fallbackVNode.transition.mode==='out-in';if(delayEnter){activeBranch.transition.afterLeave=mountFallback;}// unmount current active branch\nunmount(activeBranch,parentComponent,null,// no suspense so unmount hooks fire now\ntrue// shouldRemove\n);suspense.isInFallback=true;if(!delayEnter){mountFallback();}},move(container,anchor,type){suspense.activeBranch&&move(suspense.activeBranch,container,anchor,type);suspense.container=container;},next(){return suspense.activeBranch&&next(suspense.activeBranch);},registerDep(instance,setupRenderEffect){const isInPendingSuspense=!!suspense.pendingBranch;if(isInPendingSuspense){suspense.deps++;}const hydratedEl=instance.vnode.el;instance.asyncDep.catch(err=>{handleError(err,instance,0/* SETUP_FUNCTION */);}).then(asyncSetupResult=>{// retry when the setup() promise resolves.\n// component may have been unmounted before resolve.\nif(instance.isUnmounted||suspense.isUnmounted||suspense.pendingId!==instance.suspenseId){return;}// retry from this component\ninstance.asyncResolved=true;const{vnode}=instance;{pushWarningContext(vnode);}handleSetupResult(instance,asyncSetupResult,false);if(hydratedEl){// vnode may have been replaced if an update happened before the\n// async dep is resolved.\nvnode.el=hydratedEl;}const placeholder=!hydratedEl&&instance.subTree.el;setupRenderEffect(instance,vnode,// component may have been moved before resolve.\n// if this is not a hydration, instance.subTree will be the comment\n// placeholder.\nparentNode(hydratedEl||instance.subTree.el),// anchor will not be used if this is hydration, so only need to\n// consider the comment placeholder case.\nhydratedEl?null:next(instance.subTree),suspense,isSVG,optimized);if(placeholder){remove(placeholder);}updateHOCHostEl(instance,vnode.el);{popWarningContext();}// only decrease deps count if suspense is not already resolved\nif(isInPendingSuspense&&--suspense.deps===0){suspense.resolve();}});},unmount(parentSuspense,doRemove){suspense.isUnmounted=true;if(suspense.activeBranch){unmount(suspense.activeBranch,parentComponent,parentSuspense,doRemove);}if(suspense.pendingBranch){unmount(suspense.pendingBranch,parentComponent,parentSuspense,doRemove);}}};return suspense;}function hydrateSuspense(node,vnode,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,rendererInternals,hydrateNode){/* eslint-disable no-restricted-globals */const suspense=vnode.suspense=createSuspenseBoundary(vnode,parentSuspense,parentComponent,node.parentNode,document.createElement('div'),null,isSVG,slotScopeIds,optimized,rendererInternals,true/* hydrating */);// there are two possible scenarios for server-rendered suspense:\n// - success: ssr content should be fully resolved\n// - failure: ssr content should be the fallback branch.\n// however, on the client we don't really know if it has failed or not\n// attempt to hydrate the DOM assuming it has succeeded, but we still\n// need to construct a suspense boundary first\nconst result=hydrateNode(node,suspense.pendingBranch=vnode.ssContent,parentComponent,suspense,slotScopeIds,optimized);if(suspense.deps===0){suspense.resolve();}return result;/* eslint-enable no-restricted-globals */}function normalizeSuspenseChildren(vnode){const{shapeFlag,children}=vnode;let content;let fallback;if(shapeFlag&32/* SLOTS_CHILDREN */){content=normalizeSuspenseSlot(children.default);fallback=normalizeSuspenseSlot(children.fallback);}else{content=normalizeSuspenseSlot(children);fallback=normalizeVNode(null);}return{content,fallback};}function normalizeSuspenseSlot(s){if(isFunction(s)){s=s();}if(isArray(s)){const singleChild=filterSingleRoot(s);if(!singleChild){warn(`<Suspense> slots expect a single root node.`);}s=singleChild;}return normalizeVNode(s);}function queueEffectWithSuspense(fn,suspense){if(suspense&&suspense.pendingBranch){if(isArray(fn)){suspense.effects.push(...fn);}else{suspense.effects.push(fn);}}else{queuePostFlushCb(fn);}}function setActiveBranch(suspense,branch){suspense.activeBranch=branch;const{vnode,parentComponent}=suspense;const el=vnode.el=branch.el;// in case suspense is the root node of a component,\n// recursively update the HOC el\nif(parentComponent&&parentComponent.subTree===vnode){parentComponent.vnode.el=el;updateHOCHostEl(parentComponent,el);}}function initProps(instance,rawProps,isStateful,// result of bitwise flag comparison\nisSSR=false){const props={};const attrs={};def(attrs,InternalObjectKey,1);instance.propsDefaults=Object.create(null);setFullProps(instance,rawProps,props,attrs);// validation\n{validateProps(rawProps||{},props,instance);}if(isStateful){// stateful\ninstance.props=isSSR?props:shallowReactive(props);}else{if(!instance.type.props){// functional w/ optional props, props === attrs\ninstance.props=attrs;}else{// functional w/ declared props\ninstance.props=props;}}instance.attrs=attrs;}function updateProps(instance,rawProps,rawPrevProps,optimized){const{props,attrs,vnode:{patchFlag}}=instance;const rawCurrentProps=toRaw(props);const[options]=instance.propsOptions;if(// always force full diff in dev\n// - #1942 if hmr is enabled with sfc component\n// - vite#872 non-sfc component used by sfc component\n!(instance.type.__hmrId||instance.parent&&instance.parent.type.__hmrId)&&(optimized||patchFlag>0)&&!(patchFlag&16/* FULL_PROPS */)){if(patchFlag&8/* PROPS */){// Compiler-generated props & no keys change, just set the updated\n// the props.\nconst propsToUpdate=instance.vnode.dynamicProps;for(let i=0;i<propsToUpdate.length;i++){const key=propsToUpdate[i];// PROPS flag guarantees rawProps to be non-null\nconst value=rawProps[key];if(options){// attr / props separation was done on init and will be consistent\n// in this code path, so just check if attrs have it.\nif(hasOwn(attrs,key)){attrs[key]=value;}else{const camelizedKey=camelize(key);props[camelizedKey]=resolvePropValue(options,rawCurrentProps,camelizedKey,value,instance);}}else{attrs[key]=value;}}}}else{// full props update.\nsetFullProps(instance,rawProps,props,attrs);// in case of dynamic props, check if we need to delete keys from\n// the props object\nlet kebabKey;for(const key in rawCurrentProps){if(!rawProps||// for camelCase\n!hasOwn(rawProps,key)&&(// it's possible the original props was passed in as kebab-case\n// and converted to camelCase (#955)\n(kebabKey=hyphenate(key))===key||!hasOwn(rawProps,kebabKey))){if(options){if(rawPrevProps&&(// for camelCase\nrawPrevProps[key]!==undefined||// for kebab-case\nrawPrevProps[kebabKey]!==undefined)){props[key]=resolvePropValue(options,rawProps||EMPTY_OBJ,key,undefined,instance);}}else{delete props[key];}}}// in the case of functional component w/o props declaration, props and\n// attrs point to the same object so it should already have been updated.\nif(attrs!==rawCurrentProps){for(const key in attrs){if(!rawProps||!hasOwn(rawProps,key)){delete attrs[key];}}}}// trigger updates for $attrs in case it's used in component slots\ntrigger(instance,\"set\"/* SET */,'$attrs');{validateProps(rawProps||{},props,instance);}}function setFullProps(instance,rawProps,props,attrs){const[options,needCastKeys]=instance.propsOptions;if(rawProps){for(const key in rawProps){const value=rawProps[key];// key, ref are reserved and never passed down\nif(isReservedProp(key)){continue;}// prop option names are camelized during normalization, so to support\n// kebab -> camel conversion here we need to camelize the key.\nlet camelKey;if(options&&hasOwn(options,camelKey=camelize(key))){props[camelKey]=value;}else if(!isEmitListener(instance.emitsOptions,key)){// Any non-declared (either as a prop or an emitted event) props are put\n// into a separate `attrs` object for spreading. Make sure to preserve\n// original key casing\nattrs[key]=value;}}}if(needCastKeys){const rawCurrentProps=toRaw(props);for(let i=0;i<needCastKeys.length;i++){const key=needCastKeys[i];props[key]=resolvePropValue(options,rawCurrentProps,key,rawCurrentProps[key],instance);}}}function resolvePropValue(options,props,key,value,instance){const opt=options[key];if(opt!=null){const hasDefault=hasOwn(opt,'default');// default values\nif(hasDefault&&value===undefined){const defaultValue=opt.default;if(opt.type!==Function&&isFunction(defaultValue)){const{propsDefaults}=instance;if(key in propsDefaults){value=propsDefaults[key];}else{setCurrentInstance(instance);value=propsDefaults[key]=defaultValue(props);setCurrentInstance(null);}}else{value=defaultValue;}}// boolean casting\nif(opt[0/* shouldCast */]){if(!hasOwn(props,key)&&!hasDefault){value=false;}else if(opt[1/* shouldCastTrue */]&&(value===''||value===hyphenate(key))){value=true;}}}return value;}function normalizePropsOptions(comp,appContext,asMixin=false){if(!appContext.deopt&&comp.__props){return comp.__props;}const raw=comp.props;const normalized={};const needCastKeys=[];// apply mixin/extends props\nlet hasExtends=false;if(!isFunction(comp)){const extendProps=raw=>{hasExtends=true;const[props,keys]=normalizePropsOptions(raw,appContext,true);extend(normalized,props);if(keys)needCastKeys.push(...keys);};if(!asMixin&&appContext.mixins.length){appContext.mixins.forEach(extendProps);}if(comp.extends){extendProps(comp.extends);}if(comp.mixins){comp.mixins.forEach(extendProps);}}if(!raw&&!hasExtends){return comp.__props=EMPTY_ARR;}if(isArray(raw)){for(let i=0;i<raw.length;i++){if(!isString(raw[i])){warn(`props must be strings when using array syntax.`,raw[i]);}const normalizedKey=camelize(raw[i]);if(validatePropName(normalizedKey)){normalized[normalizedKey]=EMPTY_OBJ;}}}else if(raw){if(!isObject(raw)){warn(`invalid props options`,raw);}for(const key in raw){const normalizedKey=camelize(key);if(validatePropName(normalizedKey)){const opt=raw[key];const prop=normalized[normalizedKey]=isArray(opt)||isFunction(opt)?{type:opt}:opt;if(prop){const booleanIndex=getTypeIndex(Boolean,prop.type);const stringIndex=getTypeIndex(String,prop.type);prop[0/* shouldCast */]=booleanIndex>-1;prop[1/* shouldCastTrue */]=stringIndex<0||booleanIndex<stringIndex;// if the prop needs boolean casting or default value\nif(booleanIndex>-1||hasOwn(prop,'default')){needCastKeys.push(normalizedKey);}}}}}return comp.__props=[normalized,needCastKeys];}function validatePropName(key){if(key[0]!=='$'){return true;}else{warn(`Invalid prop name: \"${key}\" is a reserved property.`);}return false;}// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor){const match=ctor&&ctor.toString().match(/^\\s*function (\\w+)/);return match?match[1]:'';}function isSameType(a,b){return getType(a)===getType(b);}function getTypeIndex(type,expectedTypes){if(isArray(expectedTypes)){return expectedTypes.findIndex(t=>isSameType(t,type));}else if(isFunction(expectedTypes)){return isSameType(expectedTypes,type)?0:-1;}return-1;}/**\n     * dev only\n     */function validateProps(rawProps,props,instance){const resolvedValues=toRaw(props);const options=instance.propsOptions[0];for(const key in options){let opt=options[key];if(opt==null)continue;validateProp(key,resolvedValues[key],opt,!hasOwn(rawProps,key)&&!hasOwn(rawProps,hyphenate(key)));}}/**\n     * dev only\n     */function validateProp(name,value,prop,isAbsent){const{type,required,validator}=prop;// required!\nif(required&&isAbsent){warn('Missing required prop: \"'+name+'\"');return;}// missing but optional\nif(value==null&&!prop.required){return;}// type check\nif(type!=null&&type!==true){let isValid=false;const types=isArray(type)?type:[type];const expectedTypes=[];// value is valid as long as one of the specified types match\nfor(let i=0;i<types.length&&!isValid;i++){const{valid,expectedType}=assertType(value,types[i]);expectedTypes.push(expectedType||'');isValid=valid;}if(!isValid){warn(getInvalidTypeMessage(name,value,expectedTypes));return;}}// custom validator\nif(validator&&!validator(value)){warn('Invalid prop: custom validator check failed for prop \"'+name+'\".');}}const isSimpleType=/*#__PURE__*/makeMap('String,Number,Boolean,Function,Symbol,BigInt');/**\n     * dev only\n     */function assertType(value,type){let valid;const expectedType=getType(type);if(isSimpleType(expectedType)){const t=typeof value;valid=t===expectedType.toLowerCase();// for primitive wrapper objects\nif(!valid&&t==='object'){valid=value instanceof type;}}else if(expectedType==='Object'){valid=isObject(value);}else if(expectedType==='Array'){valid=isArray(value);}else{valid=value instanceof type;}return{valid,expectedType};}/**\n     * dev only\n     */function getInvalidTypeMessage(name,value,expectedTypes){let message=`Invalid prop: type check failed for prop \"${name}\".`+` Expected ${expectedTypes.map(capitalize).join(', ')}`;const expectedType=expectedTypes[0];const receivedType=toRawType(value);const expectedValue=styleValue(value,expectedType);const receivedValue=styleValue(value,receivedType);// check if we need to specify expected value\nif(expectedTypes.length===1&&isExplicable(expectedType)&&!isBoolean(expectedType,receivedType)){message+=` with value ${expectedValue}`;}message+=`, got ${receivedType} `;// check if we need to specify received value\nif(isExplicable(receivedType)){message+=`with value ${receivedValue}.`;}return message;}/**\n     * dev only\n     */function styleValue(value,type){if(type==='String'){return`\"${value}\"`;}else if(type==='Number'){return`${Number(value)}`;}else{return`${value}`;}}/**\n     * dev only\n     */function isExplicable(type){const explicitTypes=['string','number','boolean'];return explicitTypes.some(elem=>type.toLowerCase()===elem);}/**\n     * dev only\n     */function isBoolean(...args){return args.some(elem=>elem.toLowerCase()==='boolean');}function injectHook(type,hook,target=currentInstance,prepend=false){if(target){const hooks=target[type]||(target[type]=[]);// cache the error handling wrapper for injected hooks so the same hook\n// can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n// handling\".\nconst wrappedHook=hook.__weh||(hook.__weh=(...args)=>{if(target.isUnmounted){return;}// disable tracking inside all lifecycle hooks\n// since they can potentially be called inside effects.\npauseTracking();// Set currentInstance during hook invocation.\n// This assumes the hook does not synchronously trigger other hooks, which\n// can only be false when the user does something really funky.\nsetCurrentInstance(target);const res=callWithAsyncErrorHandling(hook,target,type,args);setCurrentInstance(null);resetTracking();return res;});if(prepend){hooks.unshift(wrappedHook);}else{hooks.push(wrappedHook);}return wrappedHook;}else{const apiName=toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/,''));warn(`${apiName} is called when there is no active component instance to be `+`associated with. `+`Lifecycle injection APIs can only be used during execution of setup().`+(` If you are using async setup(), make sure to register lifecycle `+`hooks before the first await statement.`));}}const createHook=lifecycle=>(hook,target=currentInstance)=>// post-create lifecycle registrations are noops during SSR\n!isInSSRComponentSetup&&injectHook(lifecycle,hook,target);const onBeforeMount=createHook(\"bm\"/* BEFORE_MOUNT */);const onMounted=createHook(\"m\"/* MOUNTED */);const onBeforeUpdate=createHook(\"bu\"/* BEFORE_UPDATE */);const onUpdated=createHook(\"u\"/* UPDATED */);const onBeforeUnmount=createHook(\"bum\"/* BEFORE_UNMOUNT */);const onUnmounted=createHook(\"um\"/* UNMOUNTED */);const onRenderTriggered=createHook(\"rtg\"/* RENDER_TRIGGERED */);const onRenderTracked=createHook(\"rtc\"/* RENDER_TRACKED */);const onErrorCaptured=(hook,target=currentInstance)=>{injectHook(\"ec\"/* ERROR_CAPTURED */,hook,target);};// Simple effect.\nfunction watchEffect(effect,options){return doWatch(effect,null,options);}// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE={};// implementation\nfunction watch(source,cb,options){if(!isFunction(cb)){warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. `+`Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only `+`supports \\`watch(source, cb, options?) signature.`);}return doWatch(source,cb,options);}function doWatch(source,cb,{immediate,deep,flush,onTrack,onTrigger}=EMPTY_OBJ,instance=currentInstance){if(!cb){if(immediate!==undefined){warn(`watch() \"immediate\" option is only respected when using the `+`watch(source, callback, options?) signature.`);}if(deep!==undefined){warn(`watch() \"deep\" option is only respected when using the `+`watch(source, callback, options?) signature.`);}}const warnInvalidSource=s=>{warn(`Invalid watch source: `,s,`A watch source can only be a getter/effect function, a ref, `+`a reactive object, or an array of these types.`);};let getter;let forceTrigger=false;if(isRef(source)){getter=()=>source.value;forceTrigger=!!source._shallow;}else if(isReactive(source)){getter=()=>source;deep=true;}else if(isArray(source)){getter=()=>source.map(s=>{if(isRef(s)){return s.value;}else if(isReactive(s)){return traverse(s);}else if(isFunction(s)){return callWithErrorHandling(s,instance,2/* WATCH_GETTER */,[instance&&instance.proxy]);}else{warnInvalidSource(s);}});}else if(isFunction(source)){if(cb){// getter with cb\ngetter=()=>callWithErrorHandling(source,instance,2/* WATCH_GETTER */,[instance&&instance.proxy]);}else{// no cb -> simple effect\ngetter=()=>{if(instance&&instance.isUnmounted){return;}if(cleanup){cleanup();}return callWithAsyncErrorHandling(source,instance,3/* WATCH_CALLBACK */,[onInvalidate]);};}}else{getter=NOOP;warnInvalidSource(source);}if(cb&&deep){const baseGetter=getter;getter=()=>traverse(baseGetter());}let cleanup;let onInvalidate=fn=>{cleanup=runner.options.onStop=()=>{callWithErrorHandling(fn,instance,4/* WATCH_CLEANUP */);};};let oldValue=isArray(source)?[]:INITIAL_WATCHER_VALUE;const job=()=>{if(!runner.active){return;}if(cb){// watch(source, cb)\nconst newValue=runner();if(deep||forceTrigger||hasChanged(newValue,oldValue)){// cleanup before running cb again\nif(cleanup){cleanup();}callWithAsyncErrorHandling(cb,instance,3/* WATCH_CALLBACK */,[newValue,// pass undefined as the old value when it's changed for the first time\noldValue===INITIAL_WATCHER_VALUE?undefined:oldValue,onInvalidate]);oldValue=newValue;}}else{// watchEffect\nrunner();}};// important: mark the job as a watcher callback so that scheduler knows\n// it is allowed to self-trigger (#1727)\njob.allowRecurse=!!cb;let scheduler;if(flush==='sync'){scheduler=job;}else if(flush==='post'){scheduler=()=>queuePostRenderEffect(job,instance&&instance.suspense);}else{// default: 'pre'\nscheduler=()=>{if(!instance||instance.isMounted){queuePreFlushCb(job);}else{// with 'pre' option, the first call must happen before\n// the component is mounted so it is called synchronously.\njob();}};}const runner=effect(getter,{lazy:true,onTrack,onTrigger,scheduler});recordInstanceBoundEffect(runner,instance);// initial run\nif(cb){if(immediate){job();}else{oldValue=runner();}}else if(flush==='post'){queuePostRenderEffect(runner,instance&&instance.suspense);}else{runner();}return()=>{stop(runner);if(instance){remove(instance.effects,runner);}};}// this.$watch\nfunction instanceWatch(source,cb,options){const publicThis=this.proxy;const getter=isString(source)?()=>publicThis[source]:source.bind(publicThis);return doWatch(getter,cb.bind(publicThis),options,this);}function traverse(value,seen=new Set()){if(!isObject(value)||seen.has(value)){return value;}seen.add(value);if(isRef(value)){traverse(value.value,seen);}else if(isArray(value)){for(let i=0;i<value.length;i++){traverse(value[i],seen);}}else if(isSet(value)||isMap(value)){value.forEach(v=>{traverse(v,seen);});}else{for(const key in value){traverse(value[key],seen);}}return value;}function useTransitionState(){const state={isMounted:false,isLeaving:false,isUnmounting:false,leavingVNodes:new Map()};onMounted(()=>{state.isMounted=true;});onBeforeUnmount(()=>{state.isUnmounting=true;});return state;}const TransitionHookValidator=[Function,Array];const BaseTransitionImpl={name:`BaseTransition`,props:{mode:String,appear:Boolean,persisted:Boolean,// enter\nonBeforeEnter:TransitionHookValidator,onEnter:TransitionHookValidator,onAfterEnter:TransitionHookValidator,onEnterCancelled:TransitionHookValidator,// leave\nonBeforeLeave:TransitionHookValidator,onLeave:TransitionHookValidator,onAfterLeave:TransitionHookValidator,onLeaveCancelled:TransitionHookValidator,// appear\nonBeforeAppear:TransitionHookValidator,onAppear:TransitionHookValidator,onAfterAppear:TransitionHookValidator,onAppearCancelled:TransitionHookValidator},setup(props,{slots}){const instance=getCurrentInstance();const state=useTransitionState();let prevTransitionKey;return()=>{const children=slots.default&&getTransitionRawChildren(slots.default(),true);if(!children||!children.length){return;}// warn multiple elements\nif(children.length>1){warn('<transition> can only be used on a single element or component. Use '+'<transition-group> for lists.');}// there's no need to track reactivity for these props so use the raw\n// props for a bit better perf\nconst rawProps=toRaw(props);const{mode}=rawProps;// check mode\nif(mode&&!['in-out','out-in','default'].includes(mode)){warn(`invalid <transition> mode: ${mode}`);}// at this point children has a guaranteed length of 1.\nconst child=children[0];if(state.isLeaving){return emptyPlaceholder(child);}// in the case of <transition><keep-alive/></transition>, we need to\n// compare the type of the kept-alive children.\nconst innerChild=getKeepAliveChild(child);if(!innerChild){return emptyPlaceholder(child);}const enterHooks=resolveTransitionHooks(innerChild,rawProps,state,instance);setTransitionHooks(innerChild,enterHooks);const oldChild=instance.subTree;const oldInnerChild=oldChild&&getKeepAliveChild(oldChild);let transitionKeyChanged=false;const{getTransitionKey}=innerChild.type;if(getTransitionKey){const key=getTransitionKey();if(prevTransitionKey===undefined){prevTransitionKey=key;}else if(key!==prevTransitionKey){prevTransitionKey=key;transitionKeyChanged=true;}}// handle mode\nif(oldInnerChild&&oldInnerChild.type!==Comment&&(!isSameVNodeType(innerChild,oldInnerChild)||transitionKeyChanged)){const leavingHooks=resolveTransitionHooks(oldInnerChild,rawProps,state,instance);// update old tree's hooks in case of dynamic transition\nsetTransitionHooks(oldInnerChild,leavingHooks);// switching between different views\nif(mode==='out-in'){state.isLeaving=true;// return placeholder node and queue update when leave finishes\nleavingHooks.afterLeave=()=>{state.isLeaving=false;instance.update();};return emptyPlaceholder(child);}else if(mode==='in-out'&&innerChild.type!==Comment){leavingHooks.delayLeave=(el,earlyRemove,delayedLeave)=>{const leavingVNodesCache=getLeavingNodesForType(state,oldInnerChild);leavingVNodesCache[String(oldInnerChild.key)]=oldInnerChild;// early removal callback\nel._leaveCb=()=>{earlyRemove();el._leaveCb=undefined;delete enterHooks.delayedLeave;};enterHooks.delayedLeave=delayedLeave;};}}return child;};}};// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst BaseTransition=BaseTransitionImpl;function getLeavingNodesForType(state,vnode){const{leavingVNodes}=state;let leavingVNodesCache=leavingVNodes.get(vnode.type);if(!leavingVNodesCache){leavingVNodesCache=Object.create(null);leavingVNodes.set(vnode.type,leavingVNodesCache);}return leavingVNodesCache;}// The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\nfunction resolveTransitionHooks(vnode,props,state,instance){const{appear,mode,persisted=false,onBeforeEnter,onEnter,onAfterEnter,onEnterCancelled,onBeforeLeave,onLeave,onAfterLeave,onLeaveCancelled,onBeforeAppear,onAppear,onAfterAppear,onAppearCancelled}=props;const key=String(vnode.key);const leavingVNodesCache=getLeavingNodesForType(state,vnode);const callHook=(hook,args)=>{hook&&callWithAsyncErrorHandling(hook,instance,9/* TRANSITION_HOOK */,args);};const hooks={mode,persisted,beforeEnter(el){let hook=onBeforeEnter;if(!state.isMounted){if(appear){hook=onBeforeAppear||onBeforeEnter;}else{return;}}// for same element (v-show)\nif(el._leaveCb){el._leaveCb(true/* cancelled */);}// for toggled element with same key (v-if)\nconst leavingVNode=leavingVNodesCache[key];if(leavingVNode&&isSameVNodeType(vnode,leavingVNode)&&leavingVNode.el._leaveCb){// force early removal (not cancelled)\nleavingVNode.el._leaveCb();}callHook(hook,[el]);},enter(el){let hook=onEnter;let afterHook=onAfterEnter;let cancelHook=onEnterCancelled;if(!state.isMounted){if(appear){hook=onAppear||onEnter;afterHook=onAfterAppear||onAfterEnter;cancelHook=onAppearCancelled||onEnterCancelled;}else{return;}}let called=false;const done=el._enterCb=cancelled=>{if(called)return;called=true;if(cancelled){callHook(cancelHook,[el]);}else{callHook(afterHook,[el]);}if(hooks.delayedLeave){hooks.delayedLeave();}el._enterCb=undefined;};if(hook){hook(el,done);if(hook.length<=1){done();}}else{done();}},leave(el,remove){const key=String(vnode.key);if(el._enterCb){el._enterCb(true/* cancelled */);}if(state.isUnmounting){return remove();}callHook(onBeforeLeave,[el]);let called=false;const done=el._leaveCb=cancelled=>{if(called)return;called=true;remove();if(cancelled){callHook(onLeaveCancelled,[el]);}else{callHook(onAfterLeave,[el]);}el._leaveCb=undefined;if(leavingVNodesCache[key]===vnode){delete leavingVNodesCache[key];}};leavingVNodesCache[key]=vnode;if(onLeave){onLeave(el,done);if(onLeave.length<=1){done();}}else{done();}},clone(vnode){return resolveTransitionHooks(vnode,props,state,instance);}};return hooks;}// the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\nfunction emptyPlaceholder(vnode){if(isKeepAlive(vnode)){vnode=cloneVNode(vnode);vnode.children=null;return vnode;}}function getKeepAliveChild(vnode){return isKeepAlive(vnode)?vnode.children?vnode.children[0]:undefined:vnode;}function setTransitionHooks(vnode,hooks){if(vnode.shapeFlag&6/* COMPONENT */&&vnode.component){setTransitionHooks(vnode.component.subTree,hooks);}else if(vnode.shapeFlag&128/* SUSPENSE */){vnode.ssContent.transition=hooks.clone(vnode.ssContent);vnode.ssFallback.transition=hooks.clone(vnode.ssFallback);}else{vnode.transition=hooks;}}function getTransitionRawChildren(children,keepComment=false){let ret=[];let keyedFragmentCount=0;for(let i=0;i<children.length;i++){const child=children[i];// handle fragment children case, e.g. v-for\nif(child.type===Fragment){if(child.patchFlag&128/* KEYED_FRAGMENT */)keyedFragmentCount++;ret=ret.concat(getTransitionRawChildren(child.children,keepComment));}// comment placeholders should be skipped, e.g. v-if\nelse if(keepComment||child.type!==Comment){ret.push(child);}}// #1126 if a transition children list contains multiple sub fragments, these\n// fragments will be merged into a flat children array. Since each v-for\n// fragment may contain different static bindings inside, we need to de-op\n// these children to force full diffs to ensure correct behavior.\nif(keyedFragmentCount>1){for(let i=0;i<ret.length;i++){ret[i].patchFlag=-2/* BAIL */;}}return ret;}const isKeepAlive=vnode=>vnode.type.__isKeepAlive;const KeepAliveImpl={name:`KeepAlive`,// Marker for special handling inside the renderer. We are not using a ===\n// check directly on KeepAlive in the renderer, because importing it directly\n// would prevent it from being tree-shaken.\n__isKeepAlive:true,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(props,{slots}){const instance=getCurrentInstance();// KeepAlive communicates with the instantiated renderer via the\n// ctx where the renderer passes in its internals,\n// and the KeepAlive instance exposes activate/deactivate implementations.\n// The whole point of this is to avoid importing KeepAlive directly in the\n// renderer to facilitate tree-shaking.\nconst sharedContext=instance.ctx;// if the internal renderer is not registered, it indicates that this is server-side rendering,\n// for KeepAlive, we just need to render its children\nif(!sharedContext.renderer){return slots.default;}const cache=new Map();const keys=new Set();let current=null;const parentSuspense=instance.suspense;const{renderer:{p:patch,m:move,um:_unmount,o:{createElement}}}=sharedContext;const storageContainer=createElement('div');sharedContext.activate=(vnode,container,anchor,isSVG,optimized)=>{const instance=vnode.component;move(vnode,container,anchor,0/* ENTER */,parentSuspense);// in case props have changed\npatch(instance.vnode,vnode,container,anchor,instance,parentSuspense,isSVG,vnode.slotScopeIds,optimized);queuePostRenderEffect(()=>{instance.isDeactivated=false;if(instance.a){invokeArrayFns(instance.a);}const vnodeHook=vnode.props&&vnode.props.onVnodeMounted;if(vnodeHook){invokeVNodeHook(vnodeHook,instance.parent,vnode);}},parentSuspense);};sharedContext.deactivate=vnode=>{const instance=vnode.component;move(vnode,storageContainer,null,1/* LEAVE */,parentSuspense);queuePostRenderEffect(()=>{if(instance.da){invokeArrayFns(instance.da);}const vnodeHook=vnode.props&&vnode.props.onVnodeUnmounted;if(vnodeHook){invokeVNodeHook(vnodeHook,instance.parent,vnode);}instance.isDeactivated=true;},parentSuspense);};function unmount(vnode){// reset the shapeFlag so it can be properly unmounted\nresetShapeFlag(vnode);_unmount(vnode,instance,parentSuspense);}function pruneCache(filter){cache.forEach((vnode,key)=>{const name=getComponentName(vnode.type);if(name&&(!filter||!filter(name))){pruneCacheEntry(key);}});}function pruneCacheEntry(key){const cached=cache.get(key);if(!current||cached.type!==current.type){unmount(cached);}else if(current){// current active instance should no longer be kept-alive.\n// we can't unmount it now but it might be later, so reset its flag now.\nresetShapeFlag(current);}cache.delete(key);keys.delete(key);}// prune cache on include/exclude prop change\nwatch(()=>[props.include,props.exclude],([include,exclude])=>{include&&pruneCache(name=>matches(include,name));exclude&&pruneCache(name=>!matches(exclude,name));},// prune post-render after `current` has been updated\n{flush:'post',deep:true});// cache sub tree after render\nlet pendingCacheKey=null;const cacheSubtree=()=>{// fix #1621, the pendingCacheKey could be 0\nif(pendingCacheKey!=null){cache.set(pendingCacheKey,getInnerChild(instance.subTree));}};onMounted(cacheSubtree);onUpdated(cacheSubtree);onBeforeUnmount(()=>{cache.forEach(cached=>{const{subTree,suspense}=instance;const vnode=getInnerChild(subTree);if(cached.type===vnode.type){// current instance will be unmounted as part of keep-alive's unmount\nresetShapeFlag(vnode);// but invoke its deactivated hook here\nconst da=vnode.component.da;da&&queuePostRenderEffect(da,suspense);return;}unmount(cached);});});return()=>{pendingCacheKey=null;if(!slots.default){return null;}const children=slots.default();const rawVNode=children[0];if(children.length>1){{warn(`KeepAlive should contain exactly one component child.`);}current=null;return children;}else if(!isVNode(rawVNode)||!(rawVNode.shapeFlag&4/* STATEFUL_COMPONENT */)&&!(rawVNode.shapeFlag&128/* SUSPENSE */)){current=null;return rawVNode;}let vnode=getInnerChild(rawVNode);const comp=vnode.type;const name=getComponentName(comp);const{include,exclude,max}=props;if(include&&(!name||!matches(include,name))||exclude&&name&&matches(exclude,name)){current=vnode;return rawVNode;}const key=vnode.key==null?comp:vnode.key;const cachedVNode=cache.get(key);// clone vnode if it's reused because we are going to mutate it\nif(vnode.el){vnode=cloneVNode(vnode);if(rawVNode.shapeFlag&128/* SUSPENSE */){rawVNode.ssContent=vnode;}}// #1513 it's possible for the returned vnode to be cloned due to attr\n// fallthrough or scopeId, so the vnode here may not be the final vnode\n// that is mounted. Instead of caching it directly, we store the pending\n// key and cache `instance.subTree` (the normalized vnode) in\n// beforeMount/beforeUpdate hooks.\npendingCacheKey=key;if(cachedVNode){// copy over mounted state\nvnode.el=cachedVNode.el;vnode.component=cachedVNode.component;if(vnode.transition){// recursively update transition hooks on subTree\nsetTransitionHooks(vnode,vnode.transition);}// avoid vnode being mounted as fresh\nvnode.shapeFlag|=512/* COMPONENT_KEPT_ALIVE */;// make this key the freshest\nkeys.delete(key);keys.add(key);}else{keys.add(key);// prune oldest entry\nif(max&&keys.size>parseInt(max,10)){pruneCacheEntry(keys.values().next().value);}}// avoid vnode being unmounted\nvnode.shapeFlag|=256/* COMPONENT_SHOULD_KEEP_ALIVE */;current=vnode;return rawVNode;};}};// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst KeepAlive=KeepAliveImpl;function matches(pattern,name){if(isArray(pattern)){return pattern.some(p=>matches(p,name));}else if(isString(pattern)){return pattern.split(',').indexOf(name)>-1;}else if(pattern.test){return pattern.test(name);}/* istanbul ignore next */return false;}function onActivated(hook,target){registerKeepAliveHook(hook,\"a\"/* ACTIVATED */,target);}function onDeactivated(hook,target){registerKeepAliveHook(hook,\"da\"/* DEACTIVATED */,target);}function registerKeepAliveHook(hook,type,target=currentInstance){// cache the deactivate branch check wrapper for injected hooks so the same\n// hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n// deactivation check\".\nconst wrappedHook=hook.__wdc||(hook.__wdc=()=>{// only fire the hook if the target instance is NOT in a deactivated branch.\nlet current=target;while(current){if(current.isDeactivated){return;}current=current.parent;}hook();});injectHook(type,wrappedHook,target);// In addition to registering it on the target instance, we walk up the parent\n// chain and register it on all ancestor instances that are keep-alive roots.\n// This avoids the need to walk the entire component tree when invoking these\n// hooks, and more importantly, avoids the need to track child components in\n// arrays.\nif(target){let current=target.parent;while(current&&current.parent){if(isKeepAlive(current.parent.vnode)){injectToKeepAliveRoot(wrappedHook,type,target,current);}current=current.parent;}}}function injectToKeepAliveRoot(hook,type,target,keepAliveRoot){// injectHook wraps the original for error handling, so make sure to remove\n// the wrapped version.\nconst injected=injectHook(type,hook,keepAliveRoot,true/* prepend */);onUnmounted(()=>{remove(keepAliveRoot[type],injected);},target);}function resetShapeFlag(vnode){let shapeFlag=vnode.shapeFlag;if(shapeFlag&256/* COMPONENT_SHOULD_KEEP_ALIVE */){shapeFlag-=256/* COMPONENT_SHOULD_KEEP_ALIVE */;}if(shapeFlag&512/* COMPONENT_KEPT_ALIVE */){shapeFlag-=512/* COMPONENT_KEPT_ALIVE */;}vnode.shapeFlag=shapeFlag;}function getInnerChild(vnode){return vnode.shapeFlag&128/* SUSPENSE */?vnode.ssContent:vnode;}const isInternalKey=key=>key[0]==='_'||key==='$stable';const normalizeSlotValue=value=>isArray(value)?value.map(normalizeVNode):[normalizeVNode(value)];const normalizeSlot=(key,rawSlot,ctx)=>withCtx(props=>{if(currentInstance){warn(`Slot \"${key}\" invoked outside of the render function: `+`this will not track dependencies used in the slot. `+`Invoke the slot function inside the render function instead.`);}return normalizeSlotValue(rawSlot(props));},ctx);const normalizeObjectSlots=(rawSlots,slots)=>{const ctx=rawSlots._ctx;for(const key in rawSlots){if(isInternalKey(key))continue;const value=rawSlots[key];if(isFunction(value)){slots[key]=normalizeSlot(key,value,ctx);}else if(value!=null){{warn(`Non-function value encountered for slot \"${key}\". `+`Prefer function slots for better performance.`);}const normalized=normalizeSlotValue(value);slots[key]=()=>normalized;}}};const normalizeVNodeSlots=(instance,children)=>{if(!isKeepAlive(instance.vnode)){warn(`Non-function value encountered for default slot. `+`Prefer function slots for better performance.`);}const normalized=normalizeSlotValue(children);instance.slots.default=()=>normalized;};const initSlots=(instance,children)=>{if(instance.vnode.shapeFlag&32/* SLOTS_CHILDREN */){const type=children._;if(type){instance.slots=children;// make compiler marker non-enumerable\ndef(children,'_',type);}else{normalizeObjectSlots(children,instance.slots={});}}else{instance.slots={};if(children){normalizeVNodeSlots(instance,children);}}def(instance.slots,InternalObjectKey,1);};const updateSlots=(instance,children)=>{const{vnode,slots}=instance;let needDeletionCheck=true;let deletionComparisonTarget=EMPTY_OBJ;if(vnode.shapeFlag&32/* SLOTS_CHILDREN */){const type=children._;if(type){// compiled slots.\nif(isHmrUpdating){// Parent was HMR updated so slot content may have changed.\n// force update slots and mark instance for hmr as well\nextend(slots,children);}else if(type===1/* STABLE */){// compiled AND stable.\n// no need to update, and skip stale slots removal.\nneedDeletionCheck=false;}else{// compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n// normalization.\nextend(slots,children);}}else{needDeletionCheck=!children.$stable;normalizeObjectSlots(children,slots);}deletionComparisonTarget=children;}else if(children){// non slot object children (direct value) passed to a component\nnormalizeVNodeSlots(instance,children);deletionComparisonTarget={default:1};}// delete stale slots\nif(needDeletionCheck){for(const key in slots){if(!isInternalKey(key)&&!(key in deletionComparisonTarget)){delete slots[key];}}}};/**\n    Runtime helper for applying directives to a vnode. Example usage:\n  \n    const comp = resolveComponent('comp')\n    const foo = resolveDirective('foo')\n    const bar = resolveDirective('bar')\n  \n    return withDirectives(h(comp), [\n      [foo, this.x],\n      [bar, this.y]\n    ])\n    */const isBuiltInDirective=/*#__PURE__*/makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');function validateDirectiveName(name){if(isBuiltInDirective(name)){warn('Do not use built-in directive ids as custom directive id: '+name);}}/**\n     * Adds directives to a VNode.\n     */function withDirectives(vnode,directives){const internalInstance=currentRenderingInstance;if(internalInstance===null){warn(`withDirectives can only be used inside render functions.`);return vnode;}const instance=internalInstance.proxy;const bindings=vnode.dirs||(vnode.dirs=[]);for(let i=0;i<directives.length;i++){let[dir,value,arg,modifiers=EMPTY_OBJ]=directives[i];if(isFunction(dir)){dir={mounted:dir,updated:dir};}bindings.push({dir,instance,value,oldValue:void 0,arg,modifiers});}return vnode;}function invokeDirectiveHook(vnode,prevVNode,instance,name){const bindings=vnode.dirs;const oldBindings=prevVNode&&prevVNode.dirs;for(let i=0;i<bindings.length;i++){const binding=bindings[i];if(oldBindings){binding.oldValue=oldBindings[i].value;}const hook=binding.dir[name];if(hook){callWithAsyncErrorHandling(hook,instance,8/* DIRECTIVE_HOOK */,[vnode.el,binding,vnode,prevVNode]);}}}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:false,globalProperties:{},optionMergeStrategies:{},isCustomElement:NO,errorHandler:undefined,warnHandler:undefined},mixins:[],components:{},directives:{},provides:Object.create(null)};}let uid$1=0;function createAppAPI(render,hydrate){return function createApp(rootComponent,rootProps=null){if(rootProps!=null&&!isObject(rootProps)){warn(`root props passed to app.mount() must be an object.`);rootProps=null;}const context=createAppContext();const installedPlugins=new Set();let isMounted=false;const app=context.app={_uid:uid$1++,_component:rootComponent,_props:rootProps,_container:null,_context:context,version,get config(){return context.config;},set config(v){{warn(`app.config cannot be replaced. Modify individual options instead.`);}},use(plugin,...options){if(installedPlugins.has(plugin)){warn(`Plugin has already been applied to target app.`);}else if(plugin&&isFunction(plugin.install)){installedPlugins.add(plugin);plugin.install(app,...options);}else if(isFunction(plugin)){installedPlugins.add(plugin);plugin(app,...options);}else{warn(`A plugin must either be a function or an object with an \"install\" `+`function.`);}return app;},mixin(mixin){{if(!context.mixins.includes(mixin)){context.mixins.push(mixin);// global mixin with props/emits de-optimizes props/emits\n// normalization caching.\nif(mixin.props||mixin.emits){context.deopt=true;}}else{warn('Mixin has already been applied to target app'+(mixin.name?`: ${mixin.name}`:''));}}return app;},component(name,component){{validateComponentName(name,context.config);}if(!component){return context.components[name];}if(context.components[name]){warn(`Component \"${name}\" has already been registered in target app.`);}context.components[name]=component;return app;},directive(name,directive){{validateDirectiveName(name);}if(!directive){return context.directives[name];}if(context.directives[name]){warn(`Directive \"${name}\" has already been registered in target app.`);}context.directives[name]=directive;return app;},mount(rootContainer,isHydrate,isSVG){if(!isMounted){const vnode=createVNode(rootComponent,rootProps);// store app context on the root VNode.\n// this will be set on the root instance on initial mount.\nvnode.appContext=context;// HMR root reload\n{context.reload=()=>{render(cloneVNode(vnode),rootContainer,isSVG);};}if(isHydrate&&hydrate){hydrate(vnode,rootContainer);}else{render(vnode,rootContainer,isSVG);}isMounted=true;app._container=rootContainer;rootContainer.__vue_app__=app;{devtoolsInitApp(app,version);}return vnode.component.proxy;}else{warn(`App has already been mounted.\\n`+`If you want to remount the same app, move your app creation logic `+`into a factory function and create fresh app instances for each `+`mount - e.g. \\`const createMyApp = () => createApp(App)\\``);}},unmount(){if(isMounted){render(null,app._container);{devtoolsUnmountApp(app);}delete app._container.__vue_app__;}else{warn(`Cannot unmount an app that is not mounted.`);}},provide(key,value){if(key in context.provides){warn(`App already provides property with key \"${String(key)}\". `+`It will be overwritten with the new value.`);}// TypeScript doesn't allow symbols as index type\n// https://github.com/Microsoft/TypeScript/issues/24587\ncontext.provides[key]=value;return app;}};return app;};}let hasMismatch=false;const isSVGContainer=container=>/svg/.test(container.namespaceURI)&&container.tagName!=='foreignObject';const isComment=node=>node.nodeType===8/* COMMENT */;// Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\nfunction createHydrationFunctions(rendererInternals){const{mt:mountComponent,p:patch,o:{patchProp,nextSibling,parentNode,remove,insert,createComment}}=rendererInternals;const hydrate=(vnode,container)=>{if(!container.hasChildNodes()){warn(`Attempting to hydrate existing markup but container is empty. `+`Performing full mount instead.`);patch(null,vnode,container);return;}hasMismatch=false;hydrateNode(container.firstChild,vnode,null,null,null);flushPostFlushCbs();if(hasMismatch&&!false){// this error should show up in production\nconsole.error(`Hydration completed but contains mismatches.`);}};const hydrateNode=(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized=false)=>{const isFragmentStart=isComment(node)&&node.data==='[';const onMismatch=()=>handleMismatch(node,vnode,parentComponent,parentSuspense,slotScopeIds,isFragmentStart);const{type,ref,shapeFlag}=vnode;const domType=node.nodeType;vnode.el=node;let nextNode=null;switch(type){case Text:if(domType!==3/* TEXT */){nextNode=onMismatch();}else{if(node.data!==vnode.children){hasMismatch=true;warn(`Hydration text mismatch:`+`\\n- Client: ${JSON.stringify(node.data)}`+`\\n- Server: ${JSON.stringify(vnode.children)}`);node.data=vnode.children;}nextNode=nextSibling(node);}break;case Comment:if(domType!==8/* COMMENT */||isFragmentStart){nextNode=onMismatch();}else{nextNode=nextSibling(node);}break;case Static:if(domType!==1/* ELEMENT */){nextNode=onMismatch();}else{// determine anchor, adopt content\nnextNode=node;// if the static vnode has its content stripped during build,\n// adopt it from the server-rendered HTML.\nconst needToAdoptContent=!vnode.children.length;for(let i=0;i<vnode.staticCount;i++){if(needToAdoptContent)vnode.children+=nextNode.outerHTML;if(i===vnode.staticCount-1){vnode.anchor=nextNode;}nextNode=nextSibling(nextNode);}return nextNode;}break;case Fragment:if(!isFragmentStart){nextNode=onMismatch();}else{nextNode=hydrateFragment(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized);}break;default:if(shapeFlag&1/* ELEMENT */){if(domType!==1/* ELEMENT */||vnode.type.toLowerCase()!==node.tagName.toLowerCase()){nextNode=onMismatch();}else{nextNode=hydrateElement(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized);}}else if(shapeFlag&6/* COMPONENT */){// when setting up the render effect, if the initial vnode already\n// has .el set, the component will perform hydration instead of mount\n// on its sub-tree.\nvnode.slotScopeIds=slotScopeIds;const container=parentNode(node);const hydrateComponent=()=>{mountComponent(vnode,container,null,parentComponent,parentSuspense,isSVGContainer(container),optimized);};// async component\nconst loadAsync=vnode.type.__asyncLoader;if(loadAsync){loadAsync().then(hydrateComponent);}else{hydrateComponent();}// component may be async, so in the case of fragments we cannot rely\n// on component's rendered output to determine the end of the fragment\n// instead, we do a lookahead to find the end anchor node.\nnextNode=isFragmentStart?locateClosingAsyncAnchor(node):nextSibling(node);}else if(shapeFlag&64/* TELEPORT */){if(domType!==8/* COMMENT */){nextNode=onMismatch();}else{nextNode=vnode.type.hydrate(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized,rendererInternals,hydrateChildren);}}else if(shapeFlag&128/* SUSPENSE */){nextNode=vnode.type.hydrate(node,vnode,parentComponent,parentSuspense,isSVGContainer(parentNode(node)),slotScopeIds,optimized,rendererInternals,hydrateNode);}else{warn('Invalid HostVNode type:',type,`(${typeof type})`);}}if(ref!=null){setRef(ref,null,parentSuspense,vnode);}return nextNode;};const hydrateElement=(el,vnode,parentComponent,parentSuspense,slotScopeIds,optimized)=>{optimized=optimized||!!vnode.dynamicChildren;const{props,patchFlag,shapeFlag,dirs}=vnode;// skip props & children if this is hoisted static nodes\nif(patchFlag!==-1/* HOISTED */){if(dirs){invokeDirectiveHook(vnode,null,parentComponent,'created');}// props\nif(props){if(!optimized||patchFlag&16/* FULL_PROPS */||patchFlag&32/* HYDRATE_EVENTS */){for(const key in props){if(!isReservedProp(key)&&isOn(key)){patchProp(el,key,null,props[key]);}}}else if(props.onClick){// Fast path for click listeners (which is most often) to avoid\n// iterating through props.\npatchProp(el,'onClick',null,props.onClick);}}// vnode / directive hooks\nlet vnodeHooks;if(vnodeHooks=props&&props.onVnodeBeforeMount){invokeVNodeHook(vnodeHooks,parentComponent,vnode);}if(dirs){invokeDirectiveHook(vnode,null,parentComponent,'beforeMount');}if((vnodeHooks=props&&props.onVnodeMounted)||dirs){queueEffectWithSuspense(()=>{vnodeHooks&&invokeVNodeHook(vnodeHooks,parentComponent,vnode);dirs&&invokeDirectiveHook(vnode,null,parentComponent,'mounted');},parentSuspense);}// children\nif(shapeFlag&16/* ARRAY_CHILDREN */&&// skip if element has innerHTML / textContent\n!(props&&(props.innerHTML||props.textContent))){let next=hydrateChildren(el.firstChild,vnode,el,parentComponent,parentSuspense,slotScopeIds,optimized);let hasWarned=false;while(next){hasMismatch=true;if(!hasWarned){warn(`Hydration children mismatch in <${vnode.type}>: `+`server rendered element contains more child nodes than client vdom.`);hasWarned=true;}// The SSRed DOM contains more nodes than it should. Remove them.\nconst cur=next;next=next.nextSibling;remove(cur);}}else if(shapeFlag&8/* TEXT_CHILDREN */){if(el.textContent!==vnode.children){hasMismatch=true;warn(`Hydration text content mismatch in <${vnode.type}>:\\n`+`- Client: ${el.textContent}\\n`+`- Server: ${vnode.children}`);el.textContent=vnode.children;}}}return el.nextSibling;};const hydrateChildren=(node,parentVNode,container,parentComponent,parentSuspense,slotScopeIds,optimized)=>{optimized=optimized||!!parentVNode.dynamicChildren;const children=parentVNode.children;const l=children.length;let hasWarned=false;for(let i=0;i<l;i++){const vnode=optimized?children[i]:children[i]=normalizeVNode(children[i]);if(node){node=hydrateNode(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized);}else if(vnode.type===Text&&!vnode.children){continue;}else{hasMismatch=true;if(!hasWarned){warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: `+`server rendered element contains fewer child nodes than client vdom.`);hasWarned=true;}// the SSRed DOM didn't contain enough nodes. Mount the missing ones.\npatch(null,vnode,container,null,parentComponent,parentSuspense,isSVGContainer(container),slotScopeIds);}}return node;};const hydrateFragment=(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized)=>{const{slotScopeIds:fragmentSlotScopeIds}=vnode;if(fragmentSlotScopeIds){slotScopeIds=slotScopeIds?slotScopeIds.concat(fragmentSlotScopeIds):fragmentSlotScopeIds;}const container=parentNode(node);const next=hydrateChildren(nextSibling(node),vnode,container,parentComponent,parentSuspense,slotScopeIds,optimized);if(next&&isComment(next)&&next.data===']'){return nextSibling(vnode.anchor=next);}else{// fragment didn't hydrate successfully, since we didn't get a end anchor\n// back. This should have led to node/children mismatch warnings.\nhasMismatch=true;// since the anchor is missing, we need to create one and insert it\ninsert(vnode.anchor=createComment(`]`),container,next);return next;}};const handleMismatch=(node,vnode,parentComponent,parentSuspense,slotScopeIds,isFragment)=>{hasMismatch=true;warn(`Hydration node mismatch:\\n- Client vnode:`,vnode.type,`\\n- Server rendered DOM:`,node,node.nodeType===3/* TEXT */?`(text)`:isComment(node)&&node.data==='['?`(start of fragment)`:``);vnode.el=null;if(isFragment){// remove excessive fragment nodes\nconst end=locateClosingAsyncAnchor(node);while(true){const next=nextSibling(node);if(next&&next!==end){remove(next);}else{break;}}}const next=nextSibling(node);const container=parentNode(node);remove(node);patch(null,vnode,container,next,parentComponent,parentSuspense,isSVGContainer(container),slotScopeIds);return next;};const locateClosingAsyncAnchor=node=>{let match=0;while(node){node=nextSibling(node);if(node&&isComment(node)){if(node.data==='[')match++;if(node.data===']'){if(match===0){return nextSibling(node);}else{match--;}}}}return node;};return[hydrate,hydrateNode];}let supported;let perf;function startMeasure(instance,type){if(instance.appContext.config.performance&&isSupported()){perf.mark(`vue-${type}-${instance.uid}`);}}function endMeasure(instance,type){if(instance.appContext.config.performance&&isSupported()){const startTag=`vue-${type}-${instance.uid}`;const endTag=startTag+`:end`;perf.mark(endTag);perf.measure(`<${formatComponentName(instance,instance.type)}> ${type}`,startTag,endTag);perf.clearMarks(startTag);perf.clearMarks(endTag);}}function isSupported(){if(supported!==undefined){return supported;}/* eslint-disable no-restricted-globals */if(typeof window!=='undefined'&&window.performance){supported=true;perf=window.performance;}else{supported=false;}/* eslint-enable no-restricted-globals */return supported;}// implementation, close to no-op\nfunction defineComponent(options){return isFunction(options)?{setup:options,name:options.name}:options;}const isAsyncWrapper=i=>!!i.type.__asyncLoader;function defineAsyncComponent(source){if(isFunction(source)){source={loader:source};}const{loader,loadingComponent,errorComponent,delay=200,timeout,// undefined = never times out\nsuspensible=true,onError:userOnError}=source;let pendingRequest=null;let resolvedComp;let retries=0;const retry=()=>{retries++;pendingRequest=null;return load();};const load=()=>{let thisRequest;return pendingRequest||(thisRequest=pendingRequest=loader().catch(err=>{err=err instanceof Error?err:new Error(String(err));if(userOnError){return new Promise((resolve,reject)=>{const userRetry=()=>resolve(retry());const userFail=()=>reject(err);userOnError(err,userRetry,userFail,retries+1);});}else{throw err;}}).then(comp=>{if(thisRequest!==pendingRequest&&pendingRequest){return pendingRequest;}if(!comp){warn(`Async component loader resolved to undefined. `+`If you are using retry(), make sure to return its return value.`);}// interop module default\nif(comp&&(comp.__esModule||comp[Symbol.toStringTag]==='Module')){comp=comp.default;}if(comp&&!isObject(comp)&&!isFunction(comp)){throw new Error(`Invalid async component load result: ${comp}`);}resolvedComp=comp;return comp;}));};return defineComponent({__asyncLoader:load,name:'AsyncComponentWrapper',setup(){const instance=currentInstance;// already resolved\nif(resolvedComp){return()=>createInnerComp(resolvedComp,instance);}const onError=err=>{pendingRequest=null;handleError(err,instance,13/* ASYNC_COMPONENT_LOADER */,!errorComponent/* do not throw in dev if user provided error component */);};// suspense-controlled or SSR.\nif(suspensible&&instance.suspense||false){return load().then(comp=>{return()=>createInnerComp(comp,instance);}).catch(err=>{onError(err);return()=>errorComponent?createVNode(errorComponent,{error:err}):null;});}const loaded=ref(false);const error=ref();const delayed=ref(!!delay);if(delay){setTimeout(()=>{delayed.value=false;},delay);}if(timeout!=null){setTimeout(()=>{if(!loaded.value&&!error.value){const err=new Error(`Async component timed out after ${timeout}ms.`);onError(err);error.value=err;}},timeout);}load().then(()=>{loaded.value=true;}).catch(err=>{onError(err);error.value=err;});return()=>{if(loaded.value&&resolvedComp){return createInnerComp(resolvedComp,instance);}else if(error.value&&errorComponent){return createVNode(errorComponent,{error:error.value});}else if(loadingComponent&&!delayed.value){return createVNode(loadingComponent);}};}});}function createInnerComp(comp,{vnode:{ref,props,children}}){const vnode=createVNode(comp,props,children);// ensure inner component inherits the async wrapper's ref owner\nvnode.ref=ref;return vnode;}function createDevEffectOptions(instance){return{scheduler:queueJob,allowRecurse:true,onTrack:instance.rtc?e=>invokeArrayFns(instance.rtc,e):void 0,onTrigger:instance.rtg?e=>invokeArrayFns(instance.rtg,e):void 0};}const queuePostRenderEffect=queueEffectWithSuspense;const setRef=(rawRef,oldRawRef,parentSuspense,vnode)=>{if(isArray(rawRef)){rawRef.forEach((r,i)=>setRef(r,oldRawRef&&(isArray(oldRawRef)?oldRawRef[i]:oldRawRef),parentSuspense,vnode));return;}let value;if(!vnode){// means unmount\nvalue=null;}else if(isAsyncWrapper(vnode)){// when mounting async components, nothing needs to be done,\n// because the template ref is forwarded to inner component\nreturn;}else if(vnode.shapeFlag&4/* STATEFUL_COMPONENT */){value=vnode.component.exposed||vnode.component.proxy;}else{value=vnode.el;}const{i:owner,r:ref}=rawRef;if(!owner){warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. `+`A vnode with ref must be created inside the render function.`);return;}const oldRef=oldRawRef&&oldRawRef.r;const refs=owner.refs===EMPTY_OBJ?owner.refs={}:owner.refs;const setupState=owner.setupState;// unset old ref\nif(oldRef!=null&&oldRef!==ref){if(isString(oldRef)){refs[oldRef]=null;if(hasOwn(setupState,oldRef)){setupState[oldRef]=null;}}else if(isRef(oldRef)){oldRef.value=null;}}if(isString(ref)){const doSet=()=>{refs[ref]=value;if(hasOwn(setupState,ref)){setupState[ref]=value;}};// #1789: for non-null values, set them after render\n// null values means this is unmount and it should not overwrite another\n// ref with the same key\nif(value){doSet.id=-1;queuePostRenderEffect(doSet,parentSuspense);}else{doSet();}}else if(isRef(ref)){const doSet=()=>{ref.value=value;};if(value){doSet.id=-1;queuePostRenderEffect(doSet,parentSuspense);}else{doSet();}}else if(isFunction(ref)){callWithErrorHandling(ref,owner,12/* FUNCTION_REF */,[value,refs]);}else{warn('Invalid template ref type:',value,`(${typeof value})`);}};/**\n     * The createRenderer function accepts two generic arguments:\n     * HostNode and HostElement, corresponding to Node and Element types in the\n     * host environment. For example, for runtime-dom, HostNode would be the DOM\n     * `Node` interface and HostElement would be the DOM `Element` interface.\n     *\n     * Custom renderers can pass in the platform specific types like this:\n     *\n     * ``` js\n     * const { render, createApp } = createRenderer<Node, Element>({\n     *   patchProp,\n     *   ...nodeOps\n     * })\n     * ```\n     */function createRenderer(options){return baseCreateRenderer(options);}// Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\nfunction createHydrationRenderer(options){return baseCreateRenderer(options,createHydrationFunctions);}// implementation\nfunction baseCreateRenderer(options,createHydrationFns){{const target=getGlobalThis();target.__VUE__=true;setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);}const{insert:hostInsert,remove:hostRemove,patchProp:hostPatchProp,forcePatchProp:hostForcePatchProp,createElement:hostCreateElement,createText:hostCreateText,createComment:hostCreateComment,setText:hostSetText,setElementText:hostSetElementText,parentNode:hostParentNode,nextSibling:hostNextSibling,setScopeId:hostSetScopeId=NOOP,cloneNode:hostCloneNode,insertStaticContent:hostInsertStaticContent}=options;// Note: functions inside this closure should use `const xxx = () => {}`\n// style in order to prevent being inlined by minifiers.\nconst patch=(n1,n2,container,anchor=null,parentComponent=null,parentSuspense=null,isSVG=false,slotScopeIds=null,optimized=false)=>{// patching & not same type, unmount old tree\nif(n1&&!isSameVNodeType(n1,n2)){anchor=getNextHostNode(n1);unmount(n1,parentComponent,parentSuspense,true);n1=null;}if(n2.patchFlag===-2/* BAIL */){optimized=false;n2.dynamicChildren=null;}const{type,ref,shapeFlag}=n2;switch(type){case Text:processText(n1,n2,container,anchor);break;case Comment:processCommentNode(n1,n2,container,anchor);break;case Static:if(n1==null){mountStaticNode(n2,container,anchor,isSVG);}else{patchStaticNode(n1,n2,container,isSVG);}break;case Fragment:processFragment(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);break;default:if(shapeFlag&1/* ELEMENT */){processElement(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else if(shapeFlag&6/* COMPONENT */){processComponent(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else if(shapeFlag&64/* TELEPORT */){type.process(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,internals);}else if(shapeFlag&128/* SUSPENSE */){type.process(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,internals);}else{warn('Invalid VNode type:',type,`(${typeof type})`);}}// set ref\nif(ref!=null&&parentComponent){setRef(ref,n1&&n1.ref,parentSuspense,n2);}};const processText=(n1,n2,container,anchor)=>{if(n1==null){hostInsert(n2.el=hostCreateText(n2.children),container,anchor);}else{const el=n2.el=n1.el;if(n2.children!==n1.children){hostSetText(el,n2.children);}}};const processCommentNode=(n1,n2,container,anchor)=>{if(n1==null){hostInsert(n2.el=hostCreateComment(n2.children||''),container,anchor);}else{// there's no support for dynamic comments\nn2.el=n1.el;}};const mountStaticNode=(n2,container,anchor,isSVG)=>{[n2.el,n2.anchor]=hostInsertStaticContent(n2.children,container,anchor,isSVG);};/**\n         * Dev / HMR only\n         */const patchStaticNode=(n1,n2,container,isSVG)=>{// static nodes are only patched during dev for HMR\nif(n2.children!==n1.children){const anchor=hostNextSibling(n1.anchor);// remove existing\nremoveStaticNode(n1);[n2.el,n2.anchor]=hostInsertStaticContent(n2.children,container,anchor,isSVG);}else{n2.el=n1.el;n2.anchor=n1.anchor;}};const moveStaticNode=({el,anchor},container,nextSibling)=>{let next;while(el&&el!==anchor){next=hostNextSibling(el);hostInsert(el,container,nextSibling);el=next;}hostInsert(anchor,container,nextSibling);};const removeStaticNode=({el,anchor})=>{let next;while(el&&el!==anchor){next=hostNextSibling(el);hostRemove(el);el=next;}hostRemove(anchor);};const processElement=(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{isSVG=isSVG||n2.type==='svg';if(n1==null){mountElement(n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else{patchElement(n1,n2,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}};const mountElement=(vnode,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{let el;let vnodeHook;const{type,props,shapeFlag,transition,patchFlag,dirs}=vnode;{el=vnode.el=hostCreateElement(vnode.type,isSVG,props&&props.is,props);// mount children first, since some props may rely on child content\n// being already rendered, e.g. `<select value>`\nif(shapeFlag&8/* TEXT_CHILDREN */){hostSetElementText(el,vnode.children);}else if(shapeFlag&16/* ARRAY_CHILDREN */){mountChildren(vnode.children,el,null,parentComponent,parentSuspense,isSVG&&type!=='foreignObject',slotScopeIds,optimized||!!vnode.dynamicChildren);}if(dirs){invokeDirectiveHook(vnode,null,parentComponent,'created');}// props\nif(props){for(const key in props){if(!isReservedProp(key)){hostPatchProp(el,key,null,props[key],isSVG,vnode.children,parentComponent,parentSuspense,unmountChildren);}}if(vnodeHook=props.onVnodeBeforeMount){invokeVNodeHook(vnodeHook,parentComponent,vnode);}}// scopeId\nsetScopeId(el,vnode,vnode.scopeId,slotScopeIds,parentComponent);}{Object.defineProperty(el,'__vnode',{value:vnode,enumerable:false});Object.defineProperty(el,'__vueParentComponent',{value:parentComponent,enumerable:false});}if(dirs){invokeDirectiveHook(vnode,null,parentComponent,'beforeMount');}// #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n// #1689 For inside suspense + suspense resolved case, just call it\nconst needCallTransitionHooks=(!parentSuspense||parentSuspense&&!parentSuspense.pendingBranch)&&transition&&!transition.persisted;if(needCallTransitionHooks){transition.beforeEnter(el);}hostInsert(el,container,anchor);if((vnodeHook=props&&props.onVnodeMounted)||needCallTransitionHooks||dirs){queuePostRenderEffect(()=>{vnodeHook&&invokeVNodeHook(vnodeHook,parentComponent,vnode);needCallTransitionHooks&&transition.enter(el);dirs&&invokeDirectiveHook(vnode,null,parentComponent,'mounted');},parentSuspense);}};const setScopeId=(el,vnode,scopeId,slotScopeIds,parentComponent)=>{if(scopeId){hostSetScopeId(el,scopeId);}if(slotScopeIds){for(let i=0;i<slotScopeIds.length;i++){hostSetScopeId(el,slotScopeIds[i]);}}if(parentComponent){let subTree=parentComponent.subTree;if(subTree.patchFlag>0&&subTree.patchFlag&2048/* DEV_ROOT_FRAGMENT */){subTree=filterSingleRoot(subTree.children)||subTree;}if(vnode===subTree){const parentVNode=parentComponent.vnode;setScopeId(el,parentVNode,parentVNode.scopeId,parentVNode.slotScopeIds,parentComponent.parent);}}};const mountChildren=(children,container,anchor,parentComponent,parentSuspense,isSVG,optimized,slotScopeIds,start=0)=>{for(let i=start;i<children.length;i++){const child=children[i]=optimized?cloneIfMounted(children[i]):normalizeVNode(children[i]);patch(null,child,container,anchor,parentComponent,parentSuspense,isSVG,optimized,slotScopeIds);}};const patchElement=(n1,n2,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{const el=n2.el=n1.el;let{patchFlag,dynamicChildren,dirs}=n2;// #1426 take the old vnode's patch flag into account since user may clone a\n// compiler-generated vnode, which de-opts to FULL_PROPS\npatchFlag|=n1.patchFlag&16/* FULL_PROPS */;const oldProps=n1.props||EMPTY_OBJ;const newProps=n2.props||EMPTY_OBJ;let vnodeHook;if(vnodeHook=newProps.onVnodeBeforeUpdate){invokeVNodeHook(vnodeHook,parentComponent,n2,n1);}if(dirs){invokeDirectiveHook(n2,n1,parentComponent,'beforeUpdate');}if(isHmrUpdating){// HMR updated, force full diff\npatchFlag=0;optimized=false;dynamicChildren=null;}if(patchFlag>0){// the presence of a patchFlag means this element's render code was\n// generated by the compiler and can take the fast path.\n// in this path old node and new node are guaranteed to have the same shape\n// (i.e. at the exact same position in the source template)\nif(patchFlag&16/* FULL_PROPS */){// element props contain dynamic keys, full diff needed\npatchProps(el,n2,oldProps,newProps,parentComponent,parentSuspense,isSVG);}else{// class\n// this flag is matched when the element has dynamic class bindings.\nif(patchFlag&2/* CLASS */){if(oldProps.class!==newProps.class){hostPatchProp(el,'class',null,newProps.class,isSVG);}}// style\n// this flag is matched when the element has dynamic style bindings\nif(patchFlag&4/* STYLE */){hostPatchProp(el,'style',oldProps.style,newProps.style,isSVG);}// props\n// This flag is matched when the element has dynamic prop/attr bindings\n// other than class and style. The keys of dynamic prop/attrs are saved for\n// faster iteration.\n// Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n// bail out and go through a full diff because we need to unset the old key\nif(patchFlag&8/* PROPS */){// if the flag is present then dynamicProps must be non-null\nconst propsToUpdate=n2.dynamicProps;for(let i=0;i<propsToUpdate.length;i++){const key=propsToUpdate[i];const prev=oldProps[key];const next=newProps[key];if(next!==prev||hostForcePatchProp&&hostForcePatchProp(el,key)){hostPatchProp(el,key,prev,next,isSVG,n1.children,parentComponent,parentSuspense,unmountChildren);}}}}// text\n// This flag is matched when the element has only dynamic text children.\nif(patchFlag&1/* TEXT */){if(n1.children!==n2.children){hostSetElementText(el,n2.children);}}}else if(!optimized&&dynamicChildren==null){// unoptimized, full diff\npatchProps(el,n2,oldProps,newProps,parentComponent,parentSuspense,isSVG);}const areChildrenSVG=isSVG&&n2.type!=='foreignObject';if(dynamicChildren){patchBlockChildren(n1.dynamicChildren,dynamicChildren,el,parentComponent,parentSuspense,areChildrenSVG,slotScopeIds);if(parentComponent&&parentComponent.type.__hmrId){traverseStaticChildren(n1,n2);}}else if(!optimized){// full diff\npatchChildren(n1,n2,el,null,parentComponent,parentSuspense,areChildrenSVG,slotScopeIds,false);}if((vnodeHook=newProps.onVnodeUpdated)||dirs){queuePostRenderEffect(()=>{vnodeHook&&invokeVNodeHook(vnodeHook,parentComponent,n2,n1);dirs&&invokeDirectiveHook(n2,n1,parentComponent,'updated');},parentSuspense);}};// The fast path for blocks.\nconst patchBlockChildren=(oldChildren,newChildren,fallbackContainer,parentComponent,parentSuspense,isSVG,slotScopeIds)=>{for(let i=0;i<newChildren.length;i++){const oldVNode=oldChildren[i];const newVNode=newChildren[i];// Determine the container (parent element) for the patch.\nconst container=// - In the case of a Fragment, we need to provide the actual parent\n// of the Fragment itself so it can move its children.\noldVNode.type===Fragment||// - In the case of different nodes, there is going to be a replacement\n// which also requires the correct parent container\n!isSameVNodeType(oldVNode,newVNode)||// - In the case of a component, it could contain anything.\noldVNode.shapeFlag&6/* COMPONENT */||oldVNode.shapeFlag&64/* TELEPORT */?hostParentNode(oldVNode.el):// In other cases, the parent container is not actually used so we\n// just pass the block element here to avoid a DOM parentNode call.\nfallbackContainer;patch(oldVNode,newVNode,container,null,parentComponent,parentSuspense,isSVG,slotScopeIds,true);}};const patchProps=(el,vnode,oldProps,newProps,parentComponent,parentSuspense,isSVG)=>{if(oldProps!==newProps){for(const key in newProps){// empty string is not valid prop\nif(isReservedProp(key))continue;const next=newProps[key];const prev=oldProps[key];if(next!==prev||hostForcePatchProp&&hostForcePatchProp(el,key)){hostPatchProp(el,key,prev,next,isSVG,vnode.children,parentComponent,parentSuspense,unmountChildren);}}if(oldProps!==EMPTY_OBJ){for(const key in oldProps){if(!isReservedProp(key)&&!(key in newProps)){hostPatchProp(el,key,oldProps[key],null,isSVG,vnode.children,parentComponent,parentSuspense,unmountChildren);}}}}};const processFragment=(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{const fragmentStartAnchor=n2.el=n1?n1.el:hostCreateText('');const fragmentEndAnchor=n2.anchor=n1?n1.anchor:hostCreateText('');let{patchFlag,dynamicChildren,slotScopeIds:fragmentSlotScopeIds}=n2;if(patchFlag>0){optimized=true;}// check if this is a slot fragment with :slotted scope ids\nif(fragmentSlotScopeIds){slotScopeIds=slotScopeIds?slotScopeIds.concat(fragmentSlotScopeIds):fragmentSlotScopeIds;}if(isHmrUpdating){// HMR updated, force full diff\npatchFlag=0;optimized=false;dynamicChildren=null;}if(n1==null){hostInsert(fragmentStartAnchor,container,anchor);hostInsert(fragmentEndAnchor,container,anchor);// a fragment can only have array children\n// since they are either generated by the compiler, or implicitly created\n// from arrays.\nmountChildren(n2.children,container,fragmentEndAnchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else{if(patchFlag>0&&patchFlag&64/* STABLE_FRAGMENT */&&dynamicChildren&&// #2715 the previous fragment could've been a BAILed one as a result\n// of renderSlot() with no valid children\nn1.dynamicChildren){// a stable fragment (template root or <template v-for>) doesn't need to\n// patch children order, but it may contain dynamicChildren.\npatchBlockChildren(n1.dynamicChildren,dynamicChildren,container,parentComponent,parentSuspense,isSVG,slotScopeIds);if(parentComponent&&parentComponent.type.__hmrId){traverseStaticChildren(n1,n2);}else if(// #2080 if the stable fragment has a key, it's a <template v-for> that may\n//  get moved around. Make sure all root level vnodes inherit el.\n// #2134 or if it's a component root, it may also get moved around\n// as the component is being moved.\nn2.key!=null||parentComponent&&n2===parentComponent.subTree){traverseStaticChildren(n1,n2,true/* shallow */);}}else{// keyed / unkeyed, or manual fragments.\n// for keyed & unkeyed, since they are compiler generated from v-for,\n// each child is guaranteed to be a block so the fragment will never\n// have dynamicChildren.\npatchChildren(n1,n2,container,fragmentEndAnchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}}};const processComponent=(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{n2.slotScopeIds=slotScopeIds;if(n1==null){if(n2.shapeFlag&512/* COMPONENT_KEPT_ALIVE */){parentComponent.ctx.activate(n2,container,anchor,isSVG,optimized);}else{mountComponent(n2,container,anchor,parentComponent,parentSuspense,isSVG,optimized);}}else{updateComponent(n1,n2,optimized);}};const mountComponent=(initialVNode,container,anchor,parentComponent,parentSuspense,isSVG,optimized)=>{const instance=initialVNode.component=createComponentInstance(initialVNode,parentComponent,parentSuspense);if(instance.type.__hmrId){registerHMR(instance);}{pushWarningContext(initialVNode);startMeasure(instance,`mount`);}// inject renderer internals for keepAlive\nif(isKeepAlive(initialVNode)){instance.ctx.renderer=internals;}// resolve props and slots for setup context\n{startMeasure(instance,`init`);}setupComponent(instance);{endMeasure(instance,`init`);}// setup() is async. This component relies on async logic to be resolved\n// before proceeding\nif(instance.asyncDep){parentSuspense&&parentSuspense.registerDep(instance,setupRenderEffect);// Give it a placeholder if this is not hydration\n// TODO handle self-defined fallback\nif(!initialVNode.el){const placeholder=instance.subTree=createVNode(Comment);processCommentNode(null,placeholder,container,anchor);}return;}setupRenderEffect(instance,initialVNode,container,anchor,parentSuspense,isSVG,optimized);{popWarningContext();endMeasure(instance,`mount`);}};const updateComponent=(n1,n2,optimized)=>{const instance=n2.component=n1.component;if(shouldUpdateComponent(n1,n2,optimized)){if(instance.asyncDep&&!instance.asyncResolved){// async & still pending - just update props and slots\n// since the component's reactive effect for render isn't set-up yet\n{pushWarningContext(n2);}updateComponentPreRender(instance,n2,optimized);{popWarningContext();}return;}else{// normal update\ninstance.next=n2;// in case the child component is also queued, remove it to avoid\n// double updating the same child component in the same flush.\ninvalidateJob(instance.update);// instance.update is the reactive effect runner.\ninstance.update();}}else{// no update needed. just copy over properties\nn2.component=n1.component;n2.el=n1.el;instance.vnode=n2;}};const setupRenderEffect=(instance,initialVNode,container,anchor,parentSuspense,isSVG,optimized)=>{// create reactive effect for rendering\ninstance.update=effect(function componentEffect(){if(!instance.isMounted){let vnodeHook;const{el,props}=initialVNode;const{bm,m,parent}=instance;// beforeMount hook\nif(bm){invokeArrayFns(bm);}// onVnodeBeforeMount\nif(vnodeHook=props&&props.onVnodeBeforeMount){invokeVNodeHook(vnodeHook,parent,initialVNode);}// render\n{startMeasure(instance,`render`);}const subTree=instance.subTree=renderComponentRoot(instance);{endMeasure(instance,`render`);}if(el&&hydrateNode){{startMeasure(instance,`hydrate`);}// vnode has adopted host node - perform hydration instead of mount.\nhydrateNode(initialVNode.el,subTree,instance,parentSuspense,null);{endMeasure(instance,`hydrate`);}}else{{startMeasure(instance,`patch`);}patch(null,subTree,container,anchor,instance,parentSuspense,isSVG);{endMeasure(instance,`patch`);}initialVNode.el=subTree.el;}// mounted hook\nif(m){queuePostRenderEffect(m,parentSuspense);}// onVnodeMounted\nif(vnodeHook=props&&props.onVnodeMounted){const scopedInitialVNode=initialVNode;queuePostRenderEffect(()=>{invokeVNodeHook(vnodeHook,parent,scopedInitialVNode);},parentSuspense);}// activated hook for keep-alive roots.\n// #1742 activated hook must be accessed after first render\n// since the hook may be injected by a child keep-alive\nconst{a}=instance;if(a&&initialVNode.shapeFlag&256/* COMPONENT_SHOULD_KEEP_ALIVE */){queuePostRenderEffect(a,parentSuspense);}instance.isMounted=true;{devtoolsComponentAdded(instance);}// #2458: deference mount-only object parameters to prevent memleaks\ninitialVNode=container=anchor=null;}else{// updateComponent\n// This is triggered by mutation of component's own state (next: null)\n// OR parent calling processComponent (next: VNode)\nlet{next,bu,u,parent,vnode}=instance;let originNext=next;let vnodeHook;{pushWarningContext(next||instance.vnode);}if(next){next.el=vnode.el;updateComponentPreRender(instance,next,optimized);}else{next=vnode;}// beforeUpdate hook\nif(bu){invokeArrayFns(bu);}// onVnodeBeforeUpdate\nif(vnodeHook=next.props&&next.props.onVnodeBeforeUpdate){invokeVNodeHook(vnodeHook,parent,next,vnode);}// render\n{startMeasure(instance,`render`);}const nextTree=renderComponentRoot(instance);{endMeasure(instance,`render`);}const prevTree=instance.subTree;instance.subTree=nextTree;{startMeasure(instance,`patch`);}patch(prevTree,nextTree,// parent may have changed if it's in a teleport\nhostParentNode(prevTree.el),// anchor may have changed if it's in a fragment\ngetNextHostNode(prevTree),instance,parentSuspense,isSVG);{endMeasure(instance,`patch`);}next.el=nextTree.el;if(originNext===null){// self-triggered update. In case of HOC, update parent component\n// vnode el. HOC is indicated by parent instance's subTree pointing\n// to child component's vnode\nupdateHOCHostEl(instance,nextTree.el);}// updated hook\nif(u){queuePostRenderEffect(u,parentSuspense);}// onVnodeUpdated\nif(vnodeHook=next.props&&next.props.onVnodeUpdated){queuePostRenderEffect(()=>{invokeVNodeHook(vnodeHook,parent,next,vnode);},parentSuspense);}{devtoolsComponentUpdated(instance);}{popWarningContext();}}},createDevEffectOptions(instance));};const updateComponentPreRender=(instance,nextVNode,optimized)=>{nextVNode.component=instance;const prevProps=instance.vnode.props;instance.vnode=nextVNode;instance.next=null;updateProps(instance,nextVNode.props,prevProps,optimized);updateSlots(instance,nextVNode.children);pauseTracking();// props update may have triggered pre-flush watchers.\n// flush them before the render update.\nflushPreFlushCbs(undefined,instance.update);resetTracking();};const patchChildren=(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized=false)=>{const c1=n1&&n1.children;const prevShapeFlag=n1?n1.shapeFlag:0;const c2=n2.children;const{patchFlag,shapeFlag}=n2;// fast path\nif(patchFlag>0){if(patchFlag&128/* KEYED_FRAGMENT */){// this could be either fully-keyed or mixed (some keyed some not)\n// presence of patchFlag means children are guaranteed to be arrays\npatchKeyedChildren(c1,c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);return;}else if(patchFlag&256/* UNKEYED_FRAGMENT */){// unkeyed\npatchUnkeyedChildren(c1,c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);return;}}// children has 3 possibilities: text, array or no children.\nif(shapeFlag&8/* TEXT_CHILDREN */){// text children fast path\nif(prevShapeFlag&16/* ARRAY_CHILDREN */){unmountChildren(c1,parentComponent,parentSuspense);}if(c2!==c1){hostSetElementText(container,c2);}}else{if(prevShapeFlag&16/* ARRAY_CHILDREN */){// prev children was array\nif(shapeFlag&16/* ARRAY_CHILDREN */){// two arrays, cannot assume anything, do full diff\npatchKeyedChildren(c1,c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else{// no new children, just unmount old\nunmountChildren(c1,parentComponent,parentSuspense,true);}}else{// prev children was text OR null\n// new children is array OR null\nif(prevShapeFlag&8/* TEXT_CHILDREN */){hostSetElementText(container,'');}// mount new if array\nif(shapeFlag&16/* ARRAY_CHILDREN */){mountChildren(c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}}}};const patchUnkeyedChildren=(c1,c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{c1=c1||EMPTY_ARR;c2=c2||EMPTY_ARR;const oldLength=c1.length;const newLength=c2.length;const commonLength=Math.min(oldLength,newLength);let i;for(i=0;i<commonLength;i++){const nextChild=c2[i]=optimized?cloneIfMounted(c2[i]):normalizeVNode(c2[i]);patch(c1[i],nextChild,container,null,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}if(oldLength>newLength){// remove old\nunmountChildren(c1,parentComponent,parentSuspense,true,false,commonLength);}else{// mount new\nmountChildren(c2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,commonLength);}};// can be all-keyed or mixed\nconst patchKeyedChildren=(c1,c2,container,parentAnchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized)=>{let i=0;const l2=c2.length;let e1=c1.length-1;// prev ending index\nlet e2=l2-1;// next ending index\n// 1. sync from start\n// (a b) c\n// (a b) d e\nwhile(i<=e1&&i<=e2){const n1=c1[i];const n2=c2[i]=optimized?cloneIfMounted(c2[i]):normalizeVNode(c2[i]);if(isSameVNodeType(n1,n2)){patch(n1,n2,container,null,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else{break;}i++;}// 2. sync from end\n// a (b c)\n// d e (b c)\nwhile(i<=e1&&i<=e2){const n1=c1[e1];const n2=c2[e2]=optimized?cloneIfMounted(c2[e2]):normalizeVNode(c2[e2]);if(isSameVNodeType(n1,n2)){patch(n1,n2,container,null,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else{break;}e1--;e2--;}// 3. common sequence + mount\n// (a b)\n// (a b) c\n// i = 2, e1 = 1, e2 = 2\n// (a b)\n// c (a b)\n// i = 0, e1 = -1, e2 = 0\nif(i>e1){if(i<=e2){const nextPos=e2+1;const anchor=nextPos<l2?c2[nextPos].el:parentAnchor;while(i<=e2){patch(null,c2[i]=optimized?cloneIfMounted(c2[i]):normalizeVNode(c2[i]),container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);i++;}}}// 4. common sequence + unmount\n// (a b) c\n// (a b)\n// i = 2, e1 = 2, e2 = 1\n// a (b c)\n// (b c)\n// i = 0, e1 = 0, e2 = -1\nelse if(i>e2){while(i<=e1){unmount(c1[i],parentComponent,parentSuspense,true);i++;}}// 5. unknown sequence\n// [i ... e1 + 1]: a b [c d e] f g\n// [i ... e2 + 1]: a b [e d c h] f g\n// i = 2, e1 = 4, e2 = 5\nelse{const s1=i;// prev starting index\nconst s2=i;// next starting index\n// 5.1 build key:index map for newChildren\nconst keyToNewIndexMap=new Map();for(i=s2;i<=e2;i++){const nextChild=c2[i]=optimized?cloneIfMounted(c2[i]):normalizeVNode(c2[i]);if(nextChild.key!=null){if(keyToNewIndexMap.has(nextChild.key)){warn(`Duplicate keys found during update:`,JSON.stringify(nextChild.key),`Make sure keys are unique.`);}keyToNewIndexMap.set(nextChild.key,i);}}// 5.2 loop through old children left to be patched and try to patch\n// matching nodes & remove nodes that are no longer present\nlet j;let patched=0;const toBePatched=e2-s2+1;let moved=false;// used to track whether any node has moved\nlet maxNewIndexSoFar=0;// works as Map<newIndex, oldIndex>\n// Note that oldIndex is offset by +1\n// and oldIndex = 0 is a special value indicating the new node has\n// no corresponding old node.\n// used for determining longest stable subsequence\nconst newIndexToOldIndexMap=new Array(toBePatched);for(i=0;i<toBePatched;i++)newIndexToOldIndexMap[i]=0;for(i=s1;i<=e1;i++){const prevChild=c1[i];if(patched>=toBePatched){// all new children have been patched so this can only be a removal\nunmount(prevChild,parentComponent,parentSuspense,true);continue;}let newIndex;if(prevChild.key!=null){newIndex=keyToNewIndexMap.get(prevChild.key);}else{// key-less node, try to locate a key-less node of the same type\nfor(j=s2;j<=e2;j++){if(newIndexToOldIndexMap[j-s2]===0&&isSameVNodeType(prevChild,c2[j])){newIndex=j;break;}}}if(newIndex===undefined){unmount(prevChild,parentComponent,parentSuspense,true);}else{newIndexToOldIndexMap[newIndex-s2]=i+1;if(newIndex>=maxNewIndexSoFar){maxNewIndexSoFar=newIndex;}else{moved=true;}patch(prevChild,c2[newIndex],container,null,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);patched++;}}// 5.3 move and mount\n// generate longest stable subsequence only when nodes have moved\nconst increasingNewIndexSequence=moved?getSequence(newIndexToOldIndexMap):EMPTY_ARR;j=increasingNewIndexSequence.length-1;// looping backwards so that we can use last patched node as anchor\nfor(i=toBePatched-1;i>=0;i--){const nextIndex=s2+i;const nextChild=c2[nextIndex];const anchor=nextIndex+1<l2?c2[nextIndex+1].el:parentAnchor;if(newIndexToOldIndexMap[i]===0){// mount new\npatch(null,nextChild,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}else if(moved){// move if:\n// There is no stable subsequence (e.g. a reverse)\n// OR current node is not among the stable sequence\nif(j<0||i!==increasingNewIndexSequence[j]){move(nextChild,container,anchor,2/* REORDER */);}else{j--;}}}}};const move=(vnode,container,anchor,moveType,parentSuspense=null)=>{const{el,type,transition,children,shapeFlag}=vnode;if(shapeFlag&6/* COMPONENT */){move(vnode.component.subTree,container,anchor,moveType);return;}if(shapeFlag&128/* SUSPENSE */){vnode.suspense.move(container,anchor,moveType);return;}if(shapeFlag&64/* TELEPORT */){type.move(vnode,container,anchor,internals);return;}if(type===Fragment){hostInsert(el,container,anchor);for(let i=0;i<children.length;i++){move(children[i],container,anchor,moveType);}hostInsert(vnode.anchor,container,anchor);return;}if(type===Static){moveStaticNode(vnode,container,anchor);return;}// single nodes\nconst needTransition=moveType!==2/* REORDER */&&shapeFlag&1/* ELEMENT */&&transition;if(needTransition){if(moveType===0/* ENTER */){transition.beforeEnter(el);hostInsert(el,container,anchor);queuePostRenderEffect(()=>transition.enter(el),parentSuspense);}else{const{leave,delayLeave,afterLeave}=transition;const remove=()=>hostInsert(el,container,anchor);const performLeave=()=>{leave(el,()=>{remove();afterLeave&&afterLeave();});};if(delayLeave){delayLeave(el,remove,performLeave);}else{performLeave();}}}else{hostInsert(el,container,anchor);}};const unmount=(vnode,parentComponent,parentSuspense,doRemove=false,optimized=false)=>{const{type,props,ref,children,dynamicChildren,shapeFlag,patchFlag,dirs}=vnode;// unset ref\nif(ref!=null){setRef(ref,null,parentSuspense,null);}if(shapeFlag&256/* COMPONENT_SHOULD_KEEP_ALIVE */){parentComponent.ctx.deactivate(vnode);return;}const shouldInvokeDirs=shapeFlag&1/* ELEMENT */&&dirs;let vnodeHook;if(vnodeHook=props&&props.onVnodeBeforeUnmount){invokeVNodeHook(vnodeHook,parentComponent,vnode);}if(shapeFlag&6/* COMPONENT */){unmountComponent(vnode.component,parentSuspense,doRemove);}else{if(shapeFlag&128/* SUSPENSE */){vnode.suspense.unmount(parentSuspense,doRemove);return;}if(shouldInvokeDirs){invokeDirectiveHook(vnode,null,parentComponent,'beforeUnmount');}if(shapeFlag&64/* TELEPORT */){vnode.type.remove(vnode,parentComponent,parentSuspense,optimized,internals,doRemove);}else if(dynamicChildren&&(// #1153: fast path should not be taken for non-stable (v-for) fragments\ntype!==Fragment||patchFlag>0&&patchFlag&64/* STABLE_FRAGMENT */)){// fast path for block nodes: only need to unmount dynamic children.\nunmountChildren(dynamicChildren,parentComponent,parentSuspense,false,true);}else if(type===Fragment&&(patchFlag&128/* KEYED_FRAGMENT */||patchFlag&256/* UNKEYED_FRAGMENT */)||!optimized&&shapeFlag&16/* ARRAY_CHILDREN */){unmountChildren(children,parentComponent,parentSuspense);}if(doRemove){remove(vnode);}}if((vnodeHook=props&&props.onVnodeUnmounted)||shouldInvokeDirs){queuePostRenderEffect(()=>{vnodeHook&&invokeVNodeHook(vnodeHook,parentComponent,vnode);shouldInvokeDirs&&invokeDirectiveHook(vnode,null,parentComponent,'unmounted');},parentSuspense);}};const remove=vnode=>{const{type,el,anchor,transition}=vnode;if(type===Fragment){removeFragment(el,anchor);return;}if(type===Static){removeStaticNode(vnode);return;}const performRemove=()=>{hostRemove(el);if(transition&&!transition.persisted&&transition.afterLeave){transition.afterLeave();}};if(vnode.shapeFlag&1/* ELEMENT */&&transition&&!transition.persisted){const{leave,delayLeave}=transition;const performLeave=()=>leave(el,performRemove);if(delayLeave){delayLeave(vnode.el,performRemove,performLeave);}else{performLeave();}}else{performRemove();}};const removeFragment=(cur,end)=>{// For fragments, directly remove all contained DOM nodes.\n// (fragment child nodes cannot have transition)\nlet next;while(cur!==end){next=hostNextSibling(cur);hostRemove(cur);cur=next;}hostRemove(end);};const unmountComponent=(instance,parentSuspense,doRemove)=>{if(instance.type.__hmrId){unregisterHMR(instance);}const{bum,effects,update,subTree,um}=instance;// beforeUnmount hook\nif(bum){invokeArrayFns(bum);}if(effects){for(let i=0;i<effects.length;i++){stop(effects[i]);}}// update may be null if a component is unmounted before its async\n// setup has resolved.\nif(update){stop(update);unmount(subTree,instance,parentSuspense,doRemove);}// unmounted hook\nif(um){queuePostRenderEffect(um,parentSuspense);}queuePostRenderEffect(()=>{instance.isUnmounted=true;},parentSuspense);// A component with async dep inside a pending suspense is unmounted before\n// its async dep resolves. This should remove the dep from the suspense, and\n// cause the suspense to resolve immediately if that was the last dep.\nif(parentSuspense&&parentSuspense.pendingBranch&&!parentSuspense.isUnmounted&&instance.asyncDep&&!instance.asyncResolved&&instance.suspenseId===parentSuspense.pendingId){parentSuspense.deps--;if(parentSuspense.deps===0){parentSuspense.resolve();}}{devtoolsComponentRemoved(instance);}};const unmountChildren=(children,parentComponent,parentSuspense,doRemove=false,optimized=false,start=0)=>{for(let i=start;i<children.length;i++){unmount(children[i],parentComponent,parentSuspense,doRemove,optimized);}};const getNextHostNode=vnode=>{if(vnode.shapeFlag&6/* COMPONENT */){return getNextHostNode(vnode.component.subTree);}if(vnode.shapeFlag&128/* SUSPENSE */){return vnode.suspense.next();}return hostNextSibling(vnode.anchor||vnode.el);};const render=(vnode,container,isSVG)=>{if(vnode==null){if(container._vnode){unmount(container._vnode,null,null,true);}}else{patch(container._vnode||null,vnode,container,null,null,null,isSVG);}flushPostFlushCbs();container._vnode=vnode;};const internals={p:patch,um:unmount,m:move,r:remove,mt:mountComponent,mc:mountChildren,pc:patchChildren,pbc:patchBlockChildren,n:getNextHostNode,o:options};let hydrate;let hydrateNode;if(createHydrationFns){[hydrate,hydrateNode]=createHydrationFns(internals);}return{render,hydrate,createApp:createAppAPI(render,hydrate)};}function invokeVNodeHook(hook,instance,vnode,prevVNode=null){callWithAsyncErrorHandling(hook,instance,7/* VNODE_HOOK */,[vnode,prevVNode]);}/**\n     * #1156\n     * When a component is HMR-enabled, we need to make sure that all static nodes\n     * inside a block also inherit the DOM element from the previous tree so that\n     * HMR updates (which are full updates) can retrieve the element for patching.\n     *\n     * #2080\n     * Inside keyed `template` fragment static children, if a fragment is moved,\n     * the children will always moved so that need inherit el form previous nodes\n     * to ensure correct moved position.\n     */function traverseStaticChildren(n1,n2,shallow=false){const ch1=n1.children;const ch2=n2.children;if(isArray(ch1)&&isArray(ch2)){for(let i=0;i<ch1.length;i++){// this is only called in the optimized path so array children are\n// guaranteed to be vnodes\nconst c1=ch1[i];let c2=ch2[i];if(c2.shapeFlag&1/* ELEMENT */&&!c2.dynamicChildren){if(c2.patchFlag<=0||c2.patchFlag===32/* HYDRATE_EVENTS */){c2=ch2[i]=cloneIfMounted(ch2[i]);c2.el=c1.el;}if(!shallow)traverseStaticChildren(c1,c2);}// also inherit for comment nodes, but not placeholders (e.g. v-if which\n// would have received .el during block patch)\nif(c2.type===Comment&&!c2.el){c2.el=c1.el;}}}}// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr){const p=arr.slice();const result=[0];let i,j,u,v,c;const len=arr.length;for(i=0;i<len;i++){const arrI=arr[i];if(arrI!==0){j=result[result.length-1];if(arr[j]<arrI){p[i]=j;result.push(i);continue;}u=0;v=result.length-1;while(u<v){c=(u+v)/2|0;if(arr[result[c]]<arrI){u=c+1;}else{v=c;}}if(arrI<arr[result[u]]){if(u>0){p[i]=result[u-1];}result[u]=i;}}}u=result.length;v=result[u-1];while(u-->0){result[u]=v;v=p[v];}return result;}const isTeleport=type=>type.__isTeleport;const isTeleportDisabled=props=>props&&(props.disabled||props.disabled==='');const isTargetSVG=target=>typeof SVGElement!=='undefined'&&target instanceof SVGElement;const resolveTarget=(props,select)=>{const targetSelector=props&&props.to;if(isString(targetSelector)){if(!select){warn(`Current renderer does not support string target for Teleports. `+`(missing querySelector renderer option)`);return null;}else{const target=select(targetSelector);if(!target){warn(`Failed to locate Teleport target with selector \"${targetSelector}\". `+`Note the target element must exist before the component is mounted - `+`i.e. the target cannot be rendered by the component itself, and `+`ideally should be outside of the entire Vue component tree.`);}return target;}}else{if(!targetSelector&&!isTeleportDisabled(props)){warn(`Invalid Teleport target: ${targetSelector}`);}return targetSelector;}};const TeleportImpl={__isTeleport:true,process(n1,n2,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized,internals){const{mc:mountChildren,pc:patchChildren,pbc:patchBlockChildren,o:{insert,querySelector,createText,createComment}}=internals;const disabled=isTeleportDisabled(n2.props);const{shapeFlag,children}=n2;// #3302\n// HMR updated, force full diff\nif(isHmrUpdating){optimized=false;n2.dynamicChildren=null;}if(n1==null){// insert anchors in the main view\nconst placeholder=n2.el=createComment('teleport start');const mainAnchor=n2.anchor=createComment('teleport end');insert(placeholder,container,anchor);insert(mainAnchor,container,anchor);const target=n2.target=resolveTarget(n2.props,querySelector);const targetAnchor=n2.targetAnchor=createText('');if(target){insert(targetAnchor,target);// #2652 we could be teleporting from a non-SVG tree into an SVG tree\nisSVG=isSVG||isTargetSVG(target);}else if(!disabled){warn('Invalid Teleport target on mount:',target,`(${typeof target})`);}const mount=(container,anchor)=>{// Teleport *always* has Array children. This is enforced in both the\n// compiler and vnode children normalization.\nif(shapeFlag&16/* ARRAY_CHILDREN */){mountChildren(children,container,anchor,parentComponent,parentSuspense,isSVG,slotScopeIds,optimized);}};if(disabled){mount(container,mainAnchor);}else if(target){mount(target,targetAnchor);}}else{// update content\nn2.el=n1.el;const mainAnchor=n2.anchor=n1.anchor;const target=n2.target=n1.target;const targetAnchor=n2.targetAnchor=n1.targetAnchor;const wasDisabled=isTeleportDisabled(n1.props);const currentContainer=wasDisabled?container:target;const currentAnchor=wasDisabled?mainAnchor:targetAnchor;isSVG=isSVG||isTargetSVG(target);if(n2.dynamicChildren){// fast path when the teleport happens to be a block root\npatchBlockChildren(n1.dynamicChildren,n2.dynamicChildren,currentContainer,parentComponent,parentSuspense,isSVG,slotScopeIds);// even in block tree mode we need to make sure all root-level nodes\n// in the teleport inherit previous DOM references so that they can\n// be moved in future patches.\ntraverseStaticChildren(n1,n2,true);}else if(!optimized){patchChildren(n1,n2,currentContainer,currentAnchor,parentComponent,parentSuspense,isSVG,slotScopeIds,false);}if(disabled){if(!wasDisabled){// enabled -> disabled\n// move into main container\nmoveTeleport(n2,container,mainAnchor,internals,1/* TOGGLE */);}}else{// target changed\nif((n2.props&&n2.props.to)!==(n1.props&&n1.props.to)){const nextTarget=n2.target=resolveTarget(n2.props,querySelector);if(nextTarget){moveTeleport(n2,nextTarget,null,internals,0/* TARGET_CHANGE */);}else{warn('Invalid Teleport target on update:',target,`(${typeof target})`);}}else if(wasDisabled){// disabled -> enabled\n// move into teleport target\nmoveTeleport(n2,target,targetAnchor,internals,1/* TOGGLE */);}}}},remove(vnode,parentComponent,parentSuspense,optimized,{um:unmount,o:{remove:hostRemove}},doRemove){const{shapeFlag,children,anchor,targetAnchor,target,props}=vnode;if(target){hostRemove(targetAnchor);}// an unmounted teleport should always remove its children if not disabled\nif(doRemove||!isTeleportDisabled(props)){hostRemove(anchor);if(shapeFlag&16/* ARRAY_CHILDREN */){for(let i=0;i<children.length;i++){unmount(children[i],parentComponent,parentSuspense,true,optimized);}}}},move:moveTeleport,hydrate:hydrateTeleport};function moveTeleport(vnode,container,parentAnchor,{o:{insert},m:move},moveType=2/* REORDER */){// move target anchor if this is a target change.\nif(moveType===0/* TARGET_CHANGE */){insert(vnode.targetAnchor,container,parentAnchor);}const{el,anchor,shapeFlag,children,props}=vnode;const isReorder=moveType===2/* REORDER */;// move main view anchor if this is a re-order.\nif(isReorder){insert(el,container,parentAnchor);}// if this is a re-order and teleport is enabled (content is in target)\n// do not move children. So the opposite is: only move children if this\n// is not a reorder, or the teleport is disabled\nif(!isReorder||isTeleportDisabled(props)){// Teleport has either Array children or no children.\nif(shapeFlag&16/* ARRAY_CHILDREN */){for(let i=0;i<children.length;i++){move(children[i],container,parentAnchor,2/* REORDER */);}}}// move main view anchor if this is a re-order.\nif(isReorder){insert(anchor,container,parentAnchor);}}function hydrateTeleport(node,vnode,parentComponent,parentSuspense,slotScopeIds,optimized,{o:{nextSibling,parentNode,querySelector}},hydrateChildren){const target=vnode.target=resolveTarget(vnode.props,querySelector);if(target){// if multiple teleports rendered to the same target element, we need to\n// pick up from where the last teleport finished instead of the first node\nconst targetNode=target._lpa||target.firstChild;if(vnode.shapeFlag&16/* ARRAY_CHILDREN */){if(isTeleportDisabled(vnode.props)){vnode.anchor=hydrateChildren(nextSibling(node),vnode,parentNode(node),parentComponent,parentSuspense,slotScopeIds,optimized);vnode.targetAnchor=targetNode;}else{vnode.anchor=nextSibling(node);vnode.targetAnchor=hydrateChildren(targetNode,vnode,target,parentComponent,parentSuspense,slotScopeIds,optimized);}target._lpa=vnode.targetAnchor&&nextSibling(vnode.targetAnchor);}}return vnode.anchor&&nextSibling(vnode.anchor);}// Force-casted public typing for h and TSX props inference\nconst Teleport=TeleportImpl;const COMPONENTS='components';const DIRECTIVES='directives';/**\n     * @private\n     */function resolveComponent(name,maybeSelfReference){return resolveAsset(COMPONENTS,name,true,maybeSelfReference)||name;}const NULL_DYNAMIC_COMPONENT=Symbol();/**\n     * @private\n     */function resolveDynamicComponent(component){if(isString(component)){return resolveAsset(COMPONENTS,component,false)||component;}else{// invalid types will fallthrough to createVNode and raise warning\nreturn component||NULL_DYNAMIC_COMPONENT;}}/**\n     * @private\n     */function resolveDirective(name){return resolveAsset(DIRECTIVES,name);}// implementation\nfunction resolveAsset(type,name,warnMissing=true,maybeSelfReference=false){const instance=currentRenderingInstance||currentInstance;if(instance){const Component=instance.type;// explicit self name has highest priority\nif(type===COMPONENTS){const selfName=getComponentName(Component);if(selfName&&(selfName===name||selfName===camelize(name)||selfName===capitalize(camelize(name)))){return Component;}}const res=// local registration\n// check instance[type] first for components with mixin or extends.\nresolve(instance[type]||Component[type],name)||// global registration\nresolve(instance.appContext[type],name);if(!res&&maybeSelfReference){// fallback to implicit self-reference\nreturn Component;}if(warnMissing&&!res){warn(`Failed to resolve ${type.slice(0,-1)}: ${name}`);}return res;}else{warn(`resolve${capitalize(type.slice(0,-1))} `+`can only be used in render() or setup().`);}}function resolve(registry,name){return registry&&(registry[name]||registry[camelize(name)]||registry[capitalize(camelize(name))]);}const Fragment=Symbol('Fragment');const Text=Symbol('Text');const Comment=Symbol('Comment');const Static=Symbol('Static');// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nconst blockStack=[];let currentBlock=null;/**\n     * Open a block.\n     * This must be called before `createBlock`. It cannot be part of `createBlock`\n     * because the children of the block are evaluated before `createBlock` itself\n     * is called. The generated code typically looks like this:\n     *\n     * ```js\n     * function render() {\n     *   return (openBlock(),createBlock('div', null, [...]))\n     * }\n     * ```\n     * disableTracking is true when creating a v-for fragment block, since a v-for\n     * fragment always diffs its children.\n     *\n     * @private\n     */function openBlock(disableTracking=false){blockStack.push(currentBlock=disableTracking?null:[]);}function closeBlock(){blockStack.pop();currentBlock=blockStack[blockStack.length-1]||null;}// Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\nlet shouldTrack$1=1;/**\n     * Block tracking sometimes needs to be disabled, for example during the\n     * creation of a tree that needs to be cached by v-once. The compiler generates\n     * code like this:\n     *\n     * ``` js\n     * _cache[1] || (\n     *   setBlockTracking(-1),\n     *   _cache[1] = createVNode(...),\n     *   setBlockTracking(1),\n     *   _cache[1]\n     * )\n     * ```\n     *\n     * @private\n     */function setBlockTracking(value){shouldTrack$1+=value;}/**\n     * Create a block root vnode. Takes the same exact arguments as `createVNode`.\n     * A block root keeps track of dynamic nodes within the block in the\n     * `dynamicChildren` array.\n     *\n     * @private\n     */function createBlock(type,props,children,patchFlag,dynamicProps){const vnode=createVNode(type,props,children,patchFlag,dynamicProps,true/* isBlock: prevent a block from tracking itself */);// save current block children on the block vnode\nvnode.dynamicChildren=currentBlock||EMPTY_ARR;// close block\ncloseBlock();// a block is always going to be patched, so track it as a child of its\n// parent block\nif(shouldTrack$1>0&&currentBlock){currentBlock.push(vnode);}return vnode;}function isVNode(value){return value?value.__v_isVNode===true:false;}function isSameVNodeType(n1,n2){if(n2.shapeFlag&6/* COMPONENT */&&hmrDirtyComponents.has(n2.type)){// HMR only: if the component has been hot-updated, force a reload.\nreturn false;}return n1.type===n2.type&&n1.key===n2.key;}let vnodeArgsTransformer;/**\n     * Internal API for registering an arguments transform for createVNode\n     * used for creating stubs in the test-utils\n     * It is *internal* but needs to be exposed for test-utils to pick up proper\n     * typings\n     */function transformVNodeArgs(transformer){vnodeArgsTransformer=transformer;}const createVNodeWithArgsTransform=(...args)=>{return _createVNode(...(vnodeArgsTransformer?vnodeArgsTransformer(args,currentRenderingInstance):args));};const InternalObjectKey=`__vInternal`;const normalizeKey=({key})=>key!=null?key:null;const normalizeRef=({ref})=>{return ref!=null?isString(ref)||isRef(ref)||isFunction(ref)?{i:currentRenderingInstance,r:ref}:ref:null;};const createVNode=createVNodeWithArgsTransform;function _createVNode(type,props=null,children=null,patchFlag=0,dynamicProps=null,isBlockNode=false){if(!type||type===NULL_DYNAMIC_COMPONENT){if(!type){warn(`Invalid vnode type when creating vnode: ${type}.`);}type=Comment;}if(isVNode(type)){// createVNode receiving an existing vnode. This happens in cases like\n// <component :is=\"vnode\"/>\n// #2078 make sure to merge refs during the clone instead of overwriting it\nconst cloned=cloneVNode(type,props,true/* mergeRef: true */);if(children){normalizeChildren(cloned,children);}return cloned;}// class component normalization.\nif(isClassComponent(type)){type=type.__vccOpts;}// class & style normalization.\nif(props){// for reactive or proxy objects, we need to clone it to enable mutation.\nif(isProxy(props)||InternalObjectKey in props){props=extend({},props);}let{class:klass,style}=props;if(klass&&!isString(klass)){props.class=normalizeClass(klass);}if(isObject(style)){// reactive state objects need to be cloned since they are likely to be\n// mutated\nif(isProxy(style)&&!isArray(style)){style=extend({},style);}props.style=normalizeStyle(style);}}// encode the vnode type information into a bitmap\nconst shapeFlag=isString(type)?1/* ELEMENT */:isSuspense(type)?128/* SUSPENSE */:isTeleport(type)?64/* TELEPORT */:isObject(type)?4/* STATEFUL_COMPONENT */:isFunction(type)?2/* FUNCTIONAL_COMPONENT */:0;if(shapeFlag&4/* STATEFUL_COMPONENT */&&isProxy(type)){type=toRaw(type);warn(`Vue received a Component which was made a reactive object. This can `+`lead to unnecessary performance overhead, and should be avoided by `+`marking the component with \\`markRaw\\` or using \\`shallowRef\\` `+`instead of \\`ref\\`.`,`\\nComponent that was made reactive: `,type);}const vnode={__v_isVNode:true,[\"__v_skip\"/* SKIP */]:true,type,props,key:props&&normalizeKey(props),ref:props&&normalizeRef(props),scopeId:currentScopeId,slotScopeIds:null,children:null,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag,patchFlag,dynamicProps,dynamicChildren:null,appContext:null};// validate key\nif(vnode.key!==vnode.key){warn(`VNode created with invalid key (NaN). VNode type:`,vnode.type);}normalizeChildren(vnode,children);// normalize suspense children\nif(shapeFlag&128/* SUSPENSE */){const{content,fallback}=normalizeSuspenseChildren(vnode);vnode.ssContent=content;vnode.ssFallback=fallback;}if(shouldTrack$1>0&&// avoid a block node from tracking itself\n!isBlockNode&&// has current parent block\ncurrentBlock&&(// presence of a patch flag indicates this node needs patching on updates.\n// component nodes also should always be patched, because even if the\n// component doesn't need to update, it needs to persist the instance on to\n// the next vnode so that it can be properly unmounted later.\npatchFlag>0||shapeFlag&6/* COMPONENT */)&&// the EVENTS flag is only for hydration and if it is the only flag, the\n// vnode should not be considered dynamic due to handler caching.\npatchFlag!==32/* HYDRATE_EVENTS */){currentBlock.push(vnode);}return vnode;}function cloneVNode(vnode,extraProps,mergeRef=false){// This is intentionally NOT using spread or extend to avoid the runtime\n// key enumeration cost.\nconst{props,ref,patchFlag,children}=vnode;const mergedProps=extraProps?mergeProps(props||{},extraProps):props;return{__v_isVNode:true,[\"__v_skip\"/* SKIP */]:true,type:vnode.type,props:mergedProps,key:mergedProps&&normalizeKey(mergedProps),ref:extraProps&&extraProps.ref?// #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n// if the vnode itself already has a ref, cloneVNode will need to merge\n// the refs so the single vnode can be set on multiple refs\nmergeRef&&ref?isArray(ref)?ref.concat(normalizeRef(extraProps)):[ref,normalizeRef(extraProps)]:normalizeRef(extraProps):ref,scopeId:vnode.scopeId,slotScopeIds:vnode.slotScopeIds,children:patchFlag===-1/* HOISTED */&&isArray(children)?children.map(deepCloneVNode):children,target:vnode.target,targetAnchor:vnode.targetAnchor,staticCount:vnode.staticCount,shapeFlag:vnode.shapeFlag,// if the vnode is cloned with extra props, we can no longer assume its\n// existing patch flag to be reliable and need to add the FULL_PROPS flag.\n// note: perserve flag for fragments since they use the flag for children\n// fast paths only.\npatchFlag:extraProps&&vnode.type!==Fragment?patchFlag===-1// hoisted node\n?16/* FULL_PROPS */:patchFlag|16/* FULL_PROPS */:patchFlag,dynamicProps:vnode.dynamicProps,dynamicChildren:vnode.dynamicChildren,appContext:vnode.appContext,dirs:vnode.dirs,transition:vnode.transition,// These should technically only be non-null on mounted VNodes. However,\n// they *should* be copied for kept-alive vnodes. So we just always copy\n// them since them being non-null during a mount doesn't affect the logic as\n// they will simply be overwritten.\ncomponent:vnode.component,suspense:vnode.suspense,ssContent:vnode.ssContent&&cloneVNode(vnode.ssContent),ssFallback:vnode.ssFallback&&cloneVNode(vnode.ssFallback),el:vnode.el,anchor:vnode.anchor};}/**\n     * Dev only, for HMR of hoisted vnodes reused in v-for\n     * https://github.com/vitejs/vite/issues/2022\n     */function deepCloneVNode(vnode){const cloned=cloneVNode(vnode);if(isArray(vnode.children)){cloned.children=vnode.children.map(deepCloneVNode);}return cloned;}/**\n     * @private\n     */function createTextVNode(text=' ',flag=0){return createVNode(Text,null,text,flag);}/**\n     * @private\n     */function createStaticVNode(content,numberOfNodes){// A static vnode can contain multiple stringified elements, and the number\n// of elements is necessary for hydration.\nconst vnode=createVNode(Static,null,content);vnode.staticCount=numberOfNodes;return vnode;}/**\n     * @private\n     */function createCommentVNode(text='',// when used as the v-else branch, the comment node must be created as a\n// block to ensure correct updates.\nasBlock=false){return asBlock?(openBlock(),createBlock(Comment,null,text)):createVNode(Comment,null,text);}function normalizeVNode(child){if(child==null||typeof child==='boolean'){// empty placeholder\nreturn createVNode(Comment);}else if(isArray(child)){// fragment\nreturn createVNode(Fragment,null,child);}else if(typeof child==='object'){// already vnode, this should be the most common since compiled templates\n// always produce all-vnode children arrays\nreturn child.el===null?child:cloneVNode(child);}else{// strings and numbers\nreturn createVNode(Text,null,String(child));}}// optimized normalization for template-compiled render fns\nfunction cloneIfMounted(child){return child.el===null?child:cloneVNode(child);}function normalizeChildren(vnode,children){let type=0;const{shapeFlag}=vnode;if(children==null){children=null;}else if(isArray(children)){type=16/* ARRAY_CHILDREN */;}else if(typeof children==='object'){if(shapeFlag&1/* ELEMENT */||shapeFlag&64/* TELEPORT */){// Normalize slot to plain children for plain element and Teleport\nconst slot=children.default;if(slot){// _c marker is added by withCtx() indicating this is a compiled slot\nslot._c&&setCompiledSlotRendering(1);normalizeChildren(vnode,slot());slot._c&&setCompiledSlotRendering(-1);}return;}else{type=32/* SLOTS_CHILDREN */;const slotFlag=children._;if(!slotFlag&&!(InternalObjectKey in children)){children._ctx=currentRenderingInstance;}else if(slotFlag===3/* FORWARDED */&&currentRenderingInstance){// a child component receives forwarded slots from the parent.\n// its slot type is determined by its parent's slot type.\nif(currentRenderingInstance.vnode.patchFlag&1024/* DYNAMIC_SLOTS */){children._=2/* DYNAMIC */;vnode.patchFlag|=1024/* DYNAMIC_SLOTS */;}else{children._=1/* STABLE */;}}}}else if(isFunction(children)){children={default:children,_ctx:currentRenderingInstance};type=32/* SLOTS_CHILDREN */;}else{children=String(children);// force teleport children to array so it can be moved around\nif(shapeFlag&64/* TELEPORT */){type=16/* ARRAY_CHILDREN */;children=[createTextVNode(children)];}else{type=8/* TEXT_CHILDREN */;}}vnode.children=children;vnode.shapeFlag|=type;}function mergeProps(...args){const ret=extend({},args[0]);for(let i=1;i<args.length;i++){const toMerge=args[i];for(const key in toMerge){if(key==='class'){if(ret.class!==toMerge.class){ret.class=normalizeClass([ret.class,toMerge.class]);}}else if(key==='style'){ret.style=normalizeStyle([ret.style,toMerge.style]);}else if(isOn(key)){const existing=ret[key];const incoming=toMerge[key];if(existing!==incoming){ret[key]=existing?[].concat(existing,toMerge[key]):incoming;}}else if(key!==''){ret[key]=toMerge[key];}}}return ret;}function provide(key,value){if(!currentInstance){{warn(`provide() can only be used inside setup().`);}}else{let provides=currentInstance.provides;// by default an instance inherits its parent's provides object\n// but when it needs to provide values of its own, it creates its\n// own provides object using parent provides object as prototype.\n// this way in `inject` we can simply look up injections from direct\n// parent and let the prototype chain do the work.\nconst parentProvides=currentInstance.parent&&currentInstance.parent.provides;if(parentProvides===provides){provides=currentInstance.provides=Object.create(parentProvides);}// TS doesn't allow symbol as index type\nprovides[key]=value;}}function inject(key,defaultValue,treatDefaultAsFactory=false){// fallback to `currentRenderingInstance` so that this can be called in\n// a functional component\nconst instance=currentInstance||currentRenderingInstance;if(instance){// #2400\n// to support `app.use` plugins,\n// fallback to appContext's `provides` if the intance is at root\nconst provides=instance.parent==null?instance.vnode.appContext&&instance.vnode.appContext.provides:instance.parent.provides;if(provides&&key in provides){// TS doesn't allow symbol as index type\nreturn provides[key];}else if(arguments.length>1){return treatDefaultAsFactory&&isFunction(defaultValue)?defaultValue():defaultValue;}else{warn(`injection \"${String(key)}\" not found.`);}}else{warn(`inject() can only be used inside setup() or functional components.`);}}function createDuplicateChecker(){const cache=Object.create(null);return(type,key)=>{if(cache[key]){warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);}else{cache[key]=type;}};}let shouldCacheAccess=true;function applyOptions(instance,options,deferredData=[],deferredWatch=[],deferredProvide=[],asMixin=false){const{// composition\nmixins,extends:extendsOptions,// state\ndata:dataOptions,computed:computedOptions,methods,watch:watchOptions,provide:provideOptions,inject:injectOptions,// assets\ncomponents,directives,// lifecycle\nbeforeMount,mounted,beforeUpdate,updated,activated,deactivated,beforeDestroy,beforeUnmount,destroyed,unmounted,render,renderTracked,renderTriggered,errorCaptured,// public API\nexpose}=options;const publicThis=instance.proxy;const ctx=instance.ctx;const globalMixins=instance.appContext.mixins;if(asMixin&&render&&instance.render===NOOP){instance.render=render;}// applyOptions is called non-as-mixin once per instance\nif(!asMixin){shouldCacheAccess=false;callSyncHook('beforeCreate',\"bc\"/* BEFORE_CREATE */,options,instance,globalMixins);shouldCacheAccess=true;// global mixins are applied first\napplyMixins(instance,globalMixins,deferredData,deferredWatch,deferredProvide);}// extending a base component...\nif(extendsOptions){applyOptions(instance,extendsOptions,deferredData,deferredWatch,deferredProvide,true);}// local mixins\nif(mixins){applyMixins(instance,mixins,deferredData,deferredWatch,deferredProvide);}const checkDuplicateProperties=createDuplicateChecker();{const[propsOptions]=instance.propsOptions;if(propsOptions){for(const key in propsOptions){checkDuplicateProperties(\"Props\"/* PROPS */,key);}}}// options initialization order (to be consistent with Vue 2):\n// - props (already done outside of this function)\n// - inject\n// - methods\n// - data (deferred since it relies on `this` access)\n// - computed\n// - watch (deferred since it relies on `this` access)\nif(injectOptions){if(isArray(injectOptions)){for(let i=0;i<injectOptions.length;i++){const key=injectOptions[i];ctx[key]=inject(key);{checkDuplicateProperties(\"Inject\"/* INJECT */,key);}}}else{for(const key in injectOptions){const opt=injectOptions[key];if(isObject(opt)){ctx[key]=inject(opt.from||key,opt.default,true/* treat default function as factory */);}else{ctx[key]=inject(opt);}{checkDuplicateProperties(\"Inject\"/* INJECT */,key);}}}}if(methods){for(const key in methods){const methodHandler=methods[key];if(isFunction(methodHandler)){// In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\n// and those are read-only but reconfigurable, so it needs to be redefined here\n{Object.defineProperty(ctx,key,{value:methodHandler.bind(publicThis),configurable:true,enumerable:true,writable:true});}{checkDuplicateProperties(\"Methods\"/* METHODS */,key);}}else{warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. `+`Did you reference the function correctly?`);}}}if(!asMixin){if(deferredData.length){deferredData.forEach(dataFn=>resolveData(instance,dataFn,publicThis));}if(dataOptions){// @ts-ignore dataOptions is not fully type safe\nresolveData(instance,dataOptions,publicThis);}{const rawData=toRaw(instance.data);for(const key in rawData){checkDuplicateProperties(\"Data\"/* DATA */,key);// expose data on ctx during dev\nif(key[0]!=='$'&&key[0]!=='_'){Object.defineProperty(ctx,key,{configurable:true,enumerable:true,get:()=>rawData[key],set:NOOP});}}}}else if(dataOptions){deferredData.push(dataOptions);}if(computedOptions){for(const key in computedOptions){const opt=computedOptions[key];const get=isFunction(opt)?opt.bind(publicThis,publicThis):isFunction(opt.get)?opt.get.bind(publicThis,publicThis):NOOP;if(get===NOOP){warn(`Computed property \"${key}\" has no getter.`);}const set=!isFunction(opt)&&isFunction(opt.set)?opt.set.bind(publicThis):()=>{warn(`Write operation failed: computed property \"${key}\" is readonly.`);};const c=computed$1({get,set});Object.defineProperty(ctx,key,{enumerable:true,configurable:true,get:()=>c.value,set:v=>c.value=v});{checkDuplicateProperties(\"Computed\"/* COMPUTED */,key);}}}if(watchOptions){deferredWatch.push(watchOptions);}if(!asMixin&&deferredWatch.length){deferredWatch.forEach(watchOptions=>{for(const key in watchOptions){createWatcher(watchOptions[key],ctx,publicThis,key);}});}if(provideOptions){deferredProvide.push(provideOptions);}if(!asMixin&&deferredProvide.length){deferredProvide.forEach(provideOptions=>{const provides=isFunction(provideOptions)?provideOptions.call(publicThis):provideOptions;Reflect.ownKeys(provides).forEach(key=>{provide(key,provides[key]);});});}// asset options.\n// To reduce memory usage, only components with mixins or extends will have\n// resolved asset registry attached to instance.\nif(asMixin){if(components){extend(instance.components||(instance.components=extend({},instance.type.components)),components);}if(directives){extend(instance.directives||(instance.directives=extend({},instance.type.directives)),directives);}}// lifecycle options\nif(!asMixin){callSyncHook('created',\"c\"/* CREATED */,options,instance,globalMixins);}if(beforeMount){onBeforeMount(beforeMount.bind(publicThis));}if(mounted){onMounted(mounted.bind(publicThis));}if(beforeUpdate){onBeforeUpdate(beforeUpdate.bind(publicThis));}if(updated){onUpdated(updated.bind(publicThis));}if(activated){onActivated(activated.bind(publicThis));}if(deactivated){onDeactivated(deactivated.bind(publicThis));}if(errorCaptured){onErrorCaptured(errorCaptured.bind(publicThis));}if(renderTracked){onRenderTracked(renderTracked.bind(publicThis));}if(renderTriggered){onRenderTriggered(renderTriggered.bind(publicThis));}if(beforeDestroy){warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);}if(beforeUnmount){onBeforeUnmount(beforeUnmount.bind(publicThis));}if(destroyed){warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);}if(unmounted){onUnmounted(unmounted.bind(publicThis));}if(isArray(expose)){if(!asMixin){if(expose.length){const exposed=instance.exposed||(instance.exposed=proxyRefs({}));expose.forEach(key=>{exposed[key]=toRef(publicThis,key);});}else if(!instance.exposed){instance.exposed=EMPTY_OBJ;}}else{warn(`The \\`expose\\` option is ignored when used in mixins.`);}}}function callSyncHook(name,type,options,instance,globalMixins){for(let i=0;i<globalMixins.length;i++){callHookWithMixinAndExtends(name,type,globalMixins[i],instance);}callHookWithMixinAndExtends(name,type,options,instance);}function callHookWithMixinAndExtends(name,type,options,instance){const{extends:base,mixins}=options;const selfHook=options[name];if(base){callHookWithMixinAndExtends(name,type,base,instance);}if(mixins){for(let i=0;i<mixins.length;i++){callHookWithMixinAndExtends(name,type,mixins[i],instance);}}if(selfHook){callWithAsyncErrorHandling(selfHook.bind(instance.proxy),instance,type);}}function applyMixins(instance,mixins,deferredData,deferredWatch,deferredProvide){for(let i=0;i<mixins.length;i++){applyOptions(instance,mixins[i],deferredData,deferredWatch,deferredProvide,true);}}function resolveData(instance,dataFn,publicThis){if(!isFunction(dataFn)){warn(`The data option must be a function. `+`Plain object usage is no longer supported.`);}shouldCacheAccess=false;const data=dataFn.call(publicThis,publicThis);shouldCacheAccess=true;if(isPromise(data)){warn(`data() returned a Promise - note data() cannot be async; If you `+`intend to perform data fetching before component renders, use `+`async setup() + <Suspense>.`);}if(!isObject(data)){warn(`data() should return an object.`);}else if(instance.data===EMPTY_OBJ){instance.data=reactive(data);}else{// existing data: this is a mixin or extends.\nextend(instance.data,data);}}function createWatcher(raw,ctx,publicThis,key){const getter=key.includes('.')?createPathGetter(publicThis,key):()=>publicThis[key];if(isString(raw)){const handler=ctx[raw];if(isFunction(handler)){watch(getter,handler);}else{warn(`Invalid watch handler specified by key \"${raw}\"`,handler);}}else if(isFunction(raw)){watch(getter,raw.bind(publicThis));}else if(isObject(raw)){if(isArray(raw)){raw.forEach(r=>createWatcher(r,ctx,publicThis,key));}else{const handler=isFunction(raw.handler)?raw.handler.bind(publicThis):ctx[raw.handler];if(isFunction(handler)){watch(getter,handler,raw);}else{warn(`Invalid watch handler specified by key \"${raw.handler}\"`,handler);}}}else{warn(`Invalid watch option: \"${key}\"`,raw);}}function createPathGetter(ctx,path){const segments=path.split('.');return()=>{let cur=ctx;for(let i=0;i<segments.length&&cur;i++){cur=cur[segments[i]];}return cur;};}function resolveMergedOptions(instance){const raw=instance.type;const{__merged,mixins,extends:extendsOptions}=raw;if(__merged)return __merged;const globalMixins=instance.appContext.mixins;if(!globalMixins.length&&!mixins&&!extendsOptions)return raw;const options={};globalMixins.forEach(m=>mergeOptions(options,m,instance));mergeOptions(options,raw,instance);return raw.__merged=options;}function mergeOptions(to,from,instance){const strats=instance.appContext.config.optionMergeStrategies;const{mixins,extends:extendsOptions}=from;extendsOptions&&mergeOptions(to,extendsOptions,instance);mixins&&mixins.forEach(m=>mergeOptions(to,m,instance));for(const key in from){if(strats&&hasOwn(strats,key)){to[key]=strats[key](to[key],from[key],instance.proxy,key);}else{to[key]=from[key];}}}/**\n     * #2437 In Vue 3, functional components do not have a public instance proxy but\n     * they exist in the internal parent chain. For code that relies on traversing\n     * public $parent chains, skip functional ones and go to the parent instead.\n     */const getPublicInstance=i=>{if(!i)return null;if(isStatefulComponent(i))return i.exposed?i.exposed:i.proxy;return getPublicInstance(i.parent);};const publicPropertiesMap=extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>shallowReadonly(i.props),$attrs:i=>shallowReadonly(i.attrs),$slots:i=>shallowReadonly(i.slots),$refs:i=>shallowReadonly(i.refs),$parent:i=>getPublicInstance(i.parent),$root:i=>getPublicInstance(i.root),$emit:i=>i.emit,$options:i=>resolveMergedOptions(i),$forceUpdate:i=>()=>queueJob(i.update),$nextTick:i=>nextTick.bind(i.proxy),$watch:i=>instanceWatch.bind(i)});const PublicInstanceProxyHandlers={get({_:instance},key){const{ctx,setupState,data,props,accessCache,type,appContext}=instance;// let @vue/reactivity know it should never observe Vue public instances.\nif(key===\"__v_skip\"/* SKIP */){return true;}// for internal formatters to know that this is a Vue instance\nif(key==='__isVue'){return true;}// data / props / ctx\n// This getter gets called for every property access on the render context\n// during render and is a major hotspot. The most expensive part of this\n// is the multiple hasOwn() calls. It's much faster to do a simple property\n// access on a plain object, so we use an accessCache object (with null\n// prototype) to memoize what access type a key corresponds to.\nlet normalizedProps;if(key[0]!=='$'){const n=accessCache[key];if(n!==undefined){switch(n){case 0/* SETUP */:return setupState[key];case 1/* DATA */:return data[key];case 3/* CONTEXT */:return ctx[key];case 2/* PROPS */:return props[key];// default: just fallthrough\n}}else if(setupState!==EMPTY_OBJ&&hasOwn(setupState,key)){accessCache[key]=0/* SETUP */;return setupState[key];}else if(data!==EMPTY_OBJ&&hasOwn(data,key)){accessCache[key]=1/* DATA */;return data[key];}else if(// only cache other properties when instance has declared (thus stable)\n// props\n(normalizedProps=instance.propsOptions[0])&&hasOwn(normalizedProps,key)){accessCache[key]=2/* PROPS */;return props[key];}else if(ctx!==EMPTY_OBJ&&hasOwn(ctx,key)){accessCache[key]=3/* CONTEXT */;return ctx[key];}else if(shouldCacheAccess){accessCache[key]=4/* OTHER */;}}const publicGetter=publicPropertiesMap[key];let cssModule,globalProperties;// public $xxx properties\nif(publicGetter){if(key==='$attrs'){track(instance,\"get\"/* GET */,key);markAttrsAccessed();}return publicGetter(instance);}else if(// css module (injected by vue-loader)\n(cssModule=type.__cssModules)&&(cssModule=cssModule[key])){return cssModule;}else if(ctx!==EMPTY_OBJ&&hasOwn(ctx,key)){// user may set custom properties to `this` that start with `$`\naccessCache[key]=3/* CONTEXT */;return ctx[key];}else if(// global properties\nglobalProperties=appContext.config.globalProperties,hasOwn(globalProperties,key)){return globalProperties[key];}else if(currentRenderingInstance&&(!isString(key)||// #1091 avoid internal isRef/isVNode checks on component instance leading\n// to infinite warning loop\nkey.indexOf('__v')!==0)){if(data!==EMPTY_OBJ&&(key[0]==='$'||key[0]==='_')&&hasOwn(data,key)){warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved `+`character (\"$\" or \"_\") and is not proxied on the render context.`);}else if(instance===currentRenderingInstance){warn(`Property ${JSON.stringify(key)} was accessed during render `+`but is not defined on instance.`);}}},set({_:instance},key,value){const{data,setupState,ctx}=instance;if(setupState!==EMPTY_OBJ&&hasOwn(setupState,key)){setupState[key]=value;}else if(data!==EMPTY_OBJ&&hasOwn(data,key)){data[key]=value;}else if(hasOwn(instance.props,key)){warn(`Attempting to mutate prop \"${key}\". Props are readonly.`,instance);return false;}if(key[0]==='$'&&key.slice(1)in instance){warn(`Attempting to mutate public property \"${key}\". `+`Properties starting with $ are reserved and readonly.`,instance);return false;}else{if(key in instance.appContext.config.globalProperties){Object.defineProperty(ctx,key,{enumerable:true,configurable:true,value});}else{ctx[key]=value;}}return true;},has({_:{data,setupState,accessCache,ctx,appContext,propsOptions}},key){let normalizedProps;return accessCache[key]!==undefined||data!==EMPTY_OBJ&&hasOwn(data,key)||setupState!==EMPTY_OBJ&&hasOwn(setupState,key)||(normalizedProps=propsOptions[0])&&hasOwn(normalizedProps,key)||hasOwn(ctx,key)||hasOwn(publicPropertiesMap,key)||hasOwn(appContext.config.globalProperties,key);}};{PublicInstanceProxyHandlers.ownKeys=target=>{warn(`Avoid app logic that relies on enumerating keys on a component instance. `+`The keys will be empty in production mode to avoid performance overhead.`);return Reflect.ownKeys(target);};}const RuntimeCompiledPublicInstanceProxyHandlers=extend({},PublicInstanceProxyHandlers,{get(target,key){// fast path for unscopables when using `with` block\nif(key===Symbol.unscopables){return;}return PublicInstanceProxyHandlers.get(target,key,target);},has(_,key){const has=key[0]!=='_'&&!isGloballyWhitelisted(key);if(!has&&PublicInstanceProxyHandlers.has(_,key)){warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);}return has;}});// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\nfunction createRenderContext(instance){const target={};// expose internal instance for proxy handlers\nObject.defineProperty(target,`_`,{configurable:true,enumerable:false,get:()=>instance});// expose public properties\nObject.keys(publicPropertiesMap).forEach(key=>{Object.defineProperty(target,key,{configurable:true,enumerable:false,get:()=>publicPropertiesMap[key](instance),// intercepted by the proxy so no need for implementation,\n// but needed to prevent set errors\nset:NOOP});});// expose global properties\nconst{globalProperties}=instance.appContext.config;Object.keys(globalProperties).forEach(key=>{Object.defineProperty(target,key,{configurable:true,enumerable:false,get:()=>globalProperties[key],set:NOOP});});return target;}// dev only\nfunction exposePropsOnRenderContext(instance){const{ctx,propsOptions:[propsOptions]}=instance;if(propsOptions){Object.keys(propsOptions).forEach(key=>{Object.defineProperty(ctx,key,{enumerable:true,configurable:true,get:()=>instance.props[key],set:NOOP});});}}// dev only\nfunction exposeSetupStateOnRenderContext(instance){const{ctx,setupState}=instance;Object.keys(toRaw(setupState)).forEach(key=>{if(key[0]==='$'||key[0]==='_'){warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" `+`which are reserved prefixes for Vue internals.`);return;}Object.defineProperty(ctx,key,{enumerable:true,configurable:true,get:()=>setupState[key],set:NOOP});});}const emptyAppContext=createAppContext();let uid$2=0;function createComponentInstance(vnode,parent,suspense){const type=vnode.type;// inherit parent app context - or - if root, adopt from root vnode\nconst appContext=(parent?parent.appContext:vnode.appContext)||emptyAppContext;const instance={uid:uid$2++,vnode,type,parent,appContext,root:null,next:null,subTree:null,update:null,render:null,proxy:null,exposed:null,withProxy:null,effects:null,provides:parent?parent.provides:Object.create(appContext.provides),accessCache:null,renderCache:[],// local resovled assets\ncomponents:null,directives:null,// resolved props and emits options\npropsOptions:normalizePropsOptions(type,appContext),emitsOptions:normalizeEmitsOptions(type,appContext),// emit\nemit:null,emitted:null,// props default value\npropsDefaults:EMPTY_OBJ,// state\nctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,// suspense related\nsuspense,suspenseId:suspense?suspense.pendingId:0,asyncDep:null,asyncResolved:false,// lifecycle hooks\n// not using enums here because it results in computed properties\nisMounted:false,isUnmounted:false,isDeactivated:false,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null};{instance.ctx=createRenderContext(instance);}instance.root=parent?parent.root:instance;instance.emit=emit.bind(null,instance);return instance;}let currentInstance=null;const getCurrentInstance=()=>currentInstance||currentRenderingInstance;const setCurrentInstance=instance=>{currentInstance=instance;};const isBuiltInTag=/*#__PURE__*/makeMap('slot,component');function validateComponentName(name,config){const appIsNativeTag=config.isNativeTag||NO;if(isBuiltInTag(name)||appIsNativeTag(name)){warn('Do not use built-in or reserved HTML elements as component id: '+name);}}function isStatefulComponent(instance){return instance.vnode.shapeFlag&4/* STATEFUL_COMPONENT */;}let isInSSRComponentSetup=false;function setupComponent(instance,isSSR=false){isInSSRComponentSetup=isSSR;const{props,children}=instance.vnode;const isStateful=isStatefulComponent(instance);initProps(instance,props,isStateful,isSSR);initSlots(instance,children);const setupResult=isStateful?setupStatefulComponent(instance,isSSR):undefined;isInSSRComponentSetup=false;return setupResult;}function setupStatefulComponent(instance,isSSR){const Component=instance.type;{if(Component.name){validateComponentName(Component.name,instance.appContext.config);}if(Component.components){const names=Object.keys(Component.components);for(let i=0;i<names.length;i++){validateComponentName(names[i],instance.appContext.config);}}if(Component.directives){const names=Object.keys(Component.directives);for(let i=0;i<names.length;i++){validateDirectiveName(names[i]);}}}// 0. create render proxy property access cache\ninstance.accessCache=Object.create(null);// 1. create public instance / render proxy\n// also mark it raw so it's never observed\ninstance.proxy=new Proxy(instance.ctx,PublicInstanceProxyHandlers);{exposePropsOnRenderContext(instance);}// 2. call setup()\nconst{setup}=Component;if(setup){const setupContext=instance.setupContext=setup.length>1?createSetupContext(instance):null;currentInstance=instance;pauseTracking();const setupResult=callWithErrorHandling(setup,instance,0/* SETUP_FUNCTION */,[shallowReadonly(instance.props),setupContext]);resetTracking();currentInstance=null;if(isPromise(setupResult)){if(isSSR){// return the promise so server-renderer can wait on it\nreturn setupResult.then(resolvedResult=>{handleSetupResult(instance,resolvedResult,isSSR);}).catch(e=>{handleError(e,instance,0/* SETUP_FUNCTION */);});}else{// async setup returned Promise.\n// bail here and wait for re-entry.\ninstance.asyncDep=setupResult;}}else{handleSetupResult(instance,setupResult,isSSR);}}else{finishComponentSetup(instance,isSSR);}}function handleSetupResult(instance,setupResult,isSSR){if(isFunction(setupResult)){// setup returned an inline render function\n{instance.render=setupResult;}}else if(isObject(setupResult)){if(isVNode(setupResult)){warn(`setup() should not return VNodes directly - `+`return a render function instead.`);}// setup returned bindings.\n// assuming a render function compiled from template is present.\n{instance.devtoolsRawSetupState=setupResult;}instance.setupState=proxyRefs(setupResult);{exposeSetupStateOnRenderContext(instance);}}else if(setupResult!==undefined){warn(`setup() should return an object. Received: ${setupResult===null?'null':typeof setupResult}`);}finishComponentSetup(instance,isSSR);}let compile;// dev only\nconst isRuntimeOnly=()=>!compile;/**\n     * For runtime-dom to register the compiler.\n     * Note the exported method uses any to avoid d.ts relying on the compiler types.\n     */function registerRuntimeCompiler(_compile){compile=_compile;}function finishComponentSetup(instance,isSSR){const Component=instance.type;// template / render function normalization\nif(!instance.render){// could be set from setup()\nif(compile&&Component.template&&!Component.render){{startMeasure(instance,`compile`);}Component.render=compile(Component.template,{isCustomElement:instance.appContext.config.isCustomElement,delimiters:Component.delimiters});{endMeasure(instance,`compile`);}}instance.render=Component.render||NOOP;// for runtime-compiled render functions using `with` blocks, the render\n// proxy used needs a different `has` handler which is more performant and\n// also only allows a whitelist of globals to fallthrough.\nif(instance.render._rc){instance.withProxy=new Proxy(instance.ctx,RuntimeCompiledPublicInstanceProxyHandlers);}}// support for 2.x options\n{currentInstance=instance;pauseTracking();applyOptions(instance,Component);resetTracking();currentInstance=null;}// warn missing template/render\n// the runtime compilation of template in SSR is done by server-render\nif(!Component.render&&instance.render===NOOP&&!isSSR){/* istanbul ignore if */if(!compile&&Component.template){warn(`Component provided template option but `+`runtime compilation is not supported in this build of Vue.`+` Use \"vue.global.js\" instead.`/* should not happen */);}else{warn(`Component is missing template or render function.`);}}}const attrHandlers={get:(target,key)=>{{markAttrsAccessed();}return target[key];},set:()=>{warn(`setupContext.attrs is readonly.`);return false;},deleteProperty:()=>{warn(`setupContext.attrs is readonly.`);return false;}};function createSetupContext(instance){const expose=exposed=>{if(instance.exposed){warn(`expose() should be called only once per setup().`);}instance.exposed=proxyRefs(exposed);};{// We use getters in dev in case libs like test-utils overwrite instance\n// properties (overwrites should not be done in prod)\nreturn Object.freeze({get attrs(){return new Proxy(instance.attrs,attrHandlers);},get slots(){return shallowReadonly(instance.slots);},get emit(){return(event,...args)=>instance.emit(event,...args);},expose});}}// record effects created during a component's setup() so that they can be\n// stopped when the component unmounts\nfunction recordInstanceBoundEffect(effect,instance=currentInstance){if(instance){(instance.effects||(instance.effects=[])).push(effect);}}const classifyRE=/(?:^|[-_])(\\w)/g;const classify=str=>str.replace(classifyRE,c=>c.toUpperCase()).replace(/[-_]/g,'');function getComponentName(Component){return isFunction(Component)?Component.displayName||Component.name:Component.name;}/* istanbul ignore next */function formatComponentName(instance,Component,isRoot=false){let name=getComponentName(Component);if(!name&&Component.__file){const match=Component.__file.match(/([^/\\\\]+)\\.\\w+$/);if(match){name=match[1];}}if(!name&&instance&&instance.parent){// try to infer the name based on reverse resolution\nconst inferFromRegistry=registry=>{for(const key in registry){if(registry[key]===Component){return key;}}};name=inferFromRegistry(instance.components||instance.parent.type.components)||inferFromRegistry(instance.appContext.components);}return name?classify(name):isRoot?`App`:`Anonymous`;}function isClassComponent(value){return isFunction(value)&&'__vccOpts'in value;}function computed$1(getterOrOptions){const c=computed(getterOrOptions);recordInstanceBoundEffect(c.effect);return c;}// implementation\nfunction defineProps(){{warn(`defineProps() is a compiler-hint helper that is only usable inside `+`<script setup> of a single file component. Its arguments should be `+`compiled away and passing it at runtime has no effect.`);}return null;}// implementation\nfunction defineEmit(){{warn(`defineEmit() is a compiler-hint helper that is only usable inside `+`<script setup> of a single file component. Its arguments should be `+`compiled away and passing it at runtime has no effect.`);}return null;}function useContext(){const i=getCurrentInstance();if(!i){warn(`useContext() called without active instance.`);}return i.setupContext||(i.setupContext=createSetupContext(i));}// Actual implementation\nfunction h(type,propsOrChildren,children){const l=arguments.length;if(l===2){if(isObject(propsOrChildren)&&!isArray(propsOrChildren)){// single vnode without props\nif(isVNode(propsOrChildren)){return createVNode(type,null,[propsOrChildren]);}// props without children\nreturn createVNode(type,propsOrChildren);}else{// omit props\nreturn createVNode(type,null,propsOrChildren);}}else{if(l>3){children=Array.prototype.slice.call(arguments,2);}else if(l===3&&isVNode(children)){children=[children];}return createVNode(type,propsOrChildren,children);}}const ssrContextKey=Symbol(`ssrContext`);const useSSRContext=()=>{{warn(`useSSRContext() is not supported in the global build.`);}};function initCustomFormatter(){/* eslint-disable no-restricted-globals */if(typeof window==='undefined'){return;}const vueStyle={style:'color:#3ba776'};const numberStyle={style:'color:#0b1bc9'};const stringStyle={style:'color:#b62e24'};const keywordStyle={style:'color:#9d288c'};// custom formatter for Chrome\n// https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\nconst formatter={header(obj){// TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\nif(!isObject(obj)){return null;}if(obj.__isVue){return['div',vueStyle,`VueInstance`];}else if(isRef(obj)){return['div',{},['span',vueStyle,genRefFlag(obj)],'<',formatValue(obj.value),`>`];}else if(isReactive(obj)){return['div',{},['span',vueStyle,'Reactive'],'<',formatValue(obj),`>${isReadonly(obj)?` (readonly)`:``}`];}else if(isReadonly(obj)){return['div',{},['span',vueStyle,'Readonly'],'<',formatValue(obj),'>'];}return null;},hasBody(obj){return obj&&obj.__isVue;},body(obj){if(obj&&obj.__isVue){return['div',{},...formatInstance(obj.$)];}}};function formatInstance(instance){const blocks=[];if(instance.type.props&&instance.props){blocks.push(createInstanceBlock('props',toRaw(instance.props)));}if(instance.setupState!==EMPTY_OBJ){blocks.push(createInstanceBlock('setup',instance.setupState));}if(instance.data!==EMPTY_OBJ){blocks.push(createInstanceBlock('data',toRaw(instance.data)));}const computed=extractKeys(instance,'computed');if(computed){blocks.push(createInstanceBlock('computed',computed));}const injected=extractKeys(instance,'inject');if(injected){blocks.push(createInstanceBlock('injected',injected));}blocks.push(['div',{},['span',{style:keywordStyle.style+';opacity:0.66'},'$ (internal): '],['object',{object:instance}]]);return blocks;}function createInstanceBlock(type,target){target=extend({},target);if(!Object.keys(target).length){return['span',{}];}return['div',{style:'line-height:1.25em;margin-bottom:0.6em'},['div',{style:'color:#476582'},type],['div',{style:'padding-left:1.25em'},...Object.keys(target).map(key=>{return['div',{},['span',keywordStyle,key+': '],formatValue(target[key],false)];})]];}function formatValue(v,asRaw=true){if(typeof v==='number'){return['span',numberStyle,v];}else if(typeof v==='string'){return['span',stringStyle,JSON.stringify(v)];}else if(typeof v==='boolean'){return['span',keywordStyle,v];}else if(isObject(v)){return['object',{object:asRaw?toRaw(v):v}];}else{return['span',stringStyle,String(v)];}}function extractKeys(instance,type){const Comp=instance.type;if(isFunction(Comp)){return;}const extracted={};for(const key in instance.ctx){if(isKeyOfType(Comp,key,type)){extracted[key]=instance.ctx[key];}}return extracted;}function isKeyOfType(Comp,key,type){const opts=Comp[type];if(isArray(opts)&&opts.includes(key)||isObject(opts)&&key in opts){return true;}if(Comp.extends&&isKeyOfType(Comp.extends,key,type)){return true;}if(Comp.mixins&&Comp.mixins.some(m=>isKeyOfType(m,key,type))){return true;}}function genRefFlag(v){if(v._shallow){return`ShallowRef`;}if(v.effect){return`ComputedRef`;}return`Ref`;}if(window.devtoolsFormatters){window.devtoolsFormatters.push(formatter);}else{window.devtoolsFormatters=[formatter];}}/**\n     * Actual implementation\n     */function renderList(source,renderItem){let ret;if(isArray(source)||isString(source)){ret=new Array(source.length);for(let i=0,l=source.length;i<l;i++){ret[i]=renderItem(source[i],i);}}else if(typeof source==='number'){if(!Number.isInteger(source)){warn(`The v-for range expect an integer value but got ${source}.`);return[];}ret=new Array(source);for(let i=0;i<source;i++){ret[i]=renderItem(i+1,i);}}else if(isObject(source)){if(source[Symbol.iterator]){ret=Array.from(source,renderItem);}else{const keys=Object.keys(source);ret=new Array(keys.length);for(let i=0,l=keys.length;i<l;i++){const key=keys[i];ret[i]=renderItem(source[key],key,i);}}}else{ret=[];}return ret;}/**\n     * For prefixing keys in v-on=\"obj\" with \"on\"\n     * @private\n     */function toHandlers(obj){const ret={};if(!isObject(obj)){warn(`v-on with no argument expects an object value.`);return ret;}for(const key in obj){ret[toHandlerKey(key)]=obj[key];}return ret;}/**\n     * Compiler runtime helper for creating dynamic slots object\n     * @private\n     */function createSlots(slots,dynamicSlots){for(let i=0;i<dynamicSlots.length;i++){const slot=dynamicSlots[i];// array of dynamic slot generated by <template v-for=\"...\" #[...]>\nif(isArray(slot)){for(let j=0;j<slot.length;j++){slots[slot[j].name]=slot[j].fn;}}else if(slot){// conditional single slot generated by <template v-if=\"...\" #foo>\nslots[slot.name]=slot.fn;}}return slots;}// Core API ------------------------------------------------------------------\nconst version=\"3.0.10\";/**\n     * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\n     * @internal\n     */const ssrUtils=null;const svgNS='http://www.w3.org/2000/svg';const doc=typeof document!=='undefined'?document:null;let tempContainer;let tempSVGContainer;const nodeOps={insert:(child,parent,anchor)=>{parent.insertBefore(child,anchor||null);},remove:child=>{const parent=child.parentNode;if(parent){parent.removeChild(child);}},createElement:(tag,isSVG,is,props)=>{const el=isSVG?doc.createElementNS(svgNS,tag):doc.createElement(tag,is?{is}:undefined);if(tag==='select'&&props&&props.multiple!=null){el.setAttribute('multiple',props.multiple);}return el;},createText:text=>doc.createTextNode(text),createComment:text=>doc.createComment(text),setText:(node,text)=>{node.nodeValue=text;},setElementText:(el,text)=>{el.textContent=text;},parentNode:node=>node.parentNode,nextSibling:node=>node.nextSibling,querySelector:selector=>doc.querySelector(selector),setScopeId(el,id){el.setAttribute(id,'');},cloneNode(el){const cloned=el.cloneNode(true);// #3072\n// - in `patchDOMProp`, we store the actual value in the `el._value` property.\n// - normally, elements using `:value` bindings will not be hoisted, but if\n//   the bound value is a constant, e.g. `:value=\"true\"` - they do get\n//   hoisted.\n// - in production, hoisted nodes are cloned when subsequent inserts, but\n//   cloneNode() does not copy the custom property we attached.\n// - This may need to account for other custom DOM properties we attach to\n//   elements in addition to `_value` in the future.\nif(`_value`in el){cloned._value=el._value;}return cloned;},// __UNSAFE__\n// Reason: innerHTML.\n// Static content here can only come from compiled templates.\n// As long as the user only uses trusted templates, this is safe.\ninsertStaticContent(content,parent,anchor,isSVG){const temp=isSVG?tempSVGContainer||(tempSVGContainer=doc.createElementNS(svgNS,'svg')):tempContainer||(tempContainer=doc.createElement('div'));temp.innerHTML=content;const first=temp.firstChild;let node=first;let last=node;while(node){last=node;nodeOps.insert(node,parent,anchor);node=temp.firstChild;}return[first,last];}};// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\nfunction patchClass(el,value,isSVG){if(value==null){value='';}if(isSVG){el.setAttribute('class',value);}else{// directly setting className should be faster than setAttribute in theory\n// if this is an element during a transition, take the temporary transition\n// classes into account.\nconst transitionClasses=el._vtc;if(transitionClasses){value=(value?[value,...transitionClasses]:[...transitionClasses]).join(' ');}el.className=value;}}function patchStyle(el,prev,next){const style=el.style;if(!next){el.removeAttribute('style');}else if(isString(next)){if(prev!==next){const current=style.display;style.cssText=next;// indicates that the `display` of the element is controlled by `v-show`,\n// so we always keep the current `display` value regardless of the `style` value,\n// thus handing over control to `v-show`.\nif('_vod'in el){style.display=current;}}}else{for(const key in next){setStyle(style,key,next[key]);}if(prev&&!isString(prev)){for(const key in prev){if(next[key]==null){setStyle(style,key,'');}}}}}const importantRE=/\\s*!important$/;function setStyle(style,name,val){if(isArray(val)){val.forEach(v=>setStyle(style,name,v));}else{if(name.startsWith('--')){// custom property definition\nstyle.setProperty(name,val);}else{const prefixed=autoPrefix(style,name);if(importantRE.test(val)){// !important\nstyle.setProperty(hyphenate(prefixed),val.replace(importantRE,''),'important');}else{style[prefixed]=val;}}}}const prefixes=['Webkit','Moz','ms'];const prefixCache={};function autoPrefix(style,rawName){const cached=prefixCache[rawName];if(cached){return cached;}let name=camelize(rawName);if(name!=='filter'&&name in style){return prefixCache[rawName]=name;}name=capitalize(name);for(let i=0;i<prefixes.length;i++){const prefixed=prefixes[i]+name;if(prefixed in style){return prefixCache[rawName]=prefixed;}}return rawName;}const xlinkNS='http://www.w3.org/1999/xlink';function patchAttr(el,key,value,isSVG){if(isSVG&&key.startsWith('xlink:')){if(value==null){el.removeAttributeNS(xlinkNS,key.slice(6,key.length));}else{el.setAttributeNS(xlinkNS,key,value);}}else{// note we are only checking boolean attributes that don't have a\n// corresponding dom prop of the same name here.\nconst isBoolean=isSpecialBooleanAttr(key);if(value==null||isBoolean&&value===false){el.removeAttribute(key);}else{el.setAttribute(key,isBoolean?'':value);}}}// __UNSAFE__\n// functions. The user is responsible for using them with only trusted content.\nfunction patchDOMProp(el,key,value,// the following args are passed only due to potential innerHTML/textContent\n// overriding existing VNodes, in which case the old tree must be properly\n// unmounted.\nprevChildren,parentComponent,parentSuspense,unmountChildren){if(key==='innerHTML'||key==='textContent'){if(prevChildren){unmountChildren(prevChildren,parentComponent,parentSuspense);}el[key]=value==null?'':value;return;}if(key==='value'&&el.tagName!=='PROGRESS'){// store value as _value as well since\n// non-string values will be stringified.\nel._value=value;const newValue=value==null?'':value;if(el.value!==newValue){el.value=newValue;}return;}if(value===''||value==null){const type=typeof el[key];if(value===''&&type==='boolean'){// e.g. <select multiple> compiles to { multiple: '' }\nel[key]=true;return;}else if(value==null&&type==='string'){// e.g. <div :id=\"null\">\nel[key]='';el.removeAttribute(key);return;}else if(type==='number'){// e.g. <img :width=\"null\">\nel[key]=0;el.removeAttribute(key);return;}}// some properties perform value validation and throw\ntry{el[key]=value;}catch(e){{warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: `+`value ${value} is invalid.`,e);}}}// Async edge case fix requires storing an event listener's attach timestamp.\nlet _getNow=Date.now;let skipTimestampCheck=false;if(typeof window!=='undefined'){// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\nif(_getNow()>document.createEvent('Event').timeStamp){// if the low-res timestamp which is bigger than the event timestamp\n// (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n// and we need to use the hi-res version for event listeners as well.\n_getNow=()=>performance.now();}// #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\n// and does not fire microtasks in between event propagation, so safe to exclude.\nconst ffMatch=navigator.userAgent.match(/firefox\\/(\\d+)/i);skipTimestampCheck=!!(ffMatch&&Number(ffMatch[1])<=53);}// To avoid the overhead of repeatedly calling performance.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow=0;const p=Promise.resolve();const reset=()=>{cachedNow=0;};const getNow=()=>cachedNow||(p.then(reset),cachedNow=_getNow());function addEventListener(el,event,handler,options){el.addEventListener(event,handler,options);}function removeEventListener(el,event,handler,options){el.removeEventListener(event,handler,options);}function patchEvent(el,rawName,prevValue,nextValue,instance=null){// vei = vue event invokers\nconst invokers=el._vei||(el._vei={});const existingInvoker=invokers[rawName];if(nextValue&&existingInvoker){// patch\nexistingInvoker.value=nextValue;}else{const[name,options]=parseName(rawName);if(nextValue){// add\nconst invoker=invokers[rawName]=createInvoker(nextValue,instance);addEventListener(el,name,invoker,options);}else if(existingInvoker){// remove\nremoveEventListener(el,name,existingInvoker,options);invokers[rawName]=undefined;}}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(name){let options;if(optionsModifierRE.test(name)){options={};let m;while(m=name.match(optionsModifierRE)){name=name.slice(0,name.length-m[0].length);options[m[0].toLowerCase()]=true;}}return[hyphenate(name.slice(2)),options];}function createInvoker(initialValue,instance){const invoker=e=>{// async edge case #6566: inner click event triggers patch, event handler\n// attached to outer element during patch, and triggered again. This\n// happens because browsers fire microtask ticks between event propagation.\n// the solution is simple: we save the timestamp when a handler is attached,\n// and the handler would only fire if the event passed to it was fired\n// AFTER it was attached.\nconst timeStamp=e.timeStamp||_getNow();if(skipTimestampCheck||timeStamp>=invoker.attached-1){callWithAsyncErrorHandling(patchStopImmediatePropagation(e,invoker.value),instance,5/* NATIVE_EVENT_HANDLER */,[e]);}};invoker.value=initialValue;invoker.attached=getNow();return invoker;}function patchStopImmediatePropagation(e,value){if(isArray(value)){const originalStop=e.stopImmediatePropagation;e.stopImmediatePropagation=()=>{originalStop.call(e);e._stopped=true;};return value.map(fn=>e=>!e._stopped&&fn(e));}else{return value;}}const nativeOnRE=/^on[a-z]/;const forcePatchProp=(_,key)=>key==='value';const patchProp=(el,key,prevValue,nextValue,isSVG=false,prevChildren,parentComponent,parentSuspense,unmountChildren)=>{switch(key){// special\ncase'class':patchClass(el,nextValue,isSVG);break;case'style':patchStyle(el,prevValue,nextValue);break;default:if(isOn(key)){// ignore v-model listeners\nif(!isModelListener(key)){patchEvent(el,key,prevValue,nextValue,parentComponent);}}else if(shouldSetAsProp(el,key,nextValue,isSVG)){patchDOMProp(el,key,nextValue,prevChildren,parentComponent,parentSuspense,unmountChildren);}else{// special case for <input v-model type=\"checkbox\"> with\n// :true-value & :false-value\n// store value as dom properties since non-string values will be\n// stringified.\nif(key==='true-value'){el._trueValue=nextValue;}else if(key==='false-value'){el._falseValue=nextValue;}patchAttr(el,key,nextValue,isSVG);}break;}};function shouldSetAsProp(el,key,value,isSVG){if(isSVG){// most keys must be set as attribute on svg elements to work\n// ...except innerHTML\nif(key==='innerHTML'){return true;}// or native onclick with function values\nif(key in el&&nativeOnRE.test(key)&&isFunction(value)){return true;}return false;}// spellcheck and draggable are numerated attrs, however their\n// corresponding DOM properties are actually booleans - this leads to\n// setting it with a string \"false\" value leading it to be coerced to\n// `true`, so we need to always treat them as attributes.\n// Note that `contentEditable` doesn't have this problem: its DOM\n// property is also enumerated string values.\nif(key==='spellcheck'||key==='draggable'){return false;}// #1787, #2840 form property on form elements is readonly and must be set as\n// attribute.\nif(key==='form'){return false;}// #1526 <input list> must be set as attribute\nif(key==='list'&&el.tagName==='INPUT'){return false;}// #2766 <textarea type> must be set as attribute\nif(key==='type'&&el.tagName==='TEXTAREA'){return false;}// native onclick with string value, must be set as attribute\nif(nativeOnRE.test(key)&&isString(value)){return false;}return key in el;}function useCssModule(name='$style'){/* istanbul ignore else */{{warn(`useCssModule() is not supported in the global build.`);}return EMPTY_OBJ;}}/**\n     * Runtime helper for SFC's CSS variable injection feature.\n     * @private\n     */function useCssVars(getter){const instance=getCurrentInstance();/* istanbul ignore next */if(!instance){warn(`useCssVars is called without current active component instance.`);return;}const setVars=()=>setVarsOnVNode(instance.subTree,getter(instance.proxy));onMounted(()=>watchEffect(setVars,{flush:'post'}));onUpdated(setVars);}function setVarsOnVNode(vnode,vars){if(vnode.shapeFlag&128/* SUSPENSE */){const suspense=vnode.suspense;vnode=suspense.activeBranch;if(suspense.pendingBranch&&!suspense.isHydrating){suspense.effects.push(()=>{setVarsOnVNode(suspense.activeBranch,vars);});}}// drill down HOCs until it's a non-component vnode\nwhile(vnode.component){vnode=vnode.component.subTree;}if(vnode.shapeFlag&1/* ELEMENT */&&vnode.el){const style=vnode.el.style;for(const key in vars){style.setProperty(`--${key}`,vars[key]);}}else if(vnode.type===Fragment){vnode.children.forEach(c=>setVarsOnVNode(c,vars));}}const TRANSITION='transition';const ANIMATION='animation';// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nconst Transition=(props,{slots})=>h(BaseTransition,resolveTransitionProps(props),slots);Transition.displayName='Transition';const DOMTransitionPropsValidators={name:String,type:String,css:{type:Boolean,default:true},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};const TransitionPropsValidators=Transition.props=/*#__PURE__*/extend({},BaseTransition.props,DOMTransitionPropsValidators);function resolveTransitionProps(rawProps){let{name='v',type,css=true,duration,enterFromClass=`${name}-enter-from`,enterActiveClass=`${name}-enter-active`,enterToClass=`${name}-enter-to`,appearFromClass=enterFromClass,appearActiveClass=enterActiveClass,appearToClass=enterToClass,leaveFromClass=`${name}-leave-from`,leaveActiveClass=`${name}-leave-active`,leaveToClass=`${name}-leave-to`}=rawProps;const baseProps={};for(const key in rawProps){if(!(key in DOMTransitionPropsValidators)){baseProps[key]=rawProps[key];}}if(!css){return baseProps;}const durations=normalizeDuration(duration);const enterDuration=durations&&durations[0];const leaveDuration=durations&&durations[1];const{onBeforeEnter,onEnter,onEnterCancelled,onLeave,onLeaveCancelled,onBeforeAppear=onBeforeEnter,onAppear=onEnter,onAppearCancelled=onEnterCancelled}=baseProps;const finishEnter=(el,isAppear,done)=>{removeTransitionClass(el,isAppear?appearToClass:enterToClass);removeTransitionClass(el,isAppear?appearActiveClass:enterActiveClass);done&&done();};const finishLeave=(el,done)=>{removeTransitionClass(el,leaveToClass);removeTransitionClass(el,leaveActiveClass);done&&done();};const makeEnterHook=isAppear=>{return(el,done)=>{const hook=isAppear?onAppear:onEnter;const resolve=()=>finishEnter(el,isAppear,done);hook&&hook(el,resolve);nextFrame(()=>{removeTransitionClass(el,isAppear?appearFromClass:enterFromClass);addTransitionClass(el,isAppear?appearToClass:enterToClass);if(!(hook&&hook.length>1)){whenTransitionEnds(el,type,enterDuration,resolve);}});};};return extend(baseProps,{onBeforeEnter(el){onBeforeEnter&&onBeforeEnter(el);addTransitionClass(el,enterFromClass);addTransitionClass(el,enterActiveClass);},onBeforeAppear(el){onBeforeAppear&&onBeforeAppear(el);addTransitionClass(el,appearFromClass);addTransitionClass(el,appearActiveClass);},onEnter:makeEnterHook(false),onAppear:makeEnterHook(true),onLeave(el,done){const resolve=()=>finishLeave(el,done);addTransitionClass(el,leaveFromClass);// force reflow so *-leave-from classes immediately take effect (#2593)\nforceReflow();addTransitionClass(el,leaveActiveClass);nextFrame(()=>{removeTransitionClass(el,leaveFromClass);addTransitionClass(el,leaveToClass);if(!(onLeave&&onLeave.length>1)){whenTransitionEnds(el,type,leaveDuration,resolve);}});onLeave&&onLeave(el,resolve);},onEnterCancelled(el){finishEnter(el,false);onEnterCancelled&&onEnterCancelled(el);},onAppearCancelled(el){finishEnter(el,true);onAppearCancelled&&onAppearCancelled(el);},onLeaveCancelled(el){finishLeave(el);onLeaveCancelled&&onLeaveCancelled(el);}});}function normalizeDuration(duration){if(duration==null){return null;}else if(isObject(duration)){return[NumberOf(duration.enter),NumberOf(duration.leave)];}else{const n=NumberOf(duration);return[n,n];}}function NumberOf(val){const res=toNumber(val);validateDuration(res);return res;}function validateDuration(val){if(typeof val!=='number'){warn(`<transition> explicit duration is not a valid number - `+`got ${JSON.stringify(val)}.`);}else if(isNaN(val)){warn(`<transition> explicit duration is NaN - `+'the duration expression might be incorrect.');}}function addTransitionClass(el,cls){cls.split(/\\s+/).forEach(c=>c&&el.classList.add(c));(el._vtc||(el._vtc=new Set())).add(cls);}function removeTransitionClass(el,cls){cls.split(/\\s+/).forEach(c=>c&&el.classList.remove(c));const{_vtc}=el;if(_vtc){_vtc.delete(cls);if(!_vtc.size){el._vtc=undefined;}}}function nextFrame(cb){requestAnimationFrame(()=>{requestAnimationFrame(cb);});}let endId=0;function whenTransitionEnds(el,expectedType,explicitTimeout,resolve){const id=el._endId=++endId;const resolveIfNotStale=()=>{if(id===el._endId){resolve();}};if(explicitTimeout){return setTimeout(resolveIfNotStale,explicitTimeout);}const{type,timeout,propCount}=getTransitionInfo(el,expectedType);if(!type){return resolve();}const endEvent=type+'end';let ended=0;const end=()=>{el.removeEventListener(endEvent,onEnd);resolveIfNotStale();};const onEnd=e=>{if(e.target===el&&++ended>=propCount){end();}};setTimeout(()=>{if(ended<propCount){end();}},timeout+1);el.addEventListener(endEvent,onEnd);}function getTransitionInfo(el,expectedType){const styles=window.getComputedStyle(el);// JSDOM may return undefined for transition properties\nconst getStyleProperties=key=>(styles[key]||'').split(', ');const transitionDelays=getStyleProperties(TRANSITION+'Delay');const transitionDurations=getStyleProperties(TRANSITION+'Duration');const transitionTimeout=getTimeout(transitionDelays,transitionDurations);const animationDelays=getStyleProperties(ANIMATION+'Delay');const animationDurations=getStyleProperties(ANIMATION+'Duration');const animationTimeout=getTimeout(animationDelays,animationDurations);let type=null;let timeout=0;let propCount=0;/* istanbul ignore if */if(expectedType===TRANSITION){if(transitionTimeout>0){type=TRANSITION;timeout=transitionTimeout;propCount=transitionDurations.length;}}else if(expectedType===ANIMATION){if(animationTimeout>0){type=ANIMATION;timeout=animationTimeout;propCount=animationDurations.length;}}else{timeout=Math.max(transitionTimeout,animationTimeout);type=timeout>0?transitionTimeout>animationTimeout?TRANSITION:ANIMATION:null;propCount=type?type===TRANSITION?transitionDurations.length:animationDurations.length:0;}const hasTransform=type===TRANSITION&&/\\b(transform|all)(,|$)/.test(styles[TRANSITION+'Property']);return{type,timeout,propCount,hasTransform};}function getTimeout(delays,durations){while(delays.length<durations.length){delays=delays.concat(delays);}return Math.max(...durations.map((d,i)=>toMs(d)+toMs(delays[i])));}// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s){return Number(s.slice(0,-1).replace(',','.'))*1000;}// synchronously force layout to put elements into a certain state\nfunction forceReflow(){return document.body.offsetHeight;}const positionMap=new WeakMap();const newPositionMap=new WeakMap();const TransitionGroupImpl={name:'TransitionGroup',props:/*#__PURE__*/extend({},TransitionPropsValidators,{tag:String,moveClass:String}),setup(props,{slots}){const instance=getCurrentInstance();const state=useTransitionState();let prevChildren;let children;onUpdated(()=>{// children is guaranteed to exist after initial render\nif(!prevChildren.length){return;}const moveClass=props.moveClass||`${props.name||'v'}-move`;if(!hasCSSTransform(prevChildren[0].el,instance.vnode.el,moveClass)){return;}// we divide the work into three loops to avoid mixing DOM reads and writes\n// in each iteration - which helps prevent layout thrashing.\nprevChildren.forEach(callPendingCbs);prevChildren.forEach(recordPosition);const movedChildren=prevChildren.filter(applyTranslation);// force reflow to put everything in position\nforceReflow();movedChildren.forEach(c=>{const el=c.el;const style=el.style;addTransitionClass(el,moveClass);style.transform=style.webkitTransform=style.transitionDuration='';const cb=el._moveCb=e=>{if(e&&e.target!==el){return;}if(!e||/transform$/.test(e.propertyName)){el.removeEventListener('transitionend',cb);el._moveCb=null;removeTransitionClass(el,moveClass);}};el.addEventListener('transitionend',cb);});});return()=>{const rawProps=toRaw(props);const cssTransitionProps=resolveTransitionProps(rawProps);const tag=rawProps.tag||Fragment;prevChildren=children;children=slots.default?getTransitionRawChildren(slots.default()):[];for(let i=0;i<children.length;i++){const child=children[i];if(child.key!=null){setTransitionHooks(child,resolveTransitionHooks(child,cssTransitionProps,state,instance));}else{warn(`<TransitionGroup> children must be keyed.`);}}if(prevChildren){for(let i=0;i<prevChildren.length;i++){const child=prevChildren[i];setTransitionHooks(child,resolveTransitionHooks(child,cssTransitionProps,state,instance));positionMap.set(child,child.el.getBoundingClientRect());}}return createVNode(tag,null,children);};}};const TransitionGroup=TransitionGroupImpl;function callPendingCbs(c){const el=c.el;if(el._moveCb){el._moveCb();}if(el._enterCb){el._enterCb();}}function recordPosition(c){newPositionMap.set(c,c.el.getBoundingClientRect());}function applyTranslation(c){const oldPos=positionMap.get(c);const newPos=newPositionMap.get(c);const dx=oldPos.left-newPos.left;const dy=oldPos.top-newPos.top;if(dx||dy){const s=c.el.style;s.transform=s.webkitTransform=`translate(${dx}px,${dy}px)`;s.transitionDuration='0s';return c;}}function hasCSSTransform(el,root,moveClass){// Detect whether an element with the move class applied has\n// CSS transitions. Since the element may be inside an entering\n// transition at this very moment, we make a clone of it and remove\n// all other transition classes applied to ensure only the move class\n// is applied.\nconst clone=el.cloneNode();if(el._vtc){el._vtc.forEach(cls=>{cls.split(/\\s+/).forEach(c=>c&&clone.classList.remove(c));});}moveClass.split(/\\s+/).forEach(c=>c&&clone.classList.add(c));clone.style.display='none';const container=root.nodeType===1?root:root.parentNode;container.appendChild(clone);const{hasTransform}=getTransitionInfo(clone);container.removeChild(clone);return hasTransform;}const getModelAssigner=vnode=>{const fn=vnode.props['onUpdate:modelValue'];return isArray(fn)?value=>invokeArrayFns(fn,value):fn;};function onCompositionStart(e){e.target.composing=true;}function onCompositionEnd(e){const target=e.target;if(target.composing){target.composing=false;trigger$1(target,'input');}}function trigger$1(el,type){const e=document.createEvent('HTMLEvents');e.initEvent(type,true,true);el.dispatchEvent(e);}// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nconst vModelText={created(el,{modifiers:{lazy,trim,number}},vnode){el._assign=getModelAssigner(vnode);const castToNumber=number||el.type==='number';addEventListener(el,lazy?'change':'input',e=>{if(e.target.composing)return;let domValue=el.value;if(trim){domValue=domValue.trim();}else if(castToNumber){domValue=toNumber(domValue);}el._assign(domValue);});if(trim){addEventListener(el,'change',()=>{el.value=el.value.trim();});}if(!lazy){addEventListener(el,'compositionstart',onCompositionStart);addEventListener(el,'compositionend',onCompositionEnd);// Safari < 10.2 & UIWebView doesn't fire compositionend when\n// switching focus before confirming composition choice\n// this also fixes the issue where some browsers e.g. iOS Chrome\n// fires \"change\" instead of \"input\" on autocomplete.\naddEventListener(el,'change',onCompositionEnd);}},// set value on mounted so it's after min/max for type=\"range\"\nmounted(el,{value}){el.value=value==null?'':value;},beforeUpdate(el,{value,modifiers:{trim,number}},vnode){el._assign=getModelAssigner(vnode);// avoid clearing unresolved text. #2302\nif(el.composing)return;if(document.activeElement===el){if(trim&&el.value.trim()===value){return;}if((number||el.type==='number')&&toNumber(el.value)===value){return;}}const newValue=value==null?'':value;if(el.value!==newValue){el.value=newValue;}}};const vModelCheckbox={created(el,_,vnode){el._assign=getModelAssigner(vnode);addEventListener(el,'change',()=>{const modelValue=el._modelValue;const elementValue=getValue(el);const checked=el.checked;const assign=el._assign;if(isArray(modelValue)){const index=looseIndexOf(modelValue,elementValue);const found=index!==-1;if(checked&&!found){assign(modelValue.concat(elementValue));}else if(!checked&&found){const filtered=[...modelValue];filtered.splice(index,1);assign(filtered);}}else if(isSet(modelValue)){const cloned=new Set(modelValue);if(checked){cloned.add(elementValue);}else{cloned.delete(elementValue);}assign(cloned);}else{assign(getCheckboxValue(el,checked));}});},// set initial checked on mount to wait for true-value/false-value\nmounted:setChecked,beforeUpdate(el,binding,vnode){el._assign=getModelAssigner(vnode);setChecked(el,binding,vnode);}};function setChecked(el,{value,oldValue},vnode){el._modelValue=value;if(isArray(value)){el.checked=looseIndexOf(value,vnode.props.value)>-1;}else if(isSet(value)){el.checked=value.has(vnode.props.value);}else if(value!==oldValue){el.checked=looseEqual(value,getCheckboxValue(el,true));}}const vModelRadio={created(el,{value},vnode){el.checked=looseEqual(value,vnode.props.value);el._assign=getModelAssigner(vnode);addEventListener(el,'change',()=>{el._assign(getValue(el));});},beforeUpdate(el,{value,oldValue},vnode){el._assign=getModelAssigner(vnode);if(value!==oldValue){el.checked=looseEqual(value,vnode.props.value);}}};const vModelSelect={created(el,{value,modifiers:{number}},vnode){const isSetModel=isSet(value);addEventListener(el,'change',()=>{const selectedVal=Array.prototype.filter.call(el.options,o=>o.selected).map(o=>number?toNumber(getValue(o)):getValue(o));el._assign(el.multiple?isSetModel?new Set(selectedVal):selectedVal:selectedVal[0]);});el._assign=getModelAssigner(vnode);},// set value in mounted & updated because <select> relies on its children\n// <option>s.\nmounted(el,{value}){setSelected(el,value);},beforeUpdate(el,_binding,vnode){el._assign=getModelAssigner(vnode);},updated(el,{value}){setSelected(el,value);}};function setSelected(el,value){const isMultiple=el.multiple;if(isMultiple&&!isArray(value)&&!isSet(value)){warn(`<select multiple v-model> expects an Array or Set value for its binding, `+`but got ${Object.prototype.toString.call(value).slice(8,-1)}.`);return;}for(let i=0,l=el.options.length;i<l;i++){const option=el.options[i];const optionValue=getValue(option);if(isMultiple){if(isArray(value)){option.selected=looseIndexOf(value,optionValue)>-1;}else{option.selected=value.has(optionValue);}}else{if(looseEqual(getValue(option),value)){el.selectedIndex=i;return;}}}if(!isMultiple){el.selectedIndex=-1;}}// retrieve raw value set via :value bindings\nfunction getValue(el){return'_value'in el?el._value:el.value;}// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\nfunction getCheckboxValue(el,checked){const key=checked?'_trueValue':'_falseValue';return key in el?el[key]:checked;}const vModelDynamic={created(el,binding,vnode){callModelHook(el,binding,vnode,null,'created');},mounted(el,binding,vnode){callModelHook(el,binding,vnode,null,'mounted');},beforeUpdate(el,binding,vnode,prevVNode){callModelHook(el,binding,vnode,prevVNode,'beforeUpdate');},updated(el,binding,vnode,prevVNode){callModelHook(el,binding,vnode,prevVNode,'updated');}};function callModelHook(el,binding,vnode,prevVNode,hook){let modelToUse;switch(el.tagName){case'SELECT':modelToUse=vModelSelect;break;case'TEXTAREA':modelToUse=vModelText;break;default:switch(vnode.props&&vnode.props.type){case'checkbox':modelToUse=vModelCheckbox;break;case'radio':modelToUse=vModelRadio;break;default:modelToUse=vModelText;}}const fn=modelToUse[hook];fn&&fn(el,binding,vnode,prevVNode);}const systemModifiers=['ctrl','shift','alt','meta'];const modifierGuards={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>'button'in e&&e.button!==0,middle:e=>'button'in e&&e.button!==1,right:e=>'button'in e&&e.button!==2,exact:(e,modifiers)=>systemModifiers.some(m=>e[`${m}Key`]&&!modifiers.includes(m))};/**\n     * @private\n     */const withModifiers=(fn,modifiers)=>{return(event,...args)=>{for(let i=0;i<modifiers.length;i++){const guard=modifierGuards[modifiers[i]];if(guard&&guard(event,modifiers))return;}return fn(event,...args);};};// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames={esc:'escape',space:' ',up:'arrow-up',left:'arrow-left',right:'arrow-right',down:'arrow-down',delete:'backspace'};/**\n     * @private\n     */const withKeys=(fn,modifiers)=>{return event=>{if(!('key'in event))return;const eventKey=hyphenate(event.key);if(// None of the provided key modifiers match the current event key\n!modifiers.some(k=>k===eventKey||keyNames[k]===eventKey)){return;}return fn(event);};};const vShow={beforeMount(el,{value},{transition}){el._vod=el.style.display==='none'?'':el.style.display;if(transition&&value){transition.beforeEnter(el);}else{setDisplay(el,value);}},mounted(el,{value},{transition}){if(transition&&value){transition.enter(el);}},updated(el,{value,oldValue},{transition}){if(!value===!oldValue)return;if(transition){if(value){transition.beforeEnter(el);setDisplay(el,true);transition.enter(el);}else{transition.leave(el,()=>{setDisplay(el,false);});}}else{setDisplay(el,value);}},beforeUnmount(el,{value}){setDisplay(el,value);}};function setDisplay(el,value){el.style.display=value?el._vod:'none';}const rendererOptions=extend({patchProp,forcePatchProp},nodeOps);// lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\nlet renderer;let enabledHydration=false;function ensureRenderer(){return renderer||(renderer=createRenderer(rendererOptions));}function ensureHydrationRenderer(){renderer=enabledHydration?renderer:createHydrationRenderer(rendererOptions);enabledHydration=true;return renderer;}// use explicit type casts here to avoid import() calls in rolled-up d.ts\nconst render=(...args)=>{ensureRenderer().render(...args);};const hydrate=(...args)=>{ensureHydrationRenderer().hydrate(...args);};const createApp=(...args)=>{const app=ensureRenderer().createApp(...args);{injectNativeTagCheck(app);injectCustomElementCheck(app);}const{mount}=app;app.mount=containerOrSelector=>{const container=normalizeContainer(containerOrSelector);if(!container)return;const component=app._component;if(!isFunction(component)&&!component.render&&!component.template){component.template=container.innerHTML;}// clear content before mounting\ncontainer.innerHTML='';const proxy=mount(container,false,container instanceof SVGElement);if(container instanceof Element){container.removeAttribute('v-cloak');container.setAttribute('data-v-app','');}return proxy;};return app;};const createSSRApp=(...args)=>{const app=ensureHydrationRenderer().createApp(...args);{injectNativeTagCheck(app);injectCustomElementCheck(app);}const{mount}=app;app.mount=containerOrSelector=>{const container=normalizeContainer(containerOrSelector);if(container){return mount(container,true,container instanceof SVGElement);}};return app;};function injectNativeTagCheck(app){// Inject `isNativeTag`\n// this is used for component name validation (dev only)\nObject.defineProperty(app.config,'isNativeTag',{value:tag=>isHTMLTag(tag)||isSVGTag(tag),writable:false});}// dev only\nfunction injectCustomElementCheck(app){if(isRuntimeOnly()){const value=app.config.isCustomElement;Object.defineProperty(app.config,'isCustomElement',{get(){return value;},set(){warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.`+`If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead`+`- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);}});}}function normalizeContainer(container){if(isString(container)){const res=document.querySelector(container);if(!res){warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);}return res;}if(container instanceof window.ShadowRoot&&container.mode==='closed'){warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);}return container;}function initDev(){{{console.info(`You are running a development build of Vue.\\n`+`Make sure to use the production build (*.prod.js) when deploying for production.`);}initCustomFormatter();}}function defaultOnError(error){throw error;}function createCompilerError(code,loc,messages,additionalMessage){const msg=(messages||errorMessages)[code]+(additionalMessage||``);const error=new SyntaxError(String(msg));error.code=code;error.loc=loc;return error;}const errorMessages={// parse errors\n[0/* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]:'Illegal comment.',[1/* CDATA_IN_HTML_CONTENT */]:'CDATA section is allowed only in XML context.',[2/* DUPLICATE_ATTRIBUTE */]:'Duplicate attribute.',[3/* END_TAG_WITH_ATTRIBUTES */]:'End tag cannot have attributes.',[4/* END_TAG_WITH_TRAILING_SOLIDUS */]:\"Illegal '/' in tags.\",[5/* EOF_BEFORE_TAG_NAME */]:'Unexpected EOF in tag.',[6/* EOF_IN_CDATA */]:'Unexpected EOF in CDATA section.',[7/* EOF_IN_COMMENT */]:'Unexpected EOF in comment.',[8/* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]:'Unexpected EOF in script.',[9/* EOF_IN_TAG */]:'Unexpected EOF in tag.',[10/* INCORRECTLY_CLOSED_COMMENT */]:'Incorrectly closed comment.',[11/* INCORRECTLY_OPENED_COMMENT */]:'Incorrectly opened comment.',[12/* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]:\"Illegal tag name. Use '&lt;' to print '<'.\",[13/* MISSING_ATTRIBUTE_VALUE */]:'Attribute value was expected.',[14/* MISSING_END_TAG_NAME */]:'End tag name was expected.',[15/* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]:'Whitespace was expected.',[16/* NESTED_COMMENT */]:\"Unexpected '<!--' in comment.\",[17/* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]:'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',[18/* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]:'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',[19/* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]:\"Attribute name cannot start with '='.\",[21/* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]:\"'<?' is allowed only in XML context.\",[22/* UNEXPECTED_SOLIDUS_IN_TAG */]:\"Illegal '/' in tags.\",// Vue-specific parse errors\n[23/* X_INVALID_END_TAG */]:'Invalid end tag.',[24/* X_MISSING_END_TAG */]:'Element is missing end tag.',[25/* X_MISSING_INTERPOLATION_END */]:'Interpolation end sign was not found.',[26/* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]:'End bracket for dynamic directive argument was not found. '+'Note that dynamic directive argument cannot contain spaces.',// transform errors\n[27/* X_V_IF_NO_EXPRESSION */]:`v-if/v-else-if is missing expression.`,[28/* X_V_IF_SAME_KEY */]:`v-if/else branches must use unique keys.`,[29/* X_V_ELSE_NO_ADJACENT_IF */]:`v-else/v-else-if has no adjacent v-if.`,[30/* X_V_FOR_NO_EXPRESSION */]:`v-for is missing expression.`,[31/* X_V_FOR_MALFORMED_EXPRESSION */]:`v-for has invalid expression.`,[32/* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]:`<template v-for> key should be placed on the <template> tag.`,[33/* X_V_BIND_NO_EXPRESSION */]:`v-bind is missing expression.`,[34/* X_V_ON_NO_EXPRESSION */]:`v-on is missing expression.`,[35/* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]:`Unexpected custom directive on <slot> outlet.`,[36/* X_V_SLOT_MIXED_SLOT_USAGE */]:`Mixed v-slot usage on both the component and nested <template>.`+`When there are multiple named slots, all slots should use <template> `+`syntax to avoid scope ambiguity.`,[37/* X_V_SLOT_DUPLICATE_SLOT_NAMES */]:`Duplicate slot names found. `,[38/* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]:`Extraneous children found when component already has explicitly named `+`default slot. These children will be ignored.`,[39/* X_V_SLOT_MISPLACED */]:`v-slot can only be used on components or <template> tags.`,[40/* X_V_MODEL_NO_EXPRESSION */]:`v-model is missing expression.`,[41/* X_V_MODEL_MALFORMED_EXPRESSION */]:`v-model value must be a valid JavaScript member expression.`,[42/* X_V_MODEL_ON_SCOPE_VARIABLE */]:`v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,[43/* X_INVALID_EXPRESSION */]:`Error parsing JavaScript expression: `,[44/* X_KEEP_ALIVE_INVALID_CHILDREN */]:`<KeepAlive> expects exactly one child component.`,// generic errors\n[45/* X_PREFIX_ID_NOT_SUPPORTED */]:`\"prefixIdentifiers\" option is not supported in this build of compiler.`,[46/* X_MODULE_MODE_NOT_SUPPORTED */]:`ES module mode is not supported in this build of compiler.`,[47/* X_CACHE_HANDLER_NOT_SUPPORTED */]:`\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,[48/* X_SCOPE_ID_NOT_SUPPORTED */]:`\"scopeId\" option is only supported in module mode.`};const FRAGMENT=Symbol(`Fragment`);const TELEPORT=Symbol(`Teleport`);const SUSPENSE=Symbol(`Suspense`);const KEEP_ALIVE=Symbol(`KeepAlive`);const BASE_TRANSITION=Symbol(`BaseTransition`);const OPEN_BLOCK=Symbol(`openBlock`);const CREATE_BLOCK=Symbol(`createBlock`);const CREATE_VNODE=Symbol(`createVNode`);const CREATE_COMMENT=Symbol(`createCommentVNode`);const CREATE_TEXT=Symbol(`createTextVNode`);const CREATE_STATIC=Symbol(`createStaticVNode`);const RESOLVE_COMPONENT=Symbol(`resolveComponent`);const RESOLVE_DYNAMIC_COMPONENT=Symbol(`resolveDynamicComponent`);const RESOLVE_DIRECTIVE=Symbol(`resolveDirective`);const WITH_DIRECTIVES=Symbol(`withDirectives`);const RENDER_LIST=Symbol(`renderList`);const RENDER_SLOT=Symbol(`renderSlot`);const CREATE_SLOTS=Symbol(`createSlots`);const TO_DISPLAY_STRING=Symbol(`toDisplayString`);const MERGE_PROPS=Symbol(`mergeProps`);const TO_HANDLERS=Symbol(`toHandlers`);const CAMELIZE=Symbol(`camelize`);const CAPITALIZE=Symbol(`capitalize`);const TO_HANDLER_KEY=Symbol(`toHandlerKey`);const SET_BLOCK_TRACKING=Symbol(`setBlockTracking`);const PUSH_SCOPE_ID=Symbol(`pushScopeId`);const POP_SCOPE_ID=Symbol(`popScopeId`);const WITH_SCOPE_ID=Symbol(`withScopeId`);const WITH_CTX=Symbol(`withCtx`);const UNREF=Symbol(`unref`);const IS_REF=Symbol(`isRef`);// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\nconst helperNameMap={[FRAGMENT]:`Fragment`,[TELEPORT]:`Teleport`,[SUSPENSE]:`Suspense`,[KEEP_ALIVE]:`KeepAlive`,[BASE_TRANSITION]:`BaseTransition`,[OPEN_BLOCK]:`openBlock`,[CREATE_BLOCK]:`createBlock`,[CREATE_VNODE]:`createVNode`,[CREATE_COMMENT]:`createCommentVNode`,[CREATE_TEXT]:`createTextVNode`,[CREATE_STATIC]:`createStaticVNode`,[RESOLVE_COMPONENT]:`resolveComponent`,[RESOLVE_DYNAMIC_COMPONENT]:`resolveDynamicComponent`,[RESOLVE_DIRECTIVE]:`resolveDirective`,[WITH_DIRECTIVES]:`withDirectives`,[RENDER_LIST]:`renderList`,[RENDER_SLOT]:`renderSlot`,[CREATE_SLOTS]:`createSlots`,[TO_DISPLAY_STRING]:`toDisplayString`,[MERGE_PROPS]:`mergeProps`,[TO_HANDLERS]:`toHandlers`,[CAMELIZE]:`camelize`,[CAPITALIZE]:`capitalize`,[TO_HANDLER_KEY]:`toHandlerKey`,[SET_BLOCK_TRACKING]:`setBlockTracking`,[PUSH_SCOPE_ID]:`pushScopeId`,[POP_SCOPE_ID]:`popScopeId`,[WITH_SCOPE_ID]:`withScopeId`,[WITH_CTX]:`withCtx`,[UNREF]:`unref`,[IS_REF]:`isRef`};function registerRuntimeHelpers(helpers){Object.getOwnPropertySymbols(helpers).forEach(s=>{helperNameMap[s]=helpers[s];});}// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nconst locStub={source:'',start:{line:1,column:1,offset:0},end:{line:1,column:1,offset:0}};function createRoot(children,loc=locStub){return{type:0/* ROOT */,children,helpers:[],components:[],directives:[],hoists:[],imports:[],cached:0,temps:0,codegenNode:undefined,loc};}function createVNodeCall(context,tag,props,children,patchFlag,dynamicProps,directives,isBlock=false,disableTracking=false,loc=locStub){if(context){if(isBlock){context.helper(OPEN_BLOCK);context.helper(CREATE_BLOCK);}else{context.helper(CREATE_VNODE);}if(directives){context.helper(WITH_DIRECTIVES);}}return{type:13/* VNODE_CALL */,tag,props,children,patchFlag,dynamicProps,directives,isBlock,disableTracking,loc};}function createArrayExpression(elements,loc=locStub){return{type:17/* JS_ARRAY_EXPRESSION */,loc,elements};}function createObjectExpression(properties,loc=locStub){return{type:15/* JS_OBJECT_EXPRESSION */,loc,properties};}function createObjectProperty(key,value){return{type:16/* JS_PROPERTY */,loc:locStub,key:isString(key)?createSimpleExpression(key,true):key,value};}function createSimpleExpression(content,isStatic,loc=locStub,constType=0/* NOT_CONSTANT */){return{type:4/* SIMPLE_EXPRESSION */,loc,content,isStatic,constType:isStatic?3/* CAN_STRINGIFY */:constType};}function createCompoundExpression(children,loc=locStub){return{type:8/* COMPOUND_EXPRESSION */,loc,children};}function createCallExpression(callee,args=[],loc=locStub){return{type:14/* JS_CALL_EXPRESSION */,loc,callee,arguments:args};}function createFunctionExpression(params,returns=undefined,newline=false,isSlot=false,loc=locStub){return{type:18/* JS_FUNCTION_EXPRESSION */,params,returns,newline,isSlot,loc};}function createConditionalExpression(test,consequent,alternate,newline=true){return{type:19/* JS_CONDITIONAL_EXPRESSION */,test,consequent,alternate,newline,loc:locStub};}function createCacheExpression(index,value,isVNode=false){return{type:20/* JS_CACHE_EXPRESSION */,index,value,isVNode,loc:locStub};}const isStaticExp=p=>p.type===4/* SIMPLE_EXPRESSION */&&p.isStatic;const isBuiltInType=(tag,expected)=>tag===expected||tag===hyphenate(expected);function isCoreComponent(tag){if(isBuiltInType(tag,'Teleport')){return TELEPORT;}else if(isBuiltInType(tag,'Suspense')){return SUSPENSE;}else if(isBuiltInType(tag,'KeepAlive')){return KEEP_ALIVE;}else if(isBuiltInType(tag,'BaseTransition')){return BASE_TRANSITION;}}const nonIdentifierRE=/^\\d|[^\\$\\w]/;const isSimpleIdentifier=name=>!nonIdentifierRE.test(name);const memberExpRE=/^[A-Za-z_$\\xA0-\\uFFFF][\\w$\\xA0-\\uFFFF]*(?:\\s*\\.\\s*[A-Za-z_$\\xA0-\\uFFFF][\\w$\\xA0-\\uFFFF]*|\\[[^\\]]+\\])*$/;const isMemberExpression=path=>{if(!path)return false;return memberExpRE.test(path.trim());};function getInnerRange(loc,offset,length){const source=loc.source.substr(offset,length);const newLoc={source,start:advancePositionWithClone(loc.start,loc.source,offset),end:loc.end};if(length!=null){newLoc.end=advancePositionWithClone(loc.start,loc.source,offset+length);}return newLoc;}function advancePositionWithClone(pos,source,numberOfCharacters=source.length){return advancePositionWithMutation(extend({},pos),source,numberOfCharacters);}// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos,source,numberOfCharacters=source.length){let linesCount=0;let lastNewLinePos=-1;for(let i=0;i<numberOfCharacters;i++){if(source.charCodeAt(i)===10/* newline char code */){linesCount++;lastNewLinePos=i;}}pos.offset+=numberOfCharacters;pos.line+=linesCount;pos.column=lastNewLinePos===-1?pos.column+numberOfCharacters:numberOfCharacters-lastNewLinePos;return pos;}function assert(condition,msg){/* istanbul ignore if */if(!condition){throw new Error(msg||`unexpected compiler condition`);}}function findDir(node,name,allowEmpty=false){for(let i=0;i<node.props.length;i++){const p=node.props[i];if(p.type===7/* DIRECTIVE */&&(allowEmpty||p.exp)&&(isString(name)?p.name===name:name.test(p.name))){return p;}}}function findProp(node,name,dynamicOnly=false,allowEmpty=false){for(let i=0;i<node.props.length;i++){const p=node.props[i];if(p.type===6/* ATTRIBUTE */){if(dynamicOnly)continue;if(p.name===name&&(p.value||allowEmpty)){return p;}}else if(p.name==='bind'&&(p.exp||allowEmpty)&&isBindKey(p.arg,name)){return p;}}}function isBindKey(arg,name){return!!(arg&&isStaticExp(arg)&&arg.content===name);}function hasDynamicKeyVBind(node){return node.props.some(p=>p.type===7/* DIRECTIVE */&&p.name==='bind'&&(!p.arg||// v-bind=\"obj\"\np.arg.type!==4/* SIMPLE_EXPRESSION */||// v-bind:[_ctx.foo]\n!p.arg.isStatic)// v-bind:[foo]\n);}function isText(node){return node.type===5/* INTERPOLATION */||node.type===2/* TEXT */;}function isVSlot(p){return p.type===7/* DIRECTIVE */&&p.name==='slot';}function isTemplateNode(node){return node.type===1/* ELEMENT */&&node.tagType===3/* TEMPLATE */;}function isSlotOutlet(node){return node.type===1/* ELEMENT */&&node.tagType===2/* SLOT */;}function injectProp(node,prop,context){let propsWithInjection;const props=node.type===13/* VNODE_CALL */?node.props:node.arguments[2];if(props==null||isString(props)){propsWithInjection=createObjectExpression([prop]);}else if(props.type===14/* JS_CALL_EXPRESSION */){// merged props... add ours\n// only inject key to object literal if it's the first argument so that\n// if doesn't override user provided keys\nconst first=props.arguments[0];if(!isString(first)&&first.type===15/* JS_OBJECT_EXPRESSION */){first.properties.unshift(prop);}else{if(props.callee===TO_HANDLERS){// #2366\npropsWithInjection=createCallExpression(context.helper(MERGE_PROPS),[createObjectExpression([prop]),props]);}else{props.arguments.unshift(createObjectExpression([prop]));}}!propsWithInjection&&(propsWithInjection=props);}else if(props.type===15/* JS_OBJECT_EXPRESSION */){let alreadyExists=false;// check existing key to avoid overriding user provided keys\nif(prop.key.type===4/* SIMPLE_EXPRESSION */){const propKeyName=prop.key.content;alreadyExists=props.properties.some(p=>p.key.type===4/* SIMPLE_EXPRESSION */&&p.key.content===propKeyName);}if(!alreadyExists){props.properties.unshift(prop);}propsWithInjection=props;}else{// single v-bind with expression, return a merged replacement\npropsWithInjection=createCallExpression(context.helper(MERGE_PROPS),[createObjectExpression([prop]),props]);}if(node.type===13/* VNODE_CALL */){node.props=propsWithInjection;}else{node.arguments[2]=propsWithInjection;}}function toValidAssetId(name,type){return`_${type}_${name.replace(/[^\\w]/g,'_')}`;}// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE=/&(gt|lt|amp|apos|quot);/g;const decodeMap={gt:'>',lt:'<',amp:'&',apos:\"'\",quot:'\"'};const defaultParserOptions={delimiters:[`{{`,`}}`],getNamespace:()=>0/* HTML */,getTextMode:()=>0/* DATA */,isVoidTag:NO,isPreTag:NO,isCustomElement:NO,decodeEntities:rawText=>rawText.replace(decodeRE,(_,p1)=>decodeMap[p1]),onError:defaultOnError,comments:false};function baseParse(content,options={}){const context=createParserContext(content,options);const start=getCursor(context);return createRoot(parseChildren(context,0/* DATA */,[]),getSelection(context,start));}function createParserContext(content,rawOptions){const options=extend({},defaultParserOptions);for(const key in rawOptions){// @ts-ignore\noptions[key]=rawOptions[key]||defaultParserOptions[key];}return{options,column:1,line:1,offset:0,originalSource:content,source:content,inPre:false,inVPre:false};}function parseChildren(context,mode,ancestors){const parent=last(ancestors);const ns=parent?parent.ns:0/* HTML */;const nodes=[];while(!isEnd(context,mode,ancestors)){const s=context.source;let node=undefined;if(mode===0/* DATA */||mode===1/* RCDATA */){if(!context.inVPre&&startsWith(s,context.options.delimiters[0])){// '{{'\nnode=parseInterpolation(context,mode);}else if(mode===0/* DATA */&&s[0]==='<'){// https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\nif(s.length===1){emitError(context,5/* EOF_BEFORE_TAG_NAME */,1);}else if(s[1]==='!'){// https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\nif(startsWith(s,'<!--')){node=parseComment(context);}else if(startsWith(s,'<!DOCTYPE')){// Ignore DOCTYPE by a limitation.\nnode=parseBogusComment(context);}else if(startsWith(s,'<![CDATA[')){if(ns!==0/* HTML */){node=parseCDATA(context,ancestors);}else{emitError(context,1/* CDATA_IN_HTML_CONTENT */);node=parseBogusComment(context);}}else{emitError(context,11/* INCORRECTLY_OPENED_COMMENT */);node=parseBogusComment(context);}}else if(s[1]==='/'){// https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\nif(s.length===2){emitError(context,5/* EOF_BEFORE_TAG_NAME */,2);}else if(s[2]==='>'){emitError(context,14/* MISSING_END_TAG_NAME */,2);advanceBy(context,3);continue;}else if(/[a-z]/i.test(s[2])){emitError(context,23/* X_INVALID_END_TAG */);parseTag(context,1/* End */,parent);continue;}else{emitError(context,12/* INVALID_FIRST_CHARACTER_OF_TAG_NAME */,2);node=parseBogusComment(context);}}else if(/[a-z]/i.test(s[1])){node=parseElement(context,ancestors);}else if(s[1]==='?'){emitError(context,21/* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */,1);node=parseBogusComment(context);}else{emitError(context,12/* INVALID_FIRST_CHARACTER_OF_TAG_NAME */,1);}}}if(!node){node=parseText(context,mode);}if(isArray(node)){for(let i=0;i<node.length;i++){pushNode(nodes,node[i]);}}else{pushNode(nodes,node);}}// Whitespace management for more efficient output\n// (same as v2 whitespace: 'condense')\nlet removedWhitespace=false;if(mode!==2/* RAWTEXT */&&mode!==1/* RCDATA */){for(let i=0;i<nodes.length;i++){const node=nodes[i];if(!context.inPre&&node.type===2/* TEXT */){if(!/[^\\t\\r\\n\\f ]/.test(node.content)){const prev=nodes[i-1];const next=nodes[i+1];// If:\n// - the whitespace is the first or last node, or:\n// - the whitespace is adjacent to a comment, or:\n// - the whitespace is between two elements AND contains newline\n// Then the whitespace is ignored.\nif(!prev||!next||prev.type===3/* COMMENT */||next.type===3/* COMMENT */||prev.type===1/* ELEMENT */&&next.type===1/* ELEMENT */&&/[\\r\\n]/.test(node.content)){removedWhitespace=true;nodes[i]=null;}else{// Otherwise, condensed consecutive whitespace inside the text\n// down to a single space\nnode.content=' ';}}else{node.content=node.content.replace(/[\\t\\r\\n\\f ]+/g,' ');}}}if(context.inPre&&parent&&context.options.isPreTag(parent.tag)){// remove leading newline per html spec\n// https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\nconst first=nodes[0];if(first&&first.type===2/* TEXT */){first.content=first.content.replace(/^\\r?\\n/,'');}}}return removedWhitespace?nodes.filter(Boolean):nodes;}function pushNode(nodes,node){if(node.type===2/* TEXT */){const prev=last(nodes);// Merge if both this and the previous node are text and those are\n// consecutive. This happens for cases like \"a < b\".\nif(prev&&prev.type===2/* TEXT */&&prev.loc.end.offset===node.loc.start.offset){prev.content+=node.content;prev.loc.end=node.loc.end;prev.loc.source+=node.loc.source;return;}}nodes.push(node);}function parseCDATA(context,ancestors){advanceBy(context,9);const nodes=parseChildren(context,3/* CDATA */,ancestors);if(context.source.length===0){emitError(context,6/* EOF_IN_CDATA */);}else{advanceBy(context,3);}return nodes;}function parseComment(context){const start=getCursor(context);let content;// Regular comment.\nconst match=/--(\\!)?>/.exec(context.source);if(!match){content=context.source.slice(4);advanceBy(context,context.source.length);emitError(context,7/* EOF_IN_COMMENT */);}else{if(match.index<=3){emitError(context,0/* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);}if(match[1]){emitError(context,10/* INCORRECTLY_CLOSED_COMMENT */);}content=context.source.slice(4,match.index);// Advancing with reporting nested comments.\nconst s=context.source.slice(0,match.index);let prevIndex=1,nestedIndex=0;while((nestedIndex=s.indexOf('<!--',prevIndex))!==-1){advanceBy(context,nestedIndex-prevIndex+1);if(nestedIndex+4<s.length){emitError(context,16/* NESTED_COMMENT */);}prevIndex=nestedIndex+1;}advanceBy(context,match.index+match[0].length-prevIndex+1);}return{type:3/* COMMENT */,content,loc:getSelection(context,start)};}function parseBogusComment(context){const start=getCursor(context);const contentStart=context.source[1]==='?'?1:2;let content;const closeIndex=context.source.indexOf('>');if(closeIndex===-1){content=context.source.slice(contentStart);advanceBy(context,context.source.length);}else{content=context.source.slice(contentStart,closeIndex);advanceBy(context,closeIndex+1);}return{type:3/* COMMENT */,content,loc:getSelection(context,start)};}function parseElement(context,ancestors){// Start tag.\nconst wasInPre=context.inPre;const wasInVPre=context.inVPre;const parent=last(ancestors);const element=parseTag(context,0/* Start */,parent);const isPreBoundary=context.inPre&&!wasInPre;const isVPreBoundary=context.inVPre&&!wasInVPre;if(element.isSelfClosing||context.options.isVoidTag(element.tag)){return element;}// Children.\nancestors.push(element);const mode=context.options.getTextMode(element,parent);const children=parseChildren(context,mode,ancestors);ancestors.pop();element.children=children;// End tag.\nif(startsWithEndTagOpen(context.source,element.tag)){parseTag(context,1/* End */,parent);}else{emitError(context,24/* X_MISSING_END_TAG */,0,element.loc.start);if(context.source.length===0&&element.tag.toLowerCase()==='script'){const first=children[0];if(first&&startsWith(first.loc.source,'<!--')){emitError(context,8/* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);}}}element.loc=getSelection(context,element.loc.start);if(isPreBoundary){context.inPre=false;}if(isVPreBoundary){context.inVPre=false;}return element;}const isSpecialTemplateDirective=/*#__PURE__*/makeMap(`if,else,else-if,for,slot`);/**\n     * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\n     */function parseTag(context,type,parent){// Tag open.\nconst start=getCursor(context);const match=/^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);const tag=match[1];const ns=context.options.getNamespace(tag,parent);advanceBy(context,match[0].length);advanceSpaces(context);// save current state in case we need to re-parse attributes with v-pre\nconst cursor=getCursor(context);const currentSource=context.source;// Attributes.\nlet props=parseAttributes(context,type);// check <pre> tag\nif(context.options.isPreTag(tag)){context.inPre=true;}// check v-pre\nif(!context.inVPre&&props.some(p=>p.type===7/* DIRECTIVE */&&p.name==='pre')){context.inVPre=true;// reset context\nextend(context,cursor);context.source=currentSource;// re-parse attrs and filter out v-pre itself\nprops=parseAttributes(context,type).filter(p=>p.name!=='v-pre');}// Tag close.\nlet isSelfClosing=false;if(context.source.length===0){emitError(context,9/* EOF_IN_TAG */);}else{isSelfClosing=startsWith(context.source,'/>');if(type===1/* End */&&isSelfClosing){emitError(context,4/* END_TAG_WITH_TRAILING_SOLIDUS */);}advanceBy(context,isSelfClosing?2:1);}let tagType=0/* ELEMENT */;const options=context.options;if(!context.inVPre&&!options.isCustomElement(tag)){const hasVIs=props.some(p=>p.type===7/* DIRECTIVE */&&p.name==='is');if(options.isNativeTag&&!hasVIs){if(!options.isNativeTag(tag))tagType=1/* COMPONENT */;}else if(hasVIs||isCoreComponent(tag)||options.isBuiltInComponent&&options.isBuiltInComponent(tag)||/^[A-Z]/.test(tag)||tag==='component'){tagType=1/* COMPONENT */;}if(tag==='slot'){tagType=2/* SLOT */;}else if(tag==='template'&&props.some(p=>{return p.type===7/* DIRECTIVE */&&isSpecialTemplateDirective(p.name);})){tagType=3/* TEMPLATE */;}}return{type:1/* ELEMENT */,ns,tag,tagType,props,isSelfClosing,children:[],loc:getSelection(context,start),codegenNode:undefined// to be created during transform phase\n};}function parseAttributes(context,type){const props=[];const attributeNames=new Set();while(context.source.length>0&&!startsWith(context.source,'>')&&!startsWith(context.source,'/>')){if(startsWith(context.source,'/')){emitError(context,22/* UNEXPECTED_SOLIDUS_IN_TAG */);advanceBy(context,1);advanceSpaces(context);continue;}if(type===1/* End */){emitError(context,3/* END_TAG_WITH_ATTRIBUTES */);}const attr=parseAttribute(context,attributeNames);if(type===0/* Start */){props.push(attr);}if(/^[^\\t\\r\\n\\f />]/.test(context.source)){emitError(context,15/* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);}advanceSpaces(context);}return props;}function parseAttribute(context,nameSet){// Name.\nconst start=getCursor(context);const match=/^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);const name=match[0];if(nameSet.has(name)){emitError(context,2/* DUPLICATE_ATTRIBUTE */);}nameSet.add(name);if(name[0]==='='){emitError(context,19/* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);}{const pattern=/[\"'<]/g;let m;while(m=pattern.exec(name)){emitError(context,17/* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */,m.index);}}advanceBy(context,name.length);// Value\nlet value=undefined;if(/^[\\t\\r\\n\\f ]*=/.test(context.source)){advanceSpaces(context);advanceBy(context,1);advanceSpaces(context);value=parseAttributeValue(context);if(!value){emitError(context,13/* MISSING_ATTRIBUTE_VALUE */);}}const loc=getSelection(context,start);if(!context.inVPre&&/^(v-|:|@|#)/.test(name)){const match=/(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);const dirName=match[1]||(startsWith(name,':')?'bind':startsWith(name,'@')?'on':'slot');let arg;if(match[2]){const isSlot=dirName==='slot';const startOffset=name.lastIndexOf(match[2]);const loc=getSelection(context,getNewPosition(context,start,startOffset),getNewPosition(context,start,startOffset+match[2].length+(isSlot&&match[3]||'').length));let content=match[2];let isStatic=true;if(content.startsWith('[')){isStatic=false;if(!content.endsWith(']')){emitError(context,26/* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);}content=content.substr(1,content.length-2);}else if(isSlot){// #1241 special case for v-slot: vuetify relies extensively on slot\n// names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n// supports such usage so we are keeping it consistent with 2.x.\ncontent+=match[3]||'';}arg={type:4/* SIMPLE_EXPRESSION */,content,isStatic,constType:isStatic?3/* CAN_STRINGIFY */:0/* NOT_CONSTANT */,loc};}if(value&&value.isQuoted){const valueLoc=value.loc;valueLoc.start.offset++;valueLoc.start.column++;valueLoc.end=advancePositionWithClone(valueLoc.start,value.content);valueLoc.source=valueLoc.source.slice(1,-1);}return{type:7/* DIRECTIVE */,name:dirName,exp:value&&{type:4/* SIMPLE_EXPRESSION */,content:value.content,isStatic:false,// Treat as non-constant by default. This can be potentially set to\n// other values by `transformExpression` to make it eligible for hoisting.\nconstType:0/* NOT_CONSTANT */,loc:value.loc},arg,modifiers:match[3]?match[3].substr(1).split('.'):[],loc};}return{type:6/* ATTRIBUTE */,name,value:value&&{type:2/* TEXT */,content:value.content,loc:value.loc},loc};}function parseAttributeValue(context){const start=getCursor(context);let content;const quote=context.source[0];const isQuoted=quote===`\"`||quote===`'`;if(isQuoted){// Quoted value.\nadvanceBy(context,1);const endIndex=context.source.indexOf(quote);if(endIndex===-1){content=parseTextData(context,context.source.length,4/* ATTRIBUTE_VALUE */);}else{content=parseTextData(context,endIndex,4/* ATTRIBUTE_VALUE */);advanceBy(context,1);}}else{// Unquoted\nconst match=/^[^\\t\\r\\n\\f >]+/.exec(context.source);if(!match){return undefined;}const unexpectedChars=/[\"'<=`]/g;let m;while(m=unexpectedChars.exec(match[0])){emitError(context,18/* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */,m.index);}content=parseTextData(context,match[0].length,4/* ATTRIBUTE_VALUE */);}return{content,isQuoted,loc:getSelection(context,start)};}function parseInterpolation(context,mode){const[open,close]=context.options.delimiters;const closeIndex=context.source.indexOf(close,open.length);if(closeIndex===-1){emitError(context,25/* X_MISSING_INTERPOLATION_END */);return undefined;}const start=getCursor(context);advanceBy(context,open.length);const innerStart=getCursor(context);const innerEnd=getCursor(context);const rawContentLength=closeIndex-open.length;const rawContent=context.source.slice(0,rawContentLength);const preTrimContent=parseTextData(context,rawContentLength,mode);const content=preTrimContent.trim();const startOffset=preTrimContent.indexOf(content);if(startOffset>0){advancePositionWithMutation(innerStart,rawContent,startOffset);}const endOffset=rawContentLength-(preTrimContent.length-content.length-startOffset);advancePositionWithMutation(innerEnd,rawContent,endOffset);advanceBy(context,close.length);return{type:5/* INTERPOLATION */,content:{type:4/* SIMPLE_EXPRESSION */,isStatic:false,// Set `isConstant` to false by default and will decide in transformExpression\nconstType:0/* NOT_CONSTANT */,content,loc:getSelection(context,innerStart,innerEnd)},loc:getSelection(context,start)};}function parseText(context,mode){const endTokens=['<',context.options.delimiters[0]];if(mode===3/* CDATA */){endTokens.push(']]>');}let endIndex=context.source.length;for(let i=0;i<endTokens.length;i++){const index=context.source.indexOf(endTokens[i],1);if(index!==-1&&endIndex>index){endIndex=index;}}const start=getCursor(context);const content=parseTextData(context,endIndex,mode);return{type:2/* TEXT */,content,loc:getSelection(context,start)};}/**\n     * Get text data with a given length from the current location.\n     * This translates HTML entities in the text data.\n     */function parseTextData(context,length,mode){const rawText=context.source.slice(0,length);advanceBy(context,length);if(mode===2/* RAWTEXT */||mode===3/* CDATA */||rawText.indexOf('&')===-1){return rawText;}else{// DATA or RCDATA containing \"&\"\". Entity decoding required.\nreturn context.options.decodeEntities(rawText,mode===4/* ATTRIBUTE_VALUE */);}}function getCursor(context){const{column,line,offset}=context;return{column,line,offset};}function getSelection(context,start,end){end=end||getCursor(context);return{start,end,source:context.originalSource.slice(start.offset,end.offset)};}function last(xs){return xs[xs.length-1];}function startsWith(source,searchString){return source.startsWith(searchString);}function advanceBy(context,numberOfCharacters){const{source}=context;advancePositionWithMutation(context,source,numberOfCharacters);context.source=source.slice(numberOfCharacters);}function advanceSpaces(context){const match=/^[\\t\\r\\n\\f ]+/.exec(context.source);if(match){advanceBy(context,match[0].length);}}function getNewPosition(context,start,numberOfCharacters){return advancePositionWithClone(start,context.originalSource.slice(start.offset,numberOfCharacters),numberOfCharacters);}function emitError(context,code,offset,loc=getCursor(context)){if(offset){loc.offset+=offset;loc.column+=offset;}context.options.onError(createCompilerError(code,{start:loc,end:loc,source:''}));}function isEnd(context,mode,ancestors){const s=context.source;switch(mode){case 0/* DATA */:if(startsWith(s,'</')){// TODO: probably bad performance\nfor(let i=ancestors.length-1;i>=0;--i){if(startsWithEndTagOpen(s,ancestors[i].tag)){return true;}}}break;case 1/* RCDATA */:case 2/* RAWTEXT */:{const parent=last(ancestors);if(parent&&startsWithEndTagOpen(s,parent.tag)){return true;}break;}case 3/* CDATA */:if(startsWith(s,']]>')){return true;}break;}return!s;}function startsWithEndTagOpen(source,tag){return startsWith(source,'</')&&source.substr(2,tag.length).toLowerCase()===tag.toLowerCase()&&/[\\t\\r\\n\\f />]/.test(source[2+tag.length]||'>');}function hoistStatic(root,context){walk(root,context,// Root node is unfortunately non-hoistable due to potential parent\n// fallthrough attributes.\nisSingleElementRoot(root,root.children[0]));}function isSingleElementRoot(root,child){const{children}=root;return children.length===1&&child.type===1/* ELEMENT */&&!isSlotOutlet(child);}function walk(node,context,doNotHoistNode=false){let hasHoistedNode=false;// Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\n// static bindings with expressions. These expressions are guaranteed to be\n// constant so they are still eligible for hoisting, but they are only\n// available at runtime and therefore cannot be evaluated ahead of time.\n// This is only a concern for pre-stringification (via transformHoist by\n// @vue/compiler-dom), but doing it here allows us to perform only one full\n// walk of the AST and allow `stringifyStatic` to stop walking as soon as its\n// stringficiation threshold is met.\nlet canStringify=true;const{children}=node;for(let i=0;i<children.length;i++){const child=children[i];// only plain elements & text calls are eligible for hoisting.\nif(child.type===1/* ELEMENT */&&child.tagType===0/* ELEMENT */){const constantType=doNotHoistNode?0/* NOT_CONSTANT */:getConstantType(child,context);if(constantType>0/* NOT_CONSTANT */){if(constantType<3/* CAN_STRINGIFY */){canStringify=false;}if(constantType>=2/* CAN_HOIST */){child.codegenNode.patchFlag=-1/* HOISTED */+` /* HOISTED */`;child.codegenNode=context.hoist(child.codegenNode);hasHoistedNode=true;continue;}}else{// node may contain dynamic children, but its props may be eligible for\n// hoisting.\nconst codegenNode=child.codegenNode;if(codegenNode.type===13/* VNODE_CALL */){const flag=getPatchFlag(codegenNode);if((!flag||flag===512/* NEED_PATCH */||flag===1/* TEXT */)&&getGeneratedPropsConstantType(child,context)>=2/* CAN_HOIST */){const props=getNodeProps(child);if(props){codegenNode.props=context.hoist(props);}}}}}else if(child.type===12/* TEXT_CALL */){const contentType=getConstantType(child.content,context);if(contentType>0){if(contentType<3/* CAN_STRINGIFY */){canStringify=false;}if(contentType>=2/* CAN_HOIST */){child.codegenNode=context.hoist(child.codegenNode);hasHoistedNode=true;}}}// walk further\nif(child.type===1/* ELEMENT */){const isComponent=child.tagType===1/* COMPONENT */;if(isComponent){context.scopes.vSlot++;}walk(child,context);if(isComponent){context.scopes.vSlot--;}}else if(child.type===11/* FOR */){// Do not hoist v-for single child because it has to be a block\nwalk(child,context,child.children.length===1);}else if(child.type===9/* IF */){for(let i=0;i<child.branches.length;i++){// Do not hoist v-if single child because it has to be a block\nwalk(child.branches[i],context,child.branches[i].children.length===1);}}}if(canStringify&&hasHoistedNode&&context.transformHoist){context.transformHoist(children,context,node);}}function getConstantType(node,context){const{constantCache}=context;switch(node.type){case 1/* ELEMENT */:if(node.tagType!==0/* ELEMENT */){return 0/* NOT_CONSTANT */;}const cached=constantCache.get(node);if(cached!==undefined){return cached;}const codegenNode=node.codegenNode;if(codegenNode.type!==13/* VNODE_CALL */){return 0/* NOT_CONSTANT */;}const flag=getPatchFlag(codegenNode);if(!flag){let returnType=3/* CAN_STRINGIFY */;// Element itself has no patch flag. However we still need to check:\n// 1. Even for a node with no patch flag, it is possible for it to contain\n// non-hoistable expressions that refers to scope variables, e.g. compiler\n// injected keys or cached event handlers. Therefore we need to always\n// check the codegenNode's props to be sure.\nconst generatedPropsType=getGeneratedPropsConstantType(node,context);if(generatedPropsType===0/* NOT_CONSTANT */){constantCache.set(node,0/* NOT_CONSTANT */);return 0/* NOT_CONSTANT */;}if(generatedPropsType<returnType){returnType=generatedPropsType;}// 2. its children.\nfor(let i=0;i<node.children.length;i++){const childType=getConstantType(node.children[i],context);if(childType===0/* NOT_CONSTANT */){constantCache.set(node,0/* NOT_CONSTANT */);return 0/* NOT_CONSTANT */;}if(childType<returnType){returnType=childType;}}// 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n// type, check if any of the props can cause the type to be lowered\n// we can skip can_patch because it's guaranteed by the absence of a\n// patchFlag.\nif(returnType>1/* CAN_SKIP_PATCH */){for(let i=0;i<node.props.length;i++){const p=node.props[i];if(p.type===7/* DIRECTIVE */&&p.name==='bind'&&p.exp){const expType=getConstantType(p.exp,context);if(expType===0/* NOT_CONSTANT */){constantCache.set(node,0/* NOT_CONSTANT */);return 0/* NOT_CONSTANT */;}if(expType<returnType){returnType=expType;}}}}// only svg/foreignObject could be block here, however if they are\n// static then they don't need to be blocks since there will be no\n// nested updates.\nif(codegenNode.isBlock){context.removeHelper(OPEN_BLOCK);context.removeHelper(CREATE_BLOCK);codegenNode.isBlock=false;context.helper(CREATE_VNODE);}constantCache.set(node,returnType);return returnType;}else{constantCache.set(node,0/* NOT_CONSTANT */);return 0/* NOT_CONSTANT */;}case 2/* TEXT */:case 3/* COMMENT */:return 3/* CAN_STRINGIFY */;case 9/* IF */:case 11/* FOR */:case 10/* IF_BRANCH */:return 0/* NOT_CONSTANT */;case 5/* INTERPOLATION */:case 12/* TEXT_CALL */:return getConstantType(node.content,context);case 4/* SIMPLE_EXPRESSION */:return node.constType;case 8/* COMPOUND_EXPRESSION */:let returnType=3/* CAN_STRINGIFY */;for(let i=0;i<node.children.length;i++){const child=node.children[i];if(isString(child)||isSymbol(child)){continue;}const childType=getConstantType(child,context);if(childType===0/* NOT_CONSTANT */){return 0/* NOT_CONSTANT */;}else if(childType<returnType){returnType=childType;}}return returnType;default:return 0/* NOT_CONSTANT */;}}function getGeneratedPropsConstantType(node,context){let returnType=3/* CAN_STRINGIFY */;const props=getNodeProps(node);if(props&&props.type===15/* JS_OBJECT_EXPRESSION */){const{properties}=props;for(let i=0;i<properties.length;i++){const{key,value}=properties[i];const keyType=getConstantType(key,context);if(keyType===0/* NOT_CONSTANT */){return keyType;}if(keyType<returnType){returnType=keyType;}if(value.type!==4/* SIMPLE_EXPRESSION */){return 0/* NOT_CONSTANT */;}const valueType=getConstantType(value,context);if(valueType===0/* NOT_CONSTANT */){return valueType;}if(valueType<returnType){returnType=valueType;}}}return returnType;}function getNodeProps(node){const codegenNode=node.codegenNode;if(codegenNode.type===13/* VNODE_CALL */){return codegenNode.props;}}function getPatchFlag(node){const flag=node.patchFlag;return flag?parseInt(flag,10):undefined;}function createTransformContext(root,{filename='',prefixIdentifiers=false,hoistStatic=false,cacheHandlers=false,nodeTransforms=[],directiveTransforms={},transformHoist=null,isBuiltInComponent=NOOP,isCustomElement=NOOP,expressionPlugins=[],scopeId=null,slotted=true,ssr=false,ssrCssVars=``,bindingMetadata=EMPTY_OBJ,inline=false,isTS=false,onError=defaultOnError}){const nameMatch=filename.replace(/\\?.*$/,'').match(/([^/\\\\]+)\\.\\w+$/);const context={// options\nselfName:nameMatch&&capitalize(camelize(nameMatch[1])),prefixIdentifiers,hoistStatic,cacheHandlers,nodeTransforms,directiveTransforms,transformHoist,isBuiltInComponent,isCustomElement,expressionPlugins,scopeId,slotted,ssr,ssrCssVars,bindingMetadata,inline,isTS,onError,// state\nroot,helpers:new Map(),components:new Set(),directives:new Set(),hoists:[],imports:[],constantCache:new Map(),temps:0,cached:0,identifiers:Object.create(null),scopes:{vFor:0,vSlot:0,vPre:0,vOnce:0},parent:null,currentNode:root,childIndex:0,// methods\nhelper(name){const count=context.helpers.get(name)||0;context.helpers.set(name,count+1);return name;},removeHelper(name){const count=context.helpers.get(name);if(count){const currentCount=count-1;if(!currentCount){context.helpers.delete(name);}else{context.helpers.set(name,currentCount);}}},helperString(name){return`_${helperNameMap[context.helper(name)]}`;},replaceNode(node){/* istanbul ignore if */{if(!context.currentNode){throw new Error(`Node being replaced is already removed.`);}if(!context.parent){throw new Error(`Cannot replace root node.`);}}context.parent.children[context.childIndex]=context.currentNode=node;},removeNode(node){if(!context.parent){throw new Error(`Cannot remove root node.`);}const list=context.parent.children;const removalIndex=node?list.indexOf(node):context.currentNode?context.childIndex:-1;/* istanbul ignore if */if(removalIndex<0){throw new Error(`node being removed is not a child of current parent`);}if(!node||node===context.currentNode){// current node removed\ncontext.currentNode=null;context.onNodeRemoved();}else{// sibling node removed\nif(context.childIndex>removalIndex){context.childIndex--;context.onNodeRemoved();}}context.parent.children.splice(removalIndex,1);},onNodeRemoved:()=>{},addIdentifiers(exp){},removeIdentifiers(exp){},hoist(exp){context.hoists.push(exp);const identifier=createSimpleExpression(`_hoisted_${context.hoists.length}`,false,exp.loc,2/* CAN_HOIST */);identifier.hoisted=exp;return identifier;},cache(exp,isVNode=false){return createCacheExpression(++context.cached,exp,isVNode);}};return context;}function transform(root,options){const context=createTransformContext(root,options);traverseNode(root,context);if(options.hoistStatic){hoistStatic(root,context);}if(!options.ssr){createRootCodegen(root,context);}// finalize meta information\nroot.helpers=[...context.helpers.keys()];root.components=[...context.components];root.directives=[...context.directives];root.imports=context.imports;root.hoists=context.hoists;root.temps=context.temps;root.cached=context.cached;}function createRootCodegen(root,context){const{helper,removeHelper}=context;const{children}=root;if(children.length===1){const child=children[0];// if the single child is an element, turn it into a block.\nif(isSingleElementRoot(root,child)&&child.codegenNode){// single element root is never hoisted so codegenNode will never be\n// SimpleExpressionNode\nconst codegenNode=child.codegenNode;if(codegenNode.type===13/* VNODE_CALL */){if(!codegenNode.isBlock){removeHelper(CREATE_VNODE);codegenNode.isBlock=true;helper(OPEN_BLOCK);helper(CREATE_BLOCK);}}root.codegenNode=codegenNode;}else{// - single <slot/>, IfNode, ForNode: already blocks.\n// - single text node: always patched.\n// root codegen falls through via genNode()\nroot.codegenNode=child;}}else if(children.length>1){// root has multiple nodes - return a fragment block.\nlet patchFlag=64/* STABLE_FRAGMENT */;let patchFlagText=PatchFlagNames[64/* STABLE_FRAGMENT */];// check if the fragment actually contains a single valid child with\n// the rest being comments\nif(children.filter(c=>c.type!==3/* COMMENT */).length===1){patchFlag|=2048/* DEV_ROOT_FRAGMENT */;patchFlagText+=`, ${PatchFlagNames[2048/* DEV_ROOT_FRAGMENT */]}`;}root.codegenNode=createVNodeCall(context,helper(FRAGMENT),undefined,root.children,patchFlag+` /* ${patchFlagText} */`,undefined,undefined,true);}else;}function traverseChildren(parent,context){let i=0;const nodeRemoved=()=>{i--;};for(;i<parent.children.length;i++){const child=parent.children[i];if(isString(child))continue;context.parent=parent;context.childIndex=i;context.onNodeRemoved=nodeRemoved;traverseNode(child,context);}}function traverseNode(node,context){context.currentNode=node;// apply transform plugins\nconst{nodeTransforms}=context;const exitFns=[];for(let i=0;i<nodeTransforms.length;i++){const onExit=nodeTransforms[i](node,context);if(onExit){if(isArray(onExit)){exitFns.push(...onExit);}else{exitFns.push(onExit);}}if(!context.currentNode){// node was removed\nreturn;}else{// node may have been replaced\nnode=context.currentNode;}}switch(node.type){case 3/* COMMENT */:if(!context.ssr){// inject import for the Comment symbol, which is needed for creating\n// comment nodes with `createVNode`\ncontext.helper(CREATE_COMMENT);}break;case 5/* INTERPOLATION */:// no need to traverse, but we need to inject toString helper\nif(!context.ssr){context.helper(TO_DISPLAY_STRING);}break;// for container types, further traverse downwards\ncase 9/* IF */:for(let i=0;i<node.branches.length;i++){traverseNode(node.branches[i],context);}break;case 10/* IF_BRANCH */:case 11/* FOR */:case 1/* ELEMENT */:case 0/* ROOT */:traverseChildren(node,context);break;}// exit transforms\ncontext.currentNode=node;let i=exitFns.length;while(i--){exitFns[i]();}}function createStructuralDirectiveTransform(name,fn){const matches=isString(name)?n=>n===name:n=>name.test(n);return(node,context)=>{if(node.type===1/* ELEMENT */){const{props}=node;// structural directive transforms are not concerned with slots\n// as they are handled separately in vSlot.ts\nif(node.tagType===3/* TEMPLATE */&&props.some(isVSlot)){return;}const exitFns=[];for(let i=0;i<props.length;i++){const prop=props[i];if(prop.type===7/* DIRECTIVE */&&matches(prop.name)){// structural directives are removed to avoid infinite recursion\n// also we remove them *before* applying so that it can further\n// traverse itself in case it moves the node around\nprops.splice(i,1);i--;const onExit=fn(node,prop,context);if(onExit)exitFns.push(onExit);}}return exitFns;}};}const PURE_ANNOTATION=`/*#__PURE__*/`;function createCodegenContext(ast,{mode='function',prefixIdentifiers=mode==='module',sourceMap=false,filename=`template.vue.html`,scopeId=null,optimizeImports=false,runtimeGlobalName=`Vue`,runtimeModuleName=`vue`,ssr=false}){const context={mode,prefixIdentifiers,sourceMap,filename,scopeId,optimizeImports,runtimeGlobalName,runtimeModuleName,ssr,source:ast.loc.source,code:``,column:1,line:1,offset:0,indentLevel:0,pure:false,map:undefined,helper(key){return`_${helperNameMap[key]}`;},push(code,node){context.code+=code;},indent(){newline(++context.indentLevel);},deindent(withoutNewLine=false){if(withoutNewLine){--context.indentLevel;}else{newline(--context.indentLevel);}},newline(){newline(context.indentLevel);}};function newline(n){context.push('\\n'+`  `.repeat(n));}return context;}function generate(ast,options={}){const context=createCodegenContext(ast,options);if(options.onContextCreated)options.onContextCreated(context);const{mode,push,prefixIdentifiers,indent,deindent,newline,scopeId,ssr}=context;const hasHelpers=ast.helpers.length>0;const useWithBlock=!prefixIdentifiers&&mode!=='module';// preambles\n// in setup() inline mode, the preamble is generated in a sub context\n// and returned separately.\nconst preambleContext=context;{genFunctionPreamble(ast,preambleContext);}// enter render function\nconst functionName=ssr?`ssrRender`:`render`;const args=ssr?['_ctx','_push','_parent','_attrs']:['_ctx','_cache'];const signature=args.join(', ');{push(`function ${functionName}(${signature}) {`);}indent();if(useWithBlock){push(`with (_ctx) {`);indent();// function mode const declarations should be inside with block\n// also they should be renamed to avoid collision with user properties\nif(hasHelpers){push(`const { ${ast.helpers.map(s=>`${helperNameMap[s]}: _${helperNameMap[s]}`).join(', ')} } = _Vue`);push(`\\n`);newline();}}// generate asset resolution statements\nif(ast.components.length){genAssets(ast.components,'component',context);if(ast.directives.length||ast.temps>0){newline();}}if(ast.directives.length){genAssets(ast.directives,'directive',context);if(ast.temps>0){newline();}}if(ast.temps>0){push(`let `);for(let i=0;i<ast.temps;i++){push(`${i>0?`, `:``}_temp${i}`);}}if(ast.components.length||ast.directives.length||ast.temps){push(`\\n`);newline();}// generate the VNode tree expression\nif(!ssr){push(`return `);}if(ast.codegenNode){genNode(ast.codegenNode,context);}else{push(`null`);}if(useWithBlock){deindent();push(`}`);}deindent();push(`}`);return{ast,code:context.code,preamble:``,// SourceMapGenerator does have toJSON() method but it's not in the types\nmap:context.map?context.map.toJSON():undefined};}function genFunctionPreamble(ast,context){const{ssr,prefixIdentifiers,push,newline,runtimeModuleName,runtimeGlobalName}=context;const VueBinding=runtimeGlobalName;const aliasHelper=s=>`${helperNameMap[s]}: _${helperNameMap[s]}`;// Generate const declaration for helpers\n// In prefix mode, we place the const declaration at top so it's done\n// only once; But if we not prefixing, we place the declaration inside the\n// with block so it doesn't incur the `in` check cost for every helper access.\nif(ast.helpers.length>0){{// \"with\" mode.\n// save Vue in a separate variable to avoid collision\npush(`const _Vue = ${VueBinding}\\n`);// in \"with\" mode, helpers are declared inside the with block to avoid\n// has check cost, but hoists are lifted out of the function - we need\n// to provide the helper here.\nif(ast.hoists.length){const staticHelpers=[CREATE_VNODE,CREATE_COMMENT,CREATE_TEXT,CREATE_STATIC].filter(helper=>ast.helpers.includes(helper)).map(aliasHelper).join(', ');push(`const { ${staticHelpers} } = _Vue\\n`);}}}genHoists(ast.hoists,context);newline();push(`return `);}function genAssets(assets,type,{helper,push,newline}){const resolver=helper(type==='component'?RESOLVE_COMPONENT:RESOLVE_DIRECTIVE);for(let i=0;i<assets.length;i++){let id=assets[i];// potential component implicit self-reference inferred from SFC filename\nconst maybeSelfReference=id.endsWith('__self');if(maybeSelfReference){id=id.slice(0,-6);}push(`const ${toValidAssetId(id,type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference?`, true`:``})`);if(i<assets.length-1){newline();}}}function genHoists(hoists,context){if(!hoists.length){return;}context.pure=true;const{push,newline,helper,scopeId,mode}=context;newline();hoists.forEach((exp,i)=>{if(exp){push(`const _hoisted_${i+1} = `);genNode(exp,context);newline();}});context.pure=false;}function isText$1(n){return isString(n)||n.type===4/* SIMPLE_EXPRESSION */||n.type===2/* TEXT */||n.type===5/* INTERPOLATION */||n.type===8/* COMPOUND_EXPRESSION */;}function genNodeListAsArray(nodes,context){const multilines=nodes.length>3||nodes.some(n=>isArray(n)||!isText$1(n));context.push(`[`);multilines&&context.indent();genNodeList(nodes,context,multilines);multilines&&context.deindent();context.push(`]`);}function genNodeList(nodes,context,multilines=false,comma=true){const{push,newline}=context;for(let i=0;i<nodes.length;i++){const node=nodes[i];if(isString(node)){push(node);}else if(isArray(node)){genNodeListAsArray(node,context);}else{genNode(node,context);}if(i<nodes.length-1){if(multilines){comma&&push(',');newline();}else{comma&&push(', ');}}}}function genNode(node,context){if(isString(node)){context.push(node);return;}if(isSymbol(node)){context.push(context.helper(node));return;}switch(node.type){case 1/* ELEMENT */:case 9/* IF */:case 11/* FOR */:assert(node.codegenNode!=null,`Codegen node is missing for element/if/for node. `+`Apply appropriate transforms first.`);genNode(node.codegenNode,context);break;case 2/* TEXT */:genText(node,context);break;case 4/* SIMPLE_EXPRESSION */:genExpression(node,context);break;case 5/* INTERPOLATION */:genInterpolation(node,context);break;case 12/* TEXT_CALL */:genNode(node.codegenNode,context);break;case 8/* COMPOUND_EXPRESSION */:genCompoundExpression(node,context);break;case 3/* COMMENT */:genComment(node,context);break;case 13/* VNODE_CALL */:genVNodeCall(node,context);break;case 14/* JS_CALL_EXPRESSION */:genCallExpression(node,context);break;case 15/* JS_OBJECT_EXPRESSION */:genObjectExpression(node,context);break;case 17/* JS_ARRAY_EXPRESSION */:genArrayExpression(node,context);break;case 18/* JS_FUNCTION_EXPRESSION */:genFunctionExpression(node,context);break;case 19/* JS_CONDITIONAL_EXPRESSION */:genConditionalExpression(node,context);break;case 20/* JS_CACHE_EXPRESSION */:genCacheExpression(node,context);break;// SSR only types\ncase 21/* JS_BLOCK_STATEMENT */:break;case 22/* JS_TEMPLATE_LITERAL */:break;case 23/* JS_IF_STATEMENT */:break;case 24/* JS_ASSIGNMENT_EXPRESSION */:break;case 25/* JS_SEQUENCE_EXPRESSION */:break;case 26/* JS_RETURN_STATEMENT */:break;/* istanbul ignore next */case 10/* IF_BRANCH */:// noop\nbreak;default:{assert(false,`unhandled codegen node type: ${node.type}`);// make sure we exhaust all possible types\nconst exhaustiveCheck=node;return exhaustiveCheck;}}}function genText(node,context){context.push(JSON.stringify(node.content),node);}function genExpression(node,context){const{content,isStatic}=node;context.push(isStatic?JSON.stringify(content):content,node);}function genInterpolation(node,context){const{push,helper,pure}=context;if(pure)push(PURE_ANNOTATION);push(`${helper(TO_DISPLAY_STRING)}(`);genNode(node.content,context);push(`)`);}function genCompoundExpression(node,context){for(let i=0;i<node.children.length;i++){const child=node.children[i];if(isString(child)){context.push(child);}else{genNode(child,context);}}}function genExpressionAsPropertyKey(node,context){const{push}=context;if(node.type===8/* COMPOUND_EXPRESSION */){push(`[`);genCompoundExpression(node,context);push(`]`);}else if(node.isStatic){// only quote keys if necessary\nconst text=isSimpleIdentifier(node.content)?node.content:JSON.stringify(node.content);push(text,node);}else{push(`[${node.content}]`,node);}}function genComment(node,context){{const{push,helper,pure}=context;if(pure){push(PURE_ANNOTATION);}push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,node);}}function genVNodeCall(node,context){const{push,helper,pure}=context;const{tag,props,children,patchFlag,dynamicProps,directives,isBlock,disableTracking}=node;if(directives){push(helper(WITH_DIRECTIVES)+`(`);}if(isBlock){push(`(${helper(OPEN_BLOCK)}(${disableTracking?`true`:``}), `);}if(pure){push(PURE_ANNOTATION);}push(helper(isBlock?CREATE_BLOCK:CREATE_VNODE)+`(`,node);genNodeList(genNullableArgs([tag,props,children,patchFlag,dynamicProps]),context);push(`)`);if(isBlock){push(`)`);}if(directives){push(`, `);genNode(directives,context);push(`)`);}}function genNullableArgs(args){let i=args.length;while(i--){if(args[i]!=null)break;}return args.slice(0,i+1).map(arg=>arg||`null`);}// JavaScript\nfunction genCallExpression(node,context){const{push,helper,pure}=context;const callee=isString(node.callee)?node.callee:helper(node.callee);if(pure){push(PURE_ANNOTATION);}push(callee+`(`,node);genNodeList(node.arguments,context);push(`)`);}function genObjectExpression(node,context){const{push,indent,deindent,newline}=context;const{properties}=node;if(!properties.length){push(`{}`,node);return;}const multilines=properties.length>1||properties.some(p=>p.value.type!==4/* SIMPLE_EXPRESSION */);push(multilines?`{`:`{ `);multilines&&indent();for(let i=0;i<properties.length;i++){const{key,value}=properties[i];// key\ngenExpressionAsPropertyKey(key,context);push(`: `);// value\ngenNode(value,context);if(i<properties.length-1){// will only reach this if it's multilines\npush(`,`);newline();}}multilines&&deindent();push(multilines?`}`:` }`);}function genArrayExpression(node,context){genNodeListAsArray(node.elements,context);}function genFunctionExpression(node,context){const{push,indent,deindent,scopeId,mode}=context;const{params,returns,body,newline,isSlot}=node;if(isSlot){// wrap slot functions with owner context\npush(`_${helperNameMap[WITH_CTX]}(`);}push(`(`,node);if(isArray(params)){genNodeList(params,context);}else if(params){genNode(params,context);}push(`) => `);if(newline||body){push(`{`);indent();}if(returns){if(newline){push(`return `);}if(isArray(returns)){genNodeListAsArray(returns,context);}else{genNode(returns,context);}}else if(body){genNode(body,context);}if(newline||body){deindent();push(`}`);}if(isSlot){push(`)`);}}function genConditionalExpression(node,context){const{test,consequent,alternate,newline:needNewline}=node;const{push,indent,deindent,newline}=context;if(test.type===4/* SIMPLE_EXPRESSION */){const needsParens=!isSimpleIdentifier(test.content);needsParens&&push(`(`);genExpression(test,context);needsParens&&push(`)`);}else{push(`(`);genNode(test,context);push(`)`);}needNewline&&indent();context.indentLevel++;needNewline||push(` `);push(`? `);genNode(consequent,context);context.indentLevel--;needNewline&&newline();needNewline||push(` `);push(`: `);const isNested=alternate.type===19/* JS_CONDITIONAL_EXPRESSION */;if(!isNested){context.indentLevel++;}genNode(alternate,context);if(!isNested){context.indentLevel--;}needNewline&&deindent(true/* without newline */);}function genCacheExpression(node,context){const{push,helper,indent,deindent,newline}=context;push(`_cache[${node.index}] || (`);if(node.isVNode){indent();push(`${helper(SET_BLOCK_TRACKING)}(-1),`);newline();}push(`_cache[${node.index}] = `);genNode(node.value,context);if(node.isVNode){push(`,`);newline();push(`${helper(SET_BLOCK_TRACKING)}(1),`);newline();push(`_cache[${node.index}]`);deindent();}push(`)`);}// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nconst prohibitedKeywordRE=new RegExp('\\\\b'+('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,'+'super,throw,while,yield,delete,export,import,return,switch,default,'+'extends,finally,continue,debugger,function,arguments,typeof,void').split(',').join('\\\\b|\\\\b')+'\\\\b');// strip strings in expressions\nconst stripStringRE=/'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;/**\n     * Validate a non-prefixed expression.\n     * This is only called when using the in-browser runtime compiler since it\n     * doesn't prefix expressions.\n     */function validateBrowserExpression(node,context,asParams=false,asRawStatements=false){const exp=node.content;// empty expressions are validated per-directive since some directives\n// do allow empty expressions.\nif(!exp.trim()){return;}try{new Function(asRawStatements?` ${exp} `:`return ${asParams?`(${exp}) => {}`:`(${exp})`}`);}catch(e){let message=e.message;const keywordMatch=exp.replace(stripStringRE,'').match(prohibitedKeywordRE);if(keywordMatch){message=`avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;}context.onError(createCompilerError(43/* X_INVALID_EXPRESSION */,node.loc,undefined,message));}}const transformExpression=(node,context)=>{if(node.type===5/* INTERPOLATION */){node.content=processExpression(node.content,context);}else if(node.type===1/* ELEMENT */){// handle directives on element\nfor(let i=0;i<node.props.length;i++){const dir=node.props[i];// do not process for v-on & v-for since they are special handled\nif(dir.type===7/* DIRECTIVE */&&dir.name!=='for'){const exp=dir.exp;const arg=dir.arg;// do not process exp if this is v-on:arg - we need special handling\n// for wrapping inline statements.\nif(exp&&exp.type===4/* SIMPLE_EXPRESSION */&&!(dir.name==='on'&&arg)){dir.exp=processExpression(exp,context,// slot args must be processed as function params\ndir.name==='slot');}if(arg&&arg.type===4/* SIMPLE_EXPRESSION */&&!arg.isStatic){dir.arg=processExpression(arg,context);}}}}};// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node,context,// some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams=false,// v-on handler values may contain multiple statements\nasRawStatements=false){{{// simple in-browser validation (same logic in 2.x)\nvalidateBrowserExpression(node,context,asParams,asRawStatements);}return node;}}const transformIf=createStructuralDirectiveTransform(/^(if|else|else-if)$/,(node,dir,context)=>{return processIf(node,dir,context,(ifNode,branch,isRoot)=>{// #1587: We need to dynamically increment the key based on the current\n// node's sibling nodes, since chained v-if/else branches are\n// rendered at the same depth\nconst siblings=context.parent.children;let i=siblings.indexOf(ifNode);let key=0;while(i-->=0){const sibling=siblings[i];if(sibling&&sibling.type===9/* IF */){key+=sibling.branches.length;}}// Exit callback. Complete the codegenNode when all children have been\n// transformed.\nreturn()=>{if(isRoot){ifNode.codegenNode=createCodegenNodeForBranch(branch,key,context);}else{// attach this branch's codegen node to the v-if root.\nconst parentCondition=getParentCondition(ifNode.codegenNode);parentCondition.alternate=createCodegenNodeForBranch(branch,key+ifNode.branches.length-1,context);}};});});// target-agnostic transform used for both Client and SSR\nfunction processIf(node,dir,context,processCodegen){if(dir.name!=='else'&&(!dir.exp||!dir.exp.content.trim())){const loc=dir.exp?dir.exp.loc:node.loc;context.onError(createCompilerError(27/* X_V_IF_NO_EXPRESSION */,dir.loc));dir.exp=createSimpleExpression(`true`,false,loc);}if(dir.exp){validateBrowserExpression(dir.exp,context);}if(dir.name==='if'){const branch=createIfBranch(node,dir);const ifNode={type:9/* IF */,loc:node.loc,branches:[branch]};context.replaceNode(ifNode);if(processCodegen){return processCodegen(ifNode,branch,true);}}else{// locate the adjacent v-if\nconst siblings=context.parent.children;const comments=[];let i=siblings.indexOf(node);while(i-->=-1){const sibling=siblings[i];if(sibling&&sibling.type===3/* COMMENT */){context.removeNode(sibling);comments.unshift(sibling);continue;}if(sibling&&sibling.type===2/* TEXT */&&!sibling.content.trim().length){context.removeNode(sibling);continue;}if(sibling&&sibling.type===9/* IF */){// move the node to the if node's branches\ncontext.removeNode();const branch=createIfBranch(node,dir);if(comments.length){branch.children=[...comments,...branch.children];}// check if user is forcing same key on different branches\n{const key=branch.userKey;if(key){sibling.branches.forEach(({userKey})=>{if(isSameKey(userKey,key)){context.onError(createCompilerError(28/* X_V_IF_SAME_KEY */,branch.userKey.loc));}});}}sibling.branches.push(branch);const onExit=processCodegen&&processCodegen(sibling,branch,false);// since the branch was removed, it will not be traversed.\n// make sure to traverse here.\ntraverseNode(branch,context);// call on exit\nif(onExit)onExit();// make sure to reset currentNode after traversal to indicate this\n// node has been removed.\ncontext.currentNode=null;}else{context.onError(createCompilerError(29/* X_V_ELSE_NO_ADJACENT_IF */,node.loc));}break;}}}function createIfBranch(node,dir){return{type:10/* IF_BRANCH */,loc:node.loc,condition:dir.name==='else'?undefined:dir.exp,children:node.tagType===3/* TEMPLATE */&&!findDir(node,'for')?node.children:[node],userKey:findProp(node,`key`)};}function createCodegenNodeForBranch(branch,keyIndex,context){if(branch.condition){return createConditionalExpression(branch.condition,createChildrenCodegenNode(branch,keyIndex,context),// make sure to pass in asBlock: true so that the comment node call\n// closes the current block.\ncreateCallExpression(context.helper(CREATE_COMMENT),['\"v-if\"','true']));}else{return createChildrenCodegenNode(branch,keyIndex,context);}}function createChildrenCodegenNode(branch,keyIndex,context){const{helper,removeHelper}=context;const keyProperty=createObjectProperty(`key`,createSimpleExpression(`${keyIndex}`,false,locStub,2/* CAN_HOIST */));const{children}=branch;const firstChild=children[0];const needFragmentWrapper=children.length!==1||firstChild.type!==1/* ELEMENT */;if(needFragmentWrapper){if(children.length===1&&firstChild.type===11/* FOR */){// optimize away nested fragments when child is a ForNode\nconst vnodeCall=firstChild.codegenNode;injectProp(vnodeCall,keyProperty,context);return vnodeCall;}else{let patchFlag=64/* STABLE_FRAGMENT */;let patchFlagText=PatchFlagNames[64/* STABLE_FRAGMENT */];// check if the fragment actually contains a single valid child with\n// the rest being comments\nif(children.filter(c=>c.type!==3/* COMMENT */).length===1){patchFlag|=2048/* DEV_ROOT_FRAGMENT */;patchFlagText+=`, ${PatchFlagNames[2048/* DEV_ROOT_FRAGMENT */]}`;}return createVNodeCall(context,helper(FRAGMENT),createObjectExpression([keyProperty]),children,patchFlag+` /* ${patchFlagText} */`,undefined,undefined,true,false,branch.loc);}}else{const vnodeCall=firstChild.codegenNode;// Change createVNode to createBlock.\nif(vnodeCall.type===13/* VNODE_CALL */&&!vnodeCall.isBlock){removeHelper(CREATE_VNODE);vnodeCall.isBlock=true;helper(OPEN_BLOCK);helper(CREATE_BLOCK);}// inject branch key\ninjectProp(vnodeCall,keyProperty,context);return vnodeCall;}}function isSameKey(a,b){if(!a||a.type!==b.type){return false;}if(a.type===6/* ATTRIBUTE */){if(a.value.content!==b.value.content){return false;}}else{// directive\nconst exp=a.exp;const branchExp=b.exp;if(exp.type!==branchExp.type){return false;}if(exp.type!==4/* SIMPLE_EXPRESSION */||exp.isStatic!==branchExp.isStatic||exp.content!==branchExp.content){return false;}}return true;}function getParentCondition(node){while(true){if(node.type===19/* JS_CONDITIONAL_EXPRESSION */){if(node.alternate.type===19/* JS_CONDITIONAL_EXPRESSION */){node=node.alternate;}else{return node;}}else if(node.type===20/* JS_CACHE_EXPRESSION */){node=node.value;}}}const transformFor=createStructuralDirectiveTransform('for',(node,dir,context)=>{const{helper,removeHelper}=context;return processFor(node,dir,context,forNode=>{// create the loop render function expression now, and add the\n// iterator on exit after all children have been traversed\nconst renderExp=createCallExpression(helper(RENDER_LIST),[forNode.source]);const keyProp=findProp(node,`key`);const keyProperty=keyProp?createObjectProperty(`key`,keyProp.type===6/* ATTRIBUTE */?createSimpleExpression(keyProp.value.content,true):keyProp.exp):null;const isStableFragment=forNode.source.type===4/* SIMPLE_EXPRESSION */&&forNode.source.constType>0/* NOT_CONSTANT */;const fragmentFlag=isStableFragment?64/* STABLE_FRAGMENT */:keyProp?128/* KEYED_FRAGMENT */:256/* UNKEYED_FRAGMENT */;forNode.codegenNode=createVNodeCall(context,helper(FRAGMENT),undefined,renderExp,fragmentFlag+` /* ${PatchFlagNames[fragmentFlag]} */`,undefined,undefined,true/* isBlock */,!isStableFragment/* disableTracking */,node.loc);return()=>{// finish the codegen now that all children have been traversed\nlet childBlock;const isTemplate=isTemplateNode(node);const{children}=forNode;// check <template v-for> key placement\nif(isTemplate){node.children.some(c=>{if(c.type===1/* ELEMENT */){const key=findProp(c,'key');if(key){context.onError(createCompilerError(32/* X_V_FOR_TEMPLATE_KEY_PLACEMENT */,key.loc));return true;}}});}const needFragmentWrapper=children.length!==1||children[0].type!==1/* ELEMENT */;const slotOutlet=isSlotOutlet(node)?node:isTemplate&&node.children.length===1&&isSlotOutlet(node.children[0])?node.children[0]// api-extractor somehow fails to infer this\n:null;if(slotOutlet){// <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\nchildBlock=slotOutlet.codegenNode;if(isTemplate&&keyProperty){// <template v-for=\"...\" :key=\"...\"><slot/></template>\n// we need to inject the key to the renderSlot() call.\n// the props for renderSlot is passed as the 3rd argument.\ninjectProp(childBlock,keyProperty,context);}}else if(needFragmentWrapper){// <template v-for=\"...\"> with text or multi-elements\n// should generate a fragment block for each loop\nchildBlock=createVNodeCall(context,helper(FRAGMENT),keyProperty?createObjectExpression([keyProperty]):undefined,node.children,64/* STABLE_FRAGMENT */+` /* ${PatchFlagNames[64/* STABLE_FRAGMENT */]} */`,undefined,undefined,true);}else{// Normal element v-for. Directly use the child's codegenNode\n// but mark it as a block.\nchildBlock=children[0].codegenNode;if(isTemplate&&keyProperty){injectProp(childBlock,keyProperty,context);}if(childBlock.isBlock!==!isStableFragment){if(childBlock.isBlock){// switch from block to vnode\nremoveHelper(OPEN_BLOCK);removeHelper(CREATE_BLOCK);}else{// switch from vnode to block\nremoveHelper(CREATE_VNODE);}}childBlock.isBlock=!isStableFragment;if(childBlock.isBlock){helper(OPEN_BLOCK);helper(CREATE_BLOCK);}else{helper(CREATE_VNODE);}}renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult),childBlock,true/* force newline */));};});});// target-agnostic transform used for both Client and SSR\nfunction processFor(node,dir,context,processCodegen){if(!dir.exp){context.onError(createCompilerError(30/* X_V_FOR_NO_EXPRESSION */,dir.loc));return;}const parseResult=parseForExpression(// can only be simple expression because vFor transform is applied\n// before expression transform.\ndir.exp,context);if(!parseResult){context.onError(createCompilerError(31/* X_V_FOR_MALFORMED_EXPRESSION */,dir.loc));return;}const{addIdentifiers,removeIdentifiers,scopes}=context;const{source,value,key,index}=parseResult;const forNode={type:11/* FOR */,loc:dir.loc,source,valueAlias:value,keyAlias:key,objectIndexAlias:index,parseResult,children:isTemplateNode(node)?node.children:[node]};context.replaceNode(forNode);// bookkeeping\nscopes.vFor++;const onExit=processCodegen&&processCodegen(forNode);return()=>{scopes.vFor--;if(onExit)onExit();};}const forAliasRE=/([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE=/,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;const stripParensRE=/^\\(|\\)$/g;function parseForExpression(input,context){const loc=input.loc;const exp=input.content;const inMatch=exp.match(forAliasRE);if(!inMatch)return;const[,LHS,RHS]=inMatch;const result={source:createAliasExpression(loc,RHS.trim(),exp.indexOf(RHS,LHS.length)),value:undefined,key:undefined,index:undefined};{validateBrowserExpression(result.source,context);}let valueContent=LHS.trim().replace(stripParensRE,'').trim();const trimmedOffset=LHS.indexOf(valueContent);const iteratorMatch=valueContent.match(forIteratorRE);if(iteratorMatch){valueContent=valueContent.replace(forIteratorRE,'').trim();const keyContent=iteratorMatch[1].trim();let keyOffset;if(keyContent){keyOffset=exp.indexOf(keyContent,trimmedOffset+valueContent.length);result.key=createAliasExpression(loc,keyContent,keyOffset);{validateBrowserExpression(result.key,context,true);}}if(iteratorMatch[2]){const indexContent=iteratorMatch[2].trim();if(indexContent){result.index=createAliasExpression(loc,indexContent,exp.indexOf(indexContent,result.key?keyOffset+keyContent.length:trimmedOffset+valueContent.length));{validateBrowserExpression(result.index,context,true);}}}}if(valueContent){result.value=createAliasExpression(loc,valueContent,trimmedOffset);{validateBrowserExpression(result.value,context,true);}}return result;}function createAliasExpression(range,content,offset){return createSimpleExpression(content,false,getInnerRange(range,offset,content.length));}function createForLoopParams({value,key,index}){const params=[];if(value){params.push(value);}if(key){if(!value){params.push(createSimpleExpression(`_`,false));}params.push(key);}if(index){if(!key){if(!value){params.push(createSimpleExpression(`_`,false));}params.push(createSimpleExpression(`__`,false));}params.push(index);}return params;}const defaultFallback=createSimpleExpression(`undefined`,false);// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nconst trackSlotScopes=(node,context)=>{if(node.type===1/* ELEMENT */&&(node.tagType===1/* COMPONENT */||node.tagType===3/* TEMPLATE */)){// We are only checking non-empty v-slot here\n// since we only care about slots that introduce scope variables.\nconst vSlot=findDir(node,'slot');if(vSlot){vSlot.exp;context.scopes.vSlot++;return()=>{context.scopes.vSlot--;};}}};const buildClientSlotFn=(props,children,loc)=>createFunctionExpression(props,children,false/* newline */,true/* isSlot */,children.length?children[0].loc:loc);// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node,context,buildSlotFn=buildClientSlotFn){context.helper(WITH_CTX);const{children,loc}=node;const slotsProperties=[];const dynamicSlots=[];const buildDefaultSlotProperty=(props,children)=>createObjectProperty(`default`,buildSlotFn(props,children,loc));// If the slot is inside a v-for or another v-slot, force it to be dynamic\n// since it likely uses a scope variable.\nlet hasDynamicSlots=context.scopes.vSlot>0||context.scopes.vFor>0;// 1. Check for slot with slotProps on component itself.\n//    <Comp v-slot=\"{ prop }\"/>\nconst onComponentSlot=findDir(node,'slot',true);if(onComponentSlot){const{arg,exp}=onComponentSlot;if(arg&&!isStaticExp(arg)){hasDynamicSlots=true;}slotsProperties.push(createObjectProperty(arg||createSimpleExpression('default',true),buildSlotFn(exp,children,loc)));}// 2. Iterate through children and check for template slots\n//    <template v-slot:foo=\"{ prop }\">\nlet hasTemplateSlots=false;let hasNamedDefaultSlot=false;const implicitDefaultChildren=[];const seenSlotNames=new Set();for(let i=0;i<children.length;i++){const slotElement=children[i];let slotDir;if(!isTemplateNode(slotElement)||!(slotDir=findDir(slotElement,'slot',true))){// not a <template v-slot>, skip.\nif(slotElement.type!==3/* COMMENT */){implicitDefaultChildren.push(slotElement);}continue;}if(onComponentSlot){// already has on-component slot - this is incorrect usage.\ncontext.onError(createCompilerError(36/* X_V_SLOT_MIXED_SLOT_USAGE */,slotDir.loc));break;}hasTemplateSlots=true;const{children:slotChildren,loc:slotLoc}=slotElement;const{arg:slotName=createSimpleExpression(`default`,true),exp:slotProps,loc:dirLoc}=slotDir;// check if name is dynamic.\nlet staticSlotName;if(isStaticExp(slotName)){staticSlotName=slotName?slotName.content:`default`;}else{hasDynamicSlots=true;}const slotFunction=buildSlotFn(slotProps,slotChildren,slotLoc);// check if this slot is conditional (v-if/v-for)\nlet vIf;let vElse;let vFor;if(vIf=findDir(slotElement,'if')){hasDynamicSlots=true;dynamicSlots.push(createConditionalExpression(vIf.exp,buildDynamicSlot(slotName,slotFunction),defaultFallback));}else if(vElse=findDir(slotElement,/^else(-if)?$/,true/* allowEmpty */)){// find adjacent v-if\nlet j=i;let prev;while(j--){prev=children[j];if(prev.type!==3/* COMMENT */){break;}}if(prev&&isTemplateNode(prev)&&findDir(prev,'if')){// remove node\nchildren.splice(i,1);i--;// attach this slot to previous conditional\nlet conditional=dynamicSlots[dynamicSlots.length-1];while(conditional.alternate.type===19/* JS_CONDITIONAL_EXPRESSION */){conditional=conditional.alternate;}conditional.alternate=vElse.exp?createConditionalExpression(vElse.exp,buildDynamicSlot(slotName,slotFunction),defaultFallback):buildDynamicSlot(slotName,slotFunction);}else{context.onError(createCompilerError(29/* X_V_ELSE_NO_ADJACENT_IF */,vElse.loc));}}else if(vFor=findDir(slotElement,'for')){hasDynamicSlots=true;const parseResult=vFor.parseResult||parseForExpression(vFor.exp,context);if(parseResult){// Render the dynamic slots as an array and add it to the createSlot()\n// args. The runtime knows how to handle it appropriately.\ndynamicSlots.push(createCallExpression(context.helper(RENDER_LIST),[parseResult.source,createFunctionExpression(createForLoopParams(parseResult),buildDynamicSlot(slotName,slotFunction),true/* force newline */)]));}else{context.onError(createCompilerError(31/* X_V_FOR_MALFORMED_EXPRESSION */,vFor.loc));}}else{// check duplicate static names\nif(staticSlotName){if(seenSlotNames.has(staticSlotName)){context.onError(createCompilerError(37/* X_V_SLOT_DUPLICATE_SLOT_NAMES */,dirLoc));continue;}seenSlotNames.add(staticSlotName);if(staticSlotName==='default'){hasNamedDefaultSlot=true;}}slotsProperties.push(createObjectProperty(slotName,slotFunction));}}if(!onComponentSlot){if(!hasTemplateSlots){// implicit default slot (on component)\nslotsProperties.push(buildDefaultSlotProperty(undefined,children));}else if(implicitDefaultChildren.length){// implicit default slot (mixed with named slots)\nif(hasNamedDefaultSlot){context.onError(createCompilerError(38/* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */,implicitDefaultChildren[0].loc));}else{slotsProperties.push(buildDefaultSlotProperty(undefined,implicitDefaultChildren));}}}const slotFlag=hasDynamicSlots?2/* DYNAMIC */:hasForwardedSlots(node.children)?3/* FORWARDED */:1/* STABLE */;let slots=createObjectExpression(slotsProperties.concat(createObjectProperty(`_`,// 2 = compiled but dynamic = can skip normalization, but must run diff\n// 1 = compiled and static = can skip normalization AND diff as optimized\ncreateSimpleExpression(slotFlag+` /* ${slotFlagsText[slotFlag]} */`,false))),loc);if(dynamicSlots.length){slots=createCallExpression(context.helper(CREATE_SLOTS),[slots,createArrayExpression(dynamicSlots)]);}return{slots,hasDynamicSlots};}function buildDynamicSlot(name,fn){return createObjectExpression([createObjectProperty(`name`,name),createObjectProperty(`fn`,fn)]);}function hasForwardedSlots(children){for(let i=0;i<children.length;i++){const child=children[i];switch(child.type){case 1/* ELEMENT */:if(child.tagType===2/* SLOT */||child.tagType===0/* ELEMENT */&&hasForwardedSlots(child.children)){return true;}break;case 9/* IF */:if(hasForwardedSlots(child.branches))return true;break;case 10/* IF_BRANCH */:case 11/* FOR */:if(hasForwardedSlots(child.children))return true;break;}}return false;}// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap=new WeakMap();// generate a JavaScript AST for this element's codegen\nconst transformElement=(node,context)=>{// perform the work on exit, after all child expressions have been\n// processed and merged.\nreturn function postTransformElement(){node=context.currentNode;if(!(node.type===1/* ELEMENT */&&(node.tagType===0/* ELEMENT */||node.tagType===1/* COMPONENT */))){return;}const{tag,props}=node;const isComponent=node.tagType===1/* COMPONENT */;// The goal of the transform is to create a codegenNode implementing the\n// VNodeCall interface.\nconst vnodeTag=isComponent?resolveComponentType(node,context):`\"${tag}\"`;const isDynamicComponent=isObject(vnodeTag)&&vnodeTag.callee===RESOLVE_DYNAMIC_COMPONENT;let vnodeProps;let vnodeChildren;let vnodePatchFlag;let patchFlag=0;let vnodeDynamicProps;let dynamicPropNames;let vnodeDirectives;let shouldUseBlock=// dynamic component may resolve to plain elements\nisDynamicComponent||vnodeTag===TELEPORT||vnodeTag===SUSPENSE||!isComponent&&(// <svg> and <foreignObject> must be forced into blocks so that block\n// updates inside get proper isSVG flag at runtime. (#639, #643)\n// This is technically web-specific, but splitting the logic out of core\n// leads to too much unnecessary complexity.\ntag==='svg'||tag==='foreignObject'||// #938: elements with dynamic keys should be forced into blocks\nfindProp(node,'key',true));// props\nif(props.length>0){const propsBuildResult=buildProps(node,context);vnodeProps=propsBuildResult.props;patchFlag=propsBuildResult.patchFlag;dynamicPropNames=propsBuildResult.dynamicPropNames;const directives=propsBuildResult.directives;vnodeDirectives=directives&&directives.length?createArrayExpression(directives.map(dir=>buildDirectiveArgs(dir,context))):undefined;}// children\nif(node.children.length>0){if(vnodeTag===KEEP_ALIVE){// Although a built-in component, we compile KeepAlive with raw children\n// instead of slot functions so that it can be used inside Transition\n// or other Transition-wrapping HOCs.\n// To ensure correct updates with block optimizations, we need to:\n// 1. Force keep-alive into a block. This avoids its children being\n//    collected by a parent block.\nshouldUseBlock=true;// 2. Force keep-alive to always be updated, since it uses raw children.\npatchFlag|=1024/* DYNAMIC_SLOTS */;if(node.children.length>1){context.onError(createCompilerError(44/* X_KEEP_ALIVE_INVALID_CHILDREN */,{start:node.children[0].loc.start,end:node.children[node.children.length-1].loc.end,source:''}));}}const shouldBuildAsSlots=isComponent&&// Teleport is not a real component and has dedicated runtime handling\nvnodeTag!==TELEPORT&&// explained above.\nvnodeTag!==KEEP_ALIVE;if(shouldBuildAsSlots){const{slots,hasDynamicSlots}=buildSlots(node,context);vnodeChildren=slots;if(hasDynamicSlots){patchFlag|=1024/* DYNAMIC_SLOTS */;}}else if(node.children.length===1&&vnodeTag!==TELEPORT){const child=node.children[0];const type=child.type;// check for dynamic text children\nconst hasDynamicTextChild=type===5/* INTERPOLATION */||type===8/* COMPOUND_EXPRESSION */;if(hasDynamicTextChild&&getConstantType(child,context)===0/* NOT_CONSTANT */){patchFlag|=1/* TEXT */;}// pass directly if the only child is a text node\n// (plain / interpolation / expression)\nif(hasDynamicTextChild||type===2/* TEXT */){vnodeChildren=child;}else{vnodeChildren=node.children;}}else{vnodeChildren=node.children;}}// patchFlag & dynamicPropNames\nif(patchFlag!==0){{if(patchFlag<0){// special flags (negative and mutually exclusive)\nvnodePatchFlag=patchFlag+` /* ${PatchFlagNames[patchFlag]} */`;}else{// bitwise flags\nconst flagNames=Object.keys(PatchFlagNames).map(Number).filter(n=>n>0&&patchFlag&n).map(n=>PatchFlagNames[n]).join(`, `);vnodePatchFlag=patchFlag+` /* ${flagNames} */`;}}if(dynamicPropNames&&dynamicPropNames.length){vnodeDynamicProps=stringifyDynamicPropNames(dynamicPropNames);}}node.codegenNode=createVNodeCall(context,vnodeTag,vnodeProps,vnodeChildren,vnodePatchFlag,vnodeDynamicProps,vnodeDirectives,!!shouldUseBlock,false/* disableTracking */,node.loc);};};function resolveComponentType(node,context,ssr=false){const{tag}=node;// 1. dynamic component\nconst isProp=isComponentTag(tag)?findProp(node,'is'):findDir(node,'is');if(isProp){const exp=isProp.type===6/* ATTRIBUTE */?isProp.value&&createSimpleExpression(isProp.value.content,true):isProp.exp;if(exp){return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT),[exp]);}}// 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\nconst builtIn=isCoreComponent(tag)||context.isBuiltInComponent(tag);if(builtIn){// built-ins are simply fallthroughs / have special handling during ssr\n// so we don't need to import their runtime equivalents\nif(!ssr)context.helper(builtIn);return builtIn;}// 5. user component (resolve)\ncontext.helper(RESOLVE_COMPONENT);context.components.add(tag);return toValidAssetId(tag,`component`);}function buildProps(node,context,props=node.props,ssr=false){const{tag,loc:elementLoc}=node;const isComponent=node.tagType===1/* COMPONENT */;let properties=[];const mergeArgs=[];const runtimeDirectives=[];// patchFlag analysis\nlet patchFlag=0;let hasRef=false;let hasClassBinding=false;let hasStyleBinding=false;let hasHydrationEventBinding=false;let hasDynamicKeys=false;let hasVnodeHook=false;const dynamicPropNames=[];const analyzePatchFlag=({key,value})=>{if(isStaticExp(key)){const name=key.content;const isEventHandler=isOn(name);if(!isComponent&&isEventHandler&&// omit the flag for click handlers because hydration gives click\n// dedicated fast path.\nname.toLowerCase()!=='onclick'&&// omit v-model handlers\nname!=='onUpdate:modelValue'&&// omit onVnodeXXX hooks\n!isReservedProp(name)){hasHydrationEventBinding=true;}if(isEventHandler&&isReservedProp(name)){hasVnodeHook=true;}if(value.type===20/* JS_CACHE_EXPRESSION */||(value.type===4/* SIMPLE_EXPRESSION */||value.type===8/* COMPOUND_EXPRESSION */)&&getConstantType(value,context)>0){// skip if the prop is a cached handler or has constant value\nreturn;}if(name==='ref'){hasRef=true;}else if(name==='class'&&!isComponent){hasClassBinding=true;}else if(name==='style'&&!isComponent){hasStyleBinding=true;}else if(name!=='key'&&!dynamicPropNames.includes(name)){dynamicPropNames.push(name);}}else{hasDynamicKeys=true;}};for(let i=0;i<props.length;i++){// static attribute\nconst prop=props[i];if(prop.type===6/* ATTRIBUTE */){const{loc,name,value}=prop;let isStatic=true;if(name==='ref'){hasRef=true;}// skip :is on <component>\nif(name==='is'&&isComponentTag(tag)){continue;}properties.push(createObjectProperty(createSimpleExpression(name,true,getInnerRange(loc,0,name.length)),createSimpleExpression(value?value.content:'',isStatic,value?value.loc:loc)));}else{// directives\nconst{name,arg,exp,loc}=prop;const isBind=name==='bind';const isOn=name==='on';// skip v-slot - it is handled by its dedicated transform.\nif(name==='slot'){if(!isComponent){context.onError(createCompilerError(39/* X_V_SLOT_MISPLACED */,loc));}continue;}// skip v-once - it is handled by its dedicated transform.\nif(name==='once'){continue;}// skip v-is and :is on <component>\nif(name==='is'||isBind&&isComponentTag(tag)&&isBindKey(arg,'is')){continue;}// skip v-on in SSR compilation\nif(isOn&&ssr){continue;}// special case for v-bind and v-on with no argument\nif(!arg&&(isBind||isOn)){hasDynamicKeys=true;if(exp){if(properties.length){mergeArgs.push(createObjectExpression(dedupeProperties(properties),elementLoc));properties=[];}if(isBind){mergeArgs.push(exp);}else{// v-on=\"obj\" -> toHandlers(obj)\nmergeArgs.push({type:14/* JS_CALL_EXPRESSION */,loc,callee:context.helper(TO_HANDLERS),arguments:[exp]});}}else{context.onError(createCompilerError(isBind?33/* X_V_BIND_NO_EXPRESSION */:34/* X_V_ON_NO_EXPRESSION */,loc));}continue;}const directiveTransform=context.directiveTransforms[name];if(directiveTransform){// has built-in directive transform.\nconst{props,needRuntime}=directiveTransform(prop,node,context);!ssr&&props.forEach(analyzePatchFlag);properties.push(...props);if(needRuntime){runtimeDirectives.push(prop);if(isSymbol(needRuntime)){directiveImportMap.set(prop,needRuntime);}}}else{// no built-in transform, this is a user custom directive.\nruntimeDirectives.push(prop);}}}let propsExpression=undefined;// has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\nif(mergeArgs.length){if(properties.length){mergeArgs.push(createObjectExpression(dedupeProperties(properties),elementLoc));}if(mergeArgs.length>1){propsExpression=createCallExpression(context.helper(MERGE_PROPS),mergeArgs,elementLoc);}else{// single v-bind with nothing else - no need for a mergeProps call\npropsExpression=mergeArgs[0];}}else if(properties.length){propsExpression=createObjectExpression(dedupeProperties(properties),elementLoc);}// patchFlag analysis\nif(hasDynamicKeys){patchFlag|=16/* FULL_PROPS */;}else{if(hasClassBinding){patchFlag|=2/* CLASS */;}if(hasStyleBinding){patchFlag|=4/* STYLE */;}if(dynamicPropNames.length){patchFlag|=8/* PROPS */;}if(hasHydrationEventBinding){patchFlag|=32/* HYDRATE_EVENTS */;}}if((patchFlag===0||patchFlag===32/* HYDRATE_EVENTS */)&&(hasRef||hasVnodeHook||runtimeDirectives.length>0)){patchFlag|=512/* NEED_PATCH */;}return{props:propsExpression,directives:runtimeDirectives,patchFlag,dynamicPropNames};}// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties){const knownProps=new Map();const deduped=[];for(let i=0;i<properties.length;i++){const prop=properties[i];// dynamic keys are always allowed\nif(prop.key.type===8/* COMPOUND_EXPRESSION */||!prop.key.isStatic){deduped.push(prop);continue;}const name=prop.key.content;const existing=knownProps.get(name);if(existing){if(name==='style'||name==='class'||name.startsWith('on')){mergeAsArray(existing,prop);}// unexpected duplicate, should have emitted error during parse\n}else{knownProps.set(name,prop);deduped.push(prop);}}return deduped;}function mergeAsArray(existing,incoming){if(existing.value.type===17/* JS_ARRAY_EXPRESSION */){existing.value.elements.push(incoming.value);}else{existing.value=createArrayExpression([existing.value,incoming.value],existing.loc);}}function buildDirectiveArgs(dir,context){const dirArgs=[];const runtime=directiveImportMap.get(dir);if(runtime){// built-in directive with runtime\ndirArgs.push(context.helperString(runtime));}else{{// inject statement for resolving directive\ncontext.helper(RESOLVE_DIRECTIVE);context.directives.add(dir.name);dirArgs.push(toValidAssetId(dir.name,`directive`));}}const{loc}=dir;if(dir.exp)dirArgs.push(dir.exp);if(dir.arg){if(!dir.exp){dirArgs.push(`void 0`);}dirArgs.push(dir.arg);}if(Object.keys(dir.modifiers).length){if(!dir.arg){if(!dir.exp){dirArgs.push(`void 0`);}dirArgs.push(`void 0`);}const trueExpression=createSimpleExpression(`true`,false,loc);dirArgs.push(createObjectExpression(dir.modifiers.map(modifier=>createObjectProperty(modifier,trueExpression)),loc));}return createArrayExpression(dirArgs,dir.loc);}function stringifyDynamicPropNames(props){let propsNamesString=`[`;for(let i=0,l=props.length;i<l;i++){propsNamesString+=JSON.stringify(props[i]);if(i<l-1)propsNamesString+=', ';}return propsNamesString+`]`;}function isComponentTag(tag){return tag[0].toLowerCase()+tag.slice(1)==='component';}const transformSlotOutlet=(node,context)=>{if(isSlotOutlet(node)){const{children,loc}=node;const{slotName,slotProps}=processSlotOutlet(node,context);const slotArgs=[context.prefixIdentifiers?`_ctx.$slots`:`$slots`,slotName];if(slotProps){slotArgs.push(slotProps);}if(children.length){if(!slotProps){slotArgs.push(`{}`);}slotArgs.push(createFunctionExpression([],children,false,false,loc));}if(context.scopeId&&!context.slotted){if(!slotProps){slotArgs.push(`{}`);}if(!children.length){slotArgs.push(`undefined`);}slotArgs.push(`true`);}node.codegenNode=createCallExpression(context.helper(RENDER_SLOT),slotArgs,loc);}};function processSlotOutlet(node,context){let slotName=`\"default\"`;let slotProps=undefined;const nonNameProps=[];for(let i=0;i<node.props.length;i++){const p=node.props[i];if(p.type===6/* ATTRIBUTE */){if(p.value){if(p.name==='name'){slotName=JSON.stringify(p.value.content);}else{p.name=camelize(p.name);nonNameProps.push(p);}}}else{if(p.name==='bind'&&isBindKey(p.arg,'name')){if(p.exp)slotName=p.exp;}else{if(p.name==='bind'&&p.arg&&isStaticExp(p.arg)){p.arg.content=camelize(p.arg.content);}nonNameProps.push(p);}}}if(nonNameProps.length>0){const{props,directives}=buildProps(node,context,nonNameProps);slotProps=props;if(directives.length){context.onError(createCompilerError(35/* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */,directives[0].loc));}}return{slotName,slotProps};}const fnExpRE=/^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/;const transformOn=(dir,node,context,augmentor)=>{const{loc,modifiers,arg}=dir;if(!dir.exp&&!modifiers.length){context.onError(createCompilerError(34/* X_V_ON_NO_EXPRESSION */,loc));}let eventName;if(arg.type===4/* SIMPLE_EXPRESSION */){if(arg.isStatic){const rawName=arg.content;// for all event listeners, auto convert it to camelCase. See issue #2249\neventName=createSimpleExpression(toHandlerKey(camelize(rawName)),true,arg.loc);}else{// #2388\neventName=createCompoundExpression([`${context.helperString(TO_HANDLER_KEY)}(`,arg,`)`]);}}else{// already a compound expression.\neventName=arg;eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);eventName.children.push(`)`);}// handler processing\nlet exp=dir.exp;if(exp&&!exp.content.trim()){exp=undefined;}let shouldCache=context.cacheHandlers&&!exp;if(exp){const isMemberExp=isMemberExpression(exp.content);const isInlineStatement=!(isMemberExp||fnExpRE.test(exp.content));const hasMultipleStatements=exp.content.includes(`;`);{validateBrowserExpression(exp,context,false,hasMultipleStatements);}if(isInlineStatement||shouldCache&&isMemberExp){// wrap inline statement in a function expression\nexp=createCompoundExpression([`${isInlineStatement?`$event`:`${``}(...args)`} => ${hasMultipleStatements?`{`:`(`}`,exp,hasMultipleStatements?`}`:`)`]);}}let ret={props:[createObjectProperty(eventName,exp||createSimpleExpression(`() => {}`,false,loc))]};// apply extended compiler augmentor\nif(augmentor){ret=augmentor(ret);}if(shouldCache){// cache handlers so that it's always the same handler being passed down.\n// this avoids unnecessary re-renders when users use inline handlers on\n// components.\nret.props[0].value=context.cache(ret.props[0].value);}return ret;};// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nconst transformBind=(dir,node,context)=>{const{exp,modifiers,loc}=dir;const arg=dir.arg;if(arg.type!==4/* SIMPLE_EXPRESSION */){arg.children.unshift(`(`);arg.children.push(`) || \"\"`);}else if(!arg.isStatic){arg.content=`${arg.content} || \"\"`;}// .prop is no longer necessary due to new patch behavior\n// .sync is replaced by v-model:arg\nif(modifiers.includes('camel')){if(arg.type===4/* SIMPLE_EXPRESSION */){if(arg.isStatic){arg.content=camelize(arg.content);}else{arg.content=`${context.helperString(CAMELIZE)}(${arg.content})`;}}else{arg.children.unshift(`${context.helperString(CAMELIZE)}(`);arg.children.push(`)`);}}if(!exp||exp.type===4/* SIMPLE_EXPRESSION */&&!exp.content.trim()){context.onError(createCompilerError(33/* X_V_BIND_NO_EXPRESSION */,loc));return{props:[createObjectProperty(arg,createSimpleExpression('',true,loc))]};}return{props:[createObjectProperty(arg,exp)]};};// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nconst transformText=(node,context)=>{if(node.type===0/* ROOT */||node.type===1/* ELEMENT */||node.type===11/* FOR */||node.type===10/* IF_BRANCH */){// perform the transform on node exit so that all expressions have already\n// been processed.\nreturn()=>{const children=node.children;let currentContainer=undefined;let hasText=false;for(let i=0;i<children.length;i++){const child=children[i];if(isText(child)){hasText=true;for(let j=i+1;j<children.length;j++){const next=children[j];if(isText(next)){if(!currentContainer){currentContainer=children[i]={type:8/* COMPOUND_EXPRESSION */,loc:child.loc,children:[child]};}// merge adjacent text node into current\ncurrentContainer.children.push(` + `,next);children.splice(j,1);j--;}else{currentContainer=undefined;break;}}}}if(!hasText||// if this is a plain element with a single text child, leave it\n// as-is since the runtime has dedicated fast path for this by directly\n// setting textContent of the element.\n// for component root it's always normalized anyway.\nchildren.length===1&&(node.type===0/* ROOT */||node.type===1/* ELEMENT */&&node.tagType===0/* ELEMENT */)){return;}// pre-convert text nodes into createTextVNode(text) calls to avoid\n// runtime normalization.\nfor(let i=0;i<children.length;i++){const child=children[i];if(isText(child)||child.type===8/* COMPOUND_EXPRESSION */){const callArgs=[];// createTextVNode defaults to single whitespace, so if it is a\n// single space the code could be an empty call to save bytes.\nif(child.type!==2/* TEXT */||child.content!==' '){callArgs.push(child);}// mark dynamic text with flag so it gets patched inside a block\nif(!context.ssr&&getConstantType(child,context)===0/* NOT_CONSTANT */){callArgs.push(1/* TEXT */+` /* ${PatchFlagNames[1/* TEXT */]} */`);}children[i]={type:12/* TEXT_CALL */,content:child,loc:child.loc,codegenNode:createCallExpression(context.helper(CREATE_TEXT),callArgs)};}}};}};const seen=new WeakSet();const transformOnce=(node,context)=>{if(node.type===1/* ELEMENT */&&findDir(node,'once',true)){if(seen.has(node)){return;}seen.add(node);context.helper(SET_BLOCK_TRACKING);return()=>{const cur=context.currentNode;if(cur.codegenNode){cur.codegenNode=context.cache(cur.codegenNode,true/* isVNode */);}};}};const transformModel=(dir,node,context)=>{const{exp,arg}=dir;if(!exp){context.onError(createCompilerError(40/* X_V_MODEL_NO_EXPRESSION */,dir.loc));return createTransformProps();}const rawExp=exp.loc.source;const expString=exp.type===4/* SIMPLE_EXPRESSION */?exp.content:rawExp;// im SFC <script setup> inline mode, the exp may have been transformed into\n// _unref(exp)\ncontext.bindingMetadata[rawExp];const maybeRef=!true/* SETUP_CONST */;if(!isMemberExpression(expString)&&!maybeRef){context.onError(createCompilerError(41/* X_V_MODEL_MALFORMED_EXPRESSION */,exp.loc));return createTransformProps();}const propName=arg?arg:createSimpleExpression('modelValue',true);const eventName=arg?isStaticExp(arg)?`onUpdate:${arg.content}`:createCompoundExpression(['\"onUpdate:\" + ',arg]):`onUpdate:modelValue`;let assignmentExp;const eventArg=context.isTS?`($event: any)`:`$event`;{assignmentExp=createCompoundExpression([`${eventArg} => (`,exp,` = $event)`]);}const props=[// modelValue: foo\ncreateObjectProperty(propName,dir.exp),// \"onUpdate:modelValue\": $event => (foo = $event)\ncreateObjectProperty(eventName,assignmentExp)];// modelModifiers: { foo: true, \"bar-baz\": true }\nif(dir.modifiers.length&&node.tagType===1/* COMPONENT */){const modifiers=dir.modifiers.map(m=>(isSimpleIdentifier(m)?m:JSON.stringify(m))+`: true`).join(`, `);const modifiersKey=arg?isStaticExp(arg)?`${arg.content}Modifiers`:createCompoundExpression([arg,' + \"Modifiers\"']):`modelModifiers`;props.push(createObjectProperty(modifiersKey,createSimpleExpression(`{ ${modifiers} }`,false,dir.loc,2/* CAN_HOIST */)));}return createTransformProps(props);};function createTransformProps(props=[]){return{props};}function getBaseTransformPreset(prefixIdentifiers){return[[transformOnce,transformIf,transformFor,...[transformExpression],transformSlotOutlet,transformElement,trackSlotScopes,transformText],{on:transformOn,bind:transformBind,model:transformModel}];}// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template,options={}){const onError=options.onError||defaultOnError;const isModuleMode=options.mode==='module';/* istanbul ignore if */{if(options.prefixIdentifiers===true){onError(createCompilerError(45/* X_PREFIX_ID_NOT_SUPPORTED */));}else if(isModuleMode){onError(createCompilerError(46/* X_MODULE_MODE_NOT_SUPPORTED */));}}const prefixIdentifiers=!true;if(options.cacheHandlers){onError(createCompilerError(47/* X_CACHE_HANDLER_NOT_SUPPORTED */));}if(options.scopeId&&!isModuleMode){onError(createCompilerError(48/* X_SCOPE_ID_NOT_SUPPORTED */));}const ast=isString(template)?baseParse(template,options):template;const[nodeTransforms,directiveTransforms]=getBaseTransformPreset();transform(ast,extend({},options,{prefixIdentifiers,nodeTransforms:[...nodeTransforms,...(options.nodeTransforms||[])// user transforms\n],directiveTransforms:extend({},directiveTransforms,options.directiveTransforms||{}// user transforms\n)}));return generate(ast,extend({},options,{prefixIdentifiers}));}const noopDirectiveTransform=()=>({props:[]});const V_MODEL_RADIO=Symbol(`vModelRadio`);const V_MODEL_CHECKBOX=Symbol(`vModelCheckbox`);const V_MODEL_TEXT=Symbol(`vModelText`);const V_MODEL_SELECT=Symbol(`vModelSelect`);const V_MODEL_DYNAMIC=Symbol(`vModelDynamic`);const V_ON_WITH_MODIFIERS=Symbol(`vOnModifiersGuard`);const V_ON_WITH_KEYS=Symbol(`vOnKeysGuard`);const V_SHOW=Symbol(`vShow`);const TRANSITION$1=Symbol(`Transition`);const TRANSITION_GROUP=Symbol(`TransitionGroup`);registerRuntimeHelpers({[V_MODEL_RADIO]:`vModelRadio`,[V_MODEL_CHECKBOX]:`vModelCheckbox`,[V_MODEL_TEXT]:`vModelText`,[V_MODEL_SELECT]:`vModelSelect`,[V_MODEL_DYNAMIC]:`vModelDynamic`,[V_ON_WITH_MODIFIERS]:`withModifiers`,[V_ON_WITH_KEYS]:`withKeys`,[V_SHOW]:`vShow`,[TRANSITION$1]:`Transition`,[TRANSITION_GROUP]:`TransitionGroup`});/* eslint-disable no-restricted-globals */let decoder;function decodeHtmlBrowser(raw){(decoder||(decoder=document.createElement('div'))).innerHTML=raw;return decoder.textContent;}const isRawTextContainer=/*#__PURE__*/makeMap('style,iframe,script,noscript',true);const parserOptions={isVoidTag,isNativeTag:tag=>isHTMLTag(tag)||isSVGTag(tag),isPreTag:tag=>tag==='pre',decodeEntities:decodeHtmlBrowser,isBuiltInComponent:tag=>{if(isBuiltInType(tag,`Transition`)){return TRANSITION$1;}else if(isBuiltInType(tag,`TransitionGroup`)){return TRANSITION_GROUP;}},// https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\ngetNamespace(tag,parent){let ns=parent?parent.ns:0/* HTML */;if(parent&&ns===2/* MATH_ML */){if(parent.tag==='annotation-xml'){if(tag==='svg'){return 1/* SVG */;}if(parent.props.some(a=>a.type===6/* ATTRIBUTE */&&a.name==='encoding'&&a.value!=null&&(a.value.content==='text/html'||a.value.content==='application/xhtml+xml'))){ns=0/* HTML */;}}else if(/^m(?:[ions]|text)$/.test(parent.tag)&&tag!=='mglyph'&&tag!=='malignmark'){ns=0/* HTML */;}}else if(parent&&ns===1/* SVG */){if(parent.tag==='foreignObject'||parent.tag==='desc'||parent.tag==='title'){ns=0/* HTML */;}}if(ns===0/* HTML */){if(tag==='svg'){return 1/* SVG */;}if(tag==='math'){return 2/* MATH_ML */;}}return ns;},// https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\ngetTextMode({tag,ns}){if(ns===0/* HTML */){if(tag==='textarea'||tag==='title'){return 1/* RCDATA */;}if(isRawTextContainer(tag)){return 2/* RAWTEXT */;}}return 0/* DATA */;}};// Parse inline CSS strings for static style attributes into an object.\n// This is a NodeTransform since it works on the static `style` attribute and\n// converts it into a dynamic equivalent:\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\n// It is then processed by `transformElement` and included in the generated\n// props.\nconst transformStyle=node=>{if(node.type===1/* ELEMENT */){node.props.forEach((p,i)=>{if(p.type===6/* ATTRIBUTE */&&p.name==='style'&&p.value){// replace p with an expression node\nnode.props[i]={type:7/* DIRECTIVE */,name:`bind`,arg:createSimpleExpression(`style`,true,p.loc),exp:parseInlineCSS(p.value.content,p.loc),modifiers:[],loc:p.loc};}});}};const parseInlineCSS=(cssText,loc)=>{const normalized=parseStringStyle(cssText);return createSimpleExpression(JSON.stringify(normalized),false,loc,3/* CAN_STRINGIFY */);};function createDOMCompilerError(code,loc){return createCompilerError(code,loc,DOMErrorMessages);}const DOMErrorMessages={[49/* X_V_HTML_NO_EXPRESSION */]:`v-html is missing expression.`,[50/* X_V_HTML_WITH_CHILDREN */]:`v-html will override element children.`,[51/* X_V_TEXT_NO_EXPRESSION */]:`v-text is missing expression.`,[52/* X_V_TEXT_WITH_CHILDREN */]:`v-text will override element children.`,[53/* X_V_MODEL_ON_INVALID_ELEMENT */]:`v-model can only be used on <input>, <textarea> and <select> elements.`,[54/* X_V_MODEL_ARG_ON_ELEMENT */]:`v-model argument is not supported on plain elements.`,[55/* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]:`v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,[56/* X_V_MODEL_UNNECESSARY_VALUE */]:`Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,[57/* X_V_SHOW_NO_EXPRESSION */]:`v-show is missing expression.`,[58/* X_TRANSITION_INVALID_CHILDREN */]:`<Transition> expects exactly one child element or component.`,[59/* X_IGNORED_SIDE_EFFECT_TAG */]:`Tags with side effect (<script> and <style>) are ignored in client component templates.`};const transformVHtml=(dir,node,context)=>{const{exp,loc}=dir;if(!exp){context.onError(createDOMCompilerError(49/* X_V_HTML_NO_EXPRESSION */,loc));}if(node.children.length){context.onError(createDOMCompilerError(50/* X_V_HTML_WITH_CHILDREN */,loc));node.children.length=0;}return{props:[createObjectProperty(createSimpleExpression(`innerHTML`,true,loc),exp||createSimpleExpression('',true))]};};const transformVText=(dir,node,context)=>{const{exp,loc}=dir;if(!exp){context.onError(createDOMCompilerError(51/* X_V_TEXT_NO_EXPRESSION */,loc));}if(node.children.length){context.onError(createDOMCompilerError(52/* X_V_TEXT_WITH_CHILDREN */,loc));node.children.length=0;}return{props:[createObjectProperty(createSimpleExpression(`textContent`,true),exp?createCallExpression(context.helperString(TO_DISPLAY_STRING),[exp],loc):createSimpleExpression('',true))]};};const transformModel$1=(dir,node,context)=>{const baseResult=transformModel(dir,node,context);// base transform has errors OR component v-model (only need props)\nif(!baseResult.props.length||node.tagType===1/* COMPONENT */){return baseResult;}if(dir.arg){context.onError(createDOMCompilerError(54/* X_V_MODEL_ARG_ON_ELEMENT */,dir.arg.loc));}function checkDuplicatedValue(){const value=findProp(node,'value');if(value){context.onError(createDOMCompilerError(56/* X_V_MODEL_UNNECESSARY_VALUE */,value.loc));}}const{tag}=node;const isCustomElement=context.isCustomElement(tag);if(tag==='input'||tag==='textarea'||tag==='select'||isCustomElement){let directiveToUse=V_MODEL_TEXT;let isInvalidType=false;if(tag==='input'||isCustomElement){const type=findProp(node,`type`);if(type){if(type.type===7/* DIRECTIVE */){// :type=\"foo\"\ndirectiveToUse=V_MODEL_DYNAMIC;}else if(type.value){switch(type.value.content){case'radio':directiveToUse=V_MODEL_RADIO;break;case'checkbox':directiveToUse=V_MODEL_CHECKBOX;break;case'file':isInvalidType=true;context.onError(createDOMCompilerError(55/* X_V_MODEL_ON_FILE_INPUT_ELEMENT */,dir.loc));break;default:// text type\ncheckDuplicatedValue();break;}}}else if(hasDynamicKeyVBind(node)){// element has bindings with dynamic keys, which can possibly contain\n// \"type\".\ndirectiveToUse=V_MODEL_DYNAMIC;}else{// text type\ncheckDuplicatedValue();}}else if(tag==='select'){directiveToUse=V_MODEL_SELECT;}else{// textarea\ncheckDuplicatedValue();}// inject runtime directive\n// by returning the helper symbol via needRuntime\n// the import will replaced a resolveDirective call.\nif(!isInvalidType){baseResult.needRuntime=context.helper(directiveToUse);}}else{context.onError(createDOMCompilerError(53/* X_V_MODEL_ON_INVALID_ELEMENT */,dir.loc));}// native vmodel doesn't need the `modelValue` props since they are also\n// passed to the runtime as `binding.value`. removing it reduces code size.\nbaseResult.props=baseResult.props.filter(p=>!(p.key.type===4/* SIMPLE_EXPRESSION */&&p.key.content==='modelValue'));return baseResult;};const isEventOptionModifier=/*#__PURE__*/makeMap(`passive,once,capture`);const isNonKeyModifier=/*#__PURE__*/makeMap(// event propagation management\n`stop,prevent,self,`+// system modifiers + exact\n`ctrl,shift,alt,meta,exact,`+// mouse\n`middle`);// left & right could be mouse or key modifiers based on event type\nconst maybeKeyModifier=/*#__PURE__*/makeMap('left,right');const isKeyboardEvent=/*#__PURE__*/makeMap(`onkeyup,onkeydown,onkeypress`,true);const resolveModifiers=(key,modifiers)=>{const keyModifiers=[];const nonKeyModifiers=[];const eventOptionModifiers=[];for(let i=0;i<modifiers.length;i++){const modifier=modifiers[i];if(isEventOptionModifier(modifier)){// eventOptionModifiers: modifiers for addEventListener() options,\n// e.g. .passive & .capture\neventOptionModifiers.push(modifier);}else{// runtimeModifiers: modifiers that needs runtime guards\nif(maybeKeyModifier(modifier)){if(isStaticExp(key)){if(isKeyboardEvent(key.content)){keyModifiers.push(modifier);}else{nonKeyModifiers.push(modifier);}}else{keyModifiers.push(modifier);nonKeyModifiers.push(modifier);}}else{if(isNonKeyModifier(modifier)){nonKeyModifiers.push(modifier);}else{keyModifiers.push(modifier);}}}}return{keyModifiers,nonKeyModifiers,eventOptionModifiers};};const transformClick=(key,event)=>{const isStaticClick=isStaticExp(key)&&key.content.toLowerCase()==='onclick';return isStaticClick?createSimpleExpression(event,true):key.type!==4/* SIMPLE_EXPRESSION */?createCompoundExpression([`(`,key,`) === \"onClick\" ? \"${event}\" : (`,key,`)`]):key;};const transformOn$1=(dir,node,context)=>{return transformOn(dir,node,context,baseResult=>{const{modifiers}=dir;if(!modifiers.length)return baseResult;let{key,value:handlerExp}=baseResult.props[0];const{keyModifiers,nonKeyModifiers,eventOptionModifiers}=resolveModifiers(key,modifiers);// normalize click.right and click.middle since they don't actually fire\nif(nonKeyModifiers.includes('right')){key=transformClick(key,`onContextmenu`);}if(nonKeyModifiers.includes('middle')){key=transformClick(key,`onMouseup`);}if(nonKeyModifiers.length){handlerExp=createCallExpression(context.helper(V_ON_WITH_MODIFIERS),[handlerExp,JSON.stringify(nonKeyModifiers)]);}if(keyModifiers.length&&(// if event name is dynamic, always wrap with keys guard\n!isStaticExp(key)||isKeyboardEvent(key.content))){handlerExp=createCallExpression(context.helper(V_ON_WITH_KEYS),[handlerExp,JSON.stringify(keyModifiers)]);}if(eventOptionModifiers.length){const modifierPostfix=eventOptionModifiers.map(capitalize).join('');key=isStaticExp(key)?createSimpleExpression(`${key.content}${modifierPostfix}`,true):createCompoundExpression([`(`,key,`) + \"${modifierPostfix}\"`]);}return{props:[createObjectProperty(key,handlerExp)]};});};const transformShow=(dir,node,context)=>{const{exp,loc}=dir;if(!exp){context.onError(createDOMCompilerError(57/* X_V_SHOW_NO_EXPRESSION */,loc));}return{props:[],needRuntime:context.helper(V_SHOW)};};const warnTransitionChildren=(node,context)=>{if(node.type===1/* ELEMENT */&&node.tagType===1/* COMPONENT */){const component=context.isBuiltInComponent(node.tag);if(component===TRANSITION$1){return()=>{if(node.children.length&&hasMultipleChildren(node)){context.onError(createDOMCompilerError(58/* X_TRANSITION_INVALID_CHILDREN */,{start:node.children[0].loc.start,end:node.children[node.children.length-1].loc.end,source:''}));}};}}};function hasMultipleChildren(node){// #1352 filter out potential comment nodes.\nconst children=node.children=node.children.filter(c=>c.type!==3/* COMMENT */);const child=children[0];return children.length!==1||child.type===11/* FOR */||child.type===9/* IF */&&child.branches.some(hasMultipleChildren);}const ignoreSideEffectTags=(node,context)=>{if(node.type===1/* ELEMENT */&&node.tagType===0/* ELEMENT */&&(node.tag==='script'||node.tag==='style')){context.onError(createDOMCompilerError(59/* X_IGNORED_SIDE_EFFECT_TAG */,node.loc));context.removeNode();}};const DOMNodeTransforms=[transformStyle,...[warnTransitionChildren]];const DOMDirectiveTransforms={cloak:noopDirectiveTransform,html:transformVHtml,text:transformVText,model:transformModel$1,on:transformOn$1,show:transformShow};function compile$1(template,options={}){return baseCompile(template,extend({},parserOptions,options,{nodeTransforms:[// ignore <script> and <tag>\n// this is not put inside DOMNodeTransforms because that list is used\n// by compiler-ssr to generate vnode fallback branches\nignoreSideEffectTags,...DOMNodeTransforms,...(options.nodeTransforms||[])],directiveTransforms:extend({},DOMDirectiveTransforms,options.directiveTransforms||{}),transformHoist:null}));}// This entry is the \"full-build\" that includes both the runtime\n{initDev();}const compileCache=Object.create(null);function compileToFunction(template,options){if(!isString(template)){if(template.nodeType){template=template.innerHTML;}else{warn(`invalid template option: `,template);return NOOP;}}const key=template;const cached=compileCache[key];if(cached){return cached;}if(template[0]==='#'){const el=document.querySelector(template);if(!el){warn(`Template element not found or is empty: ${template}`);}// __UNSAFE__\n// Reason: potential execution of JS expressions in in-DOM template.\n// The user must make sure the in-DOM template is trusted. If it's rendered\n// by the server, the template should not contain any user data.\ntemplate=el?el.innerHTML:``;}const{code}=compile$1(template,extend({hoistStatic:true,onError(err){{const message=`Template compilation error: ${err.message}`;const codeFrame=err.loc&&generateCodeFrame(template,err.loc.start.offset,err.loc.end.offset);warn(codeFrame?`${message}\\n${codeFrame}`:message);}}},options));// The wildcard import results in a huge object with every export\n// with keys that cannot be mangled, and can be quite heavy size-wise.\n// In the global build we know `Vue` is available globally so we can avoid\n// the wildcard object.\nconst render=new Function(code)();render._rc=true;return compileCache[key]=render;}registerRuntimeCompiler(compileToFunction);exports.BaseTransition=BaseTransition;exports.Comment=Comment;exports.Fragment=Fragment;exports.KeepAlive=KeepAlive;exports.Static=Static;exports.Suspense=Suspense;exports.Teleport=Teleport;exports.Text=Text;exports.Transition=Transition;exports.TransitionGroup=TransitionGroup;exports.callWithAsyncErrorHandling=callWithAsyncErrorHandling;exports.callWithErrorHandling=callWithErrorHandling;exports.camelize=camelize;exports.capitalize=capitalize;exports.cloneVNode=cloneVNode;exports.compile=compileToFunction;exports.computed=computed$1;exports.createApp=createApp;exports.createBlock=createBlock;exports.createCommentVNode=createCommentVNode;exports.createHydrationRenderer=createHydrationRenderer;exports.createRenderer=createRenderer;exports.createSSRApp=createSSRApp;exports.createSlots=createSlots;exports.createStaticVNode=createStaticVNode;exports.createTextVNode=createTextVNode;exports.createVNode=createVNode;exports.customRef=customRef;exports.defineAsyncComponent=defineAsyncComponent;exports.defineComponent=defineComponent;exports.defineEmit=defineEmit;exports.defineProps=defineProps;exports.getCurrentInstance=getCurrentInstance;exports.getTransitionRawChildren=getTransitionRawChildren;exports.h=h;exports.handleError=handleError;exports.hydrate=hydrate;exports.initCustomFormatter=initCustomFormatter;exports.inject=inject;exports.isProxy=isProxy;exports.isReactive=isReactive;exports.isReadonly=isReadonly;exports.isRef=isRef;exports.isRuntimeOnly=isRuntimeOnly;exports.isVNode=isVNode;exports.markRaw=markRaw;exports.mergeProps=mergeProps;exports.nextTick=nextTick;exports.onActivated=onActivated;exports.onBeforeMount=onBeforeMount;exports.onBeforeUnmount=onBeforeUnmount;exports.onBeforeUpdate=onBeforeUpdate;exports.onDeactivated=onDeactivated;exports.onErrorCaptured=onErrorCaptured;exports.onMounted=onMounted;exports.onRenderTracked=onRenderTracked;exports.onRenderTriggered=onRenderTriggered;exports.onUnmounted=onUnmounted;exports.onUpdated=onUpdated;exports.openBlock=openBlock;exports.popScopeId=popScopeId;exports.provide=provide;exports.proxyRefs=proxyRefs;exports.pushScopeId=pushScopeId;exports.queuePostFlushCb=queuePostFlushCb;exports.reactive=reactive;exports.readonly=readonly;exports.ref=ref;exports.registerRuntimeCompiler=registerRuntimeCompiler;exports.render=render;exports.renderList=renderList;exports.renderSlot=renderSlot;exports.resolveComponent=resolveComponent;exports.resolveDirective=resolveDirective;exports.resolveDynamicComponent=resolveDynamicComponent;exports.resolveTransitionHooks=resolveTransitionHooks;exports.setBlockTracking=setBlockTracking;exports.setDevtoolsHook=setDevtoolsHook;exports.setTransitionHooks=setTransitionHooks;exports.shallowReactive=shallowReactive;exports.shallowReadonly=shallowReadonly;exports.shallowRef=shallowRef;exports.ssrContextKey=ssrContextKey;exports.ssrUtils=ssrUtils;exports.toDisplayString=toDisplayString;exports.toHandlerKey=toHandlerKey;exports.toHandlers=toHandlers;exports.toRaw=toRaw;exports.toRef=toRef;exports.toRefs=toRefs;exports.transformVNodeArgs=transformVNodeArgs;exports.triggerRef=triggerRef;exports.unref=unref;exports.useContext=useContext;exports.useCssModule=useCssModule;exports.useCssVars=useCssVars;exports.useSSRContext=useSSRContext;exports.useTransitionState=useTransitionState;exports.vModelCheckbox=vModelCheckbox;exports.vModelDynamic=vModelDynamic;exports.vModelRadio=vModelRadio;exports.vModelSelect=vModelSelect;exports.vModelText=vModelText;exports.vShow=vShow;exports.version=version;exports.warn=warn;exports.watch=watch;exports.watchEffect=watchEffect;exports.withCtx=withCtx;exports.withDirectives=withDirectives;exports.withKeys=withKeys;exports.withModifiers=withModifiers;exports.withScopeId=withScopeId;Object.defineProperty(exports,'__esModule',{value:true});return exports;}({});\n//# sourceMappingURL=vue@3.0.11.js.map"],"file":"vue@3.0.11.js"}
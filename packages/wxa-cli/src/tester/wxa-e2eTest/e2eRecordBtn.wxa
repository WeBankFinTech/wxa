<template>
    <view >
        <button class="e2e-startRecord" style="top: {{top}}px; left: {{left}}px;" data-e2ebtn="true" catchtap="tap" bindtouchstart="touchstart" catchtouchmove="touchmove">{{btnText}}</button>
        <view class="e2e-mask" wx:if="{{showInput}}">
            <view class="e2e-input">
                <input bindinput="bindInput" value="{{fileName}}" placeholder="未命名测试用例" />
                <view class="e2e-btnGroup">
                    <button catchtap="closeInput">取消</button>
                    <button catchtap="createScript">创建</button>
                </view>
            </view>
        </view>
    </view>
</template>

<script>

import {wxa, Throttle, toast, fetch} from '@wxa/core';
const START_BTN_TEXT = '开始录制';
const END_BTN_TEXT = '结束录制';
class e2eBtn {
    properties = {
    }
    data = {
        top: 1,
        left: 1,
        diffX: 0,
        diffY: 0,
        btnText: '',
        fileName: '',
        showInput: false
    }
    // 关闭测试用例命名弹框
    closeInput() {
        this.setData({
            showInput: false
        })
    }
    attached() {
        this.setData({
            btnText: this.$$e2e_state.recording ? END_BTN_TEXT : START_BTN_TEXT
        });
        wx.onAppRouteDone(() => {
            this.setData({
                btnText: this.$$e2e_state.recording ? END_BTN_TEXT : START_BTN_TEXT
            });
        });
    }
    // 创建测试脚本，record上传
    async createScript() {
        console.log('e2etest upload record:', this.$$e2e_state.record);
        console.log('e2etest upload fileName:', this.data.fileName);
        let apiRecord = this.$$e2e_state.apiRecord;
        const apiRecordObj = [...apiRecord.entries()].reduce((obj, [key, value]) => (obj[key] = value, obj), {})
        console.log(apiRecord, apiRecordObj)
        try {
            let result = fetch('http://127.0.0.1:9421/record', {
                name: this.data.fileName,
                record: this.$$e2e_state.record,
                apiRecord: apiRecordObj
            }, {}, 'post');
            this.closeInput();
        } catch (err) {
            console.log(err);
            toast('脚本创建失败，请重试');
        }
    }
    bindInput(e) {
        this.setData({
            fileName: e.detail.value
        });
    }
    tap() {
        let btnText = START_BTN_TEXT;
        this.$$e2e_state.recording = !this.$$e2e_state.recording;
        // 开始录制 清空record数组
        if (this.$$e2e_state.recording) {
            btnText = END_BTN_TEXT;
            this.$$e2e_state.record.splice(0,this.$$e2e_state.record.length);
            this.$$e2e_state.apiRecord.clear();
        } else {
            // 结束录制 至少有一步录制操作，才显示弹框允许上传脚本
            if (this.$$e2e_state.record.length > 0) {
                this.setData({
                    showInput: true
                });
            }
        }
         this.setData({
            btnText
        });

    }
    touchstart(e) {
        // touchstart的时候，算出触摸点于btn内的位置，后续move时，计算btn的top、left需要减去这个差值
        this.setData({
            diffX: e.touches[0].pageX - e.currentTarget.offsetLeft,
            diffY: e.touches[0].pageY - e.currentTarget.offsetTop
        })
    }
    handleMinMax(num, min, max) {
        return num < min ? min : (num > max ? max : num);
    }
    @Throttle(100)
    touchmove(e) {
        // 移动范围不能超出屏幕
       let systemInfo = wx.getSystemInfoSync();
        let minLeft = -this.data.diffX;
        let minTop = -this.data.diffY;
        let maxLeft = systemInfo.windowWidth - this.data.diffX;
        let maxTop = systemInfo.windowHeight - this.data.diffY;
        let top = e.touches[0].pageY - this.data.diffY;
        let left = e.touches[0].pageX - this.data.diffX;
        this.setData({
            left: this.handleMinMax(left, minLeft, maxLeft),
            top: this.handleMinMax(top, minTop, maxTop)
        })
    }
}

wxa.launchComponent(e2eBtn);
</script>
<config>
{
    "component": true
}
</config>
<style lang="scss">
.e2e-startRecord{
    position: fixed;
    width: 200rpx;
    left: 0;
    z-index: 99999999999;
    background-color: #fff;
    color: #333;
    border: 1px solid #bbb;
    padding: 0px;
}
.e2e-input{
    background-color: #fff;
    position: fixed;
    width: 90%;
    left: 5%;
    top: 30%;
    z-index: 100;
    padding: 10rpx;
    border: 1px solid #ccc;
    border-radius: 5rpx;
    box-sizing: border-box;
}
.e2e-input input{
    border-bottom: 1px solid #ccc;
    margin-bottom: 20rpx;
    padding: 10rpx;
}
.e2e-btnGroup{
    display: flex;
}
.e2e-btnGroup button{
    flex: 1;
    border-radius: 0;
}
.e2e-mask{
    width: 100%;
    height: 100%;
    position: fixed;
    z-index: 99999999999;
    background: rgba(0,0,0,0.6);
    top: 0;
    left: 0;
}
</style>
